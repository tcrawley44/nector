{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\src\\\\components\\\\profiles\\\\ProfileInterests.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport \"../add-person/AddPersonStyles.css\";\nimport \"./ItemStyles.css\";\nimport TextFieldGroup from \"../common/TextFieldGroup\";\nimport { addNode, getNodes } from \"../../actions/nodeActions\";\nimport { getTree, test } from \"../../actions/treeactions\";\nimport { addInterest, getInterests, getProfiles } from \"../../actions/profileActions\";\nimport { Link } from 'react-router-dom';\nimport ProfileQueries from \"./ProfileQueries\";\n\nvar ProfileInterests =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProfileInterests, _Component);\n\n  function ProfileInterests(props) {\n    var _this;\n\n    _classCallCheck(this, ProfileInterests);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProfileInterests).call(this, props));\n\n    _this.getDataFromChild = function (dataFromChild) {\n      console.log(dataFromChild);\n      var passUp = [_this.props.tree2.name, dataFromChild];\n\n      _this.props.sendDataToParent(passUp);\n\n      _this.refs.foob.style = 'background-color: red';\n    };\n\n    _this.state = {\n      name: \"\",\n      parentName: \"\",\n      update: \"\"\n    };\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.update = _this.update.bind(_assertThisInitialized(_assertThisInitialized(_this))); //this.props.test();\n\n    return _this;\n  }\n\n  _createClass(ProfileInterests, [{\n    key: \"update\",\n    value: function update() {\n      this.props.updateParent();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getProfiles();\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(e) {\n      e.preventDefault();\n      var data = {\n        name: this.state.name //console.log(data.name, this.state.parentName );\n\n      };\n      this.props.addNode(data.name, this.state.parentName);\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var displayChildren = this.state.displayChildren;\n      var children;\n      var children2;\n      var listItems;\n\n      if (!(this.props.tree2 === \"\" || undefined)) {\n        //console.log(this.props.tree2.children);\n        console.log(this.props.tree2, \"tree2\");\n        var len = this.props.tree2.length;\n        var newSlice;\n        console.log(\"len\", len);\n\n        if (len > 1) {\n          newSlice = this.props.tree2.slice(1, len);\n          console.log(\"newslice\", newSlice);\n          listItems = newSlice.map(function (node) {\n            return React.createElement(\"div\", {\n              key: node.name,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 92\n              },\n              __self: this\n            }, React.createElement(ProfileInterestPort, {\n              sendDataToParent: _this2.getDataFromChild,\n              key: node[0],\n              tree2: node,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 93\n              },\n              __self: this\n            }));\n          });\n        } //console.log(listItems);\n\n      }\n\n      if (displayChildren) {\n        children = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, listItems);\n      } else {\n        children = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        });\n      }\n\n      var buttonName = \"test\";\n\n      if (!(this.props.tree2 === \"\")) {\n        //console.log(this.props.tree2.name);\n        buttonName = this.props.tree2[0];\n        this.state.parentName = buttonName;\n      }\n\n      var butt;\n\n      switch (buttonName) {\n        case \"Add\":\n          butt = React.createElement(Link, {\n            to: \"/add-person\",\n            className: \"btn  btn-info  ml-2\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132\n            },\n            __self: this\n          }, \"Add\");\n          break;\n\n        case \"All\":\n          butt = React.createElement(\"div\", {\n            className: \"btn  btn-info  ml-2\",\n            onClick: function onClick() {\n              _this2.setState(function (prevState) {\n                return {\n                  displayChildren: !prevState.displayChildren\n                };\n              });\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 137\n            },\n            __self: this\n          }, \"All\");\n\n          if (displayChildren) {\n            children = this.props.profile.profile.people.map(function (node) {\n              return React.createElement(\"div\", {\n                className: \"btn  btn-info mt-2 ml-2\",\n                key: node.name,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 148\n                },\n                __self: this\n              }, node.name);\n            });\n          }\n\n          break;\n\n        case \"Search\":\n          butt = React.createElement(\"div\", {\n            className: \"btn  btn-info  ml-2\",\n            onClick: function onClick() {\n              _this2.setState(function (prevState) {\n                return {\n                  displayChildren: !prevState.displayChildren\n                };\n              });\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 158\n            },\n            __self: this\n          }, \"Search\");\n\n          if (displayChildren) {\n            children = React.createElement(\"form\", {\n              className: \"ml-2 w-25\",\n              onSubmit: this.onSubmit,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 168\n              },\n              __self: this\n            }, React.createElement(TextFieldGroup, {\n              placeholder: \"name\",\n              name: \"name\",\n              value: this.state.name,\n              onChange: this.onChange,\n              info: \"name\",\n              autoComplete: \"off\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 170\n              },\n              __self: this\n            }), React.createElement(\"input\", {\n              type: \"submit\",\n              value: \"Submit\",\n              className: \"btn btn-info btn-block mt-4\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 182\n              },\n              __self: this\n            }));\n          }\n\n          break;\n\n        case \"Queries\":\n          butt = React.createElement(\"button\", {\n            type: \"button\",\n            id: \"foo\",\n            ref: \"foob\",\n            className: \"btn btn-info  ml-2 \",\n            onClick: function onClick() {\n              _this2.setState(function (prevState) {\n                return {\n                  displayChildren: !prevState.displayChildren\n                };\n              });\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 191\n            },\n            __self: this\n          }, \"Queries\");\n\n          if (displayChildren) {\n            var page;\n            page = this.props.location.pathname[this.props.location.pathname.length - 1];\n            children2 = this.props.profile.profile.people[page].queries.map(function (q) {\n              return React.createElement(ProfileQueries, {\n                updateParent: _this2.update,\n                current1: q,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 208\n                },\n                __self: this\n              });\n            });\n            children = React.createElement(\"div\", {\n              className: \"ml-3\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 214\n              },\n              __self: this\n            }, React.createElement(Link, {\n              to: \"/search-person\",\n              className: \"btn btn-info mb-2\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 215\n              },\n              __self: this\n            }, \"New Query\"), children2);\n          }\n\n          break;\n\n        case \"New Query\":\n          butt = React.createElement(Link, {\n            to: \"/search-person\",\n            className: \"btn btn-info\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 227\n            },\n            __self: this\n          }, \"New Query\");\n          break;\n\n        default:\n          butt = React.createElement(\"button\", {\n            type: \"button\",\n            id: \"foo\",\n            ref: \"foob\",\n            className: \"btn btn-info  ml-2 \",\n            onClick: function onClick() {\n              _this2.setState(function (prevState) {\n                return {\n                  displayChildren: !prevState.displayChildren\n                };\n              });\n\n              if (buttonName === \"Add\") {\n                console.log(\"equals\");\n              }\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 233\n            },\n            __self: this\n          }, buttonName);\n      } //console.log(\"hello\")\n\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"d-flex  flex-row ml-2 bd-highlight mb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, butt), React.createElement(\"div\", {\n        className: \"col nodeStack ml-3 p-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, children));\n    }\n  }]);\n\n  return ProfileInterests;\n}(Component);\n\nProfileInterests.propTypes = {\n  //getNodes: PropTypes.func.isRequired,\n  //node: PropTypes.object.isRequired\n  //getTree: PropTypes.func.isRequired,\n  //tree: PropTypes.object.isRequired,\n  //test: PropTypes.func.isRequired \n  //addNode: PropTypes.func\n  //errors: PropTypes.object.isRequired\n  interests: PropTypes.object,\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object,\n  auth: PropTypes.object\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    //node: state.node\n    //tree: state.tree\n    //errors: state.errors\n    interests: state.interests,\n    profile: state.profile,\n    auth: state.auth\n  };\n};\n\nvar ProfileInterestPort = connect(mapStateToProps, {\n  addNode: addNode,\n  getNodes: getNodes,\n  getTree: getTree,\n  test: test,\n  addInterest: addInterest,\n  getInterests: getInterests,\n  getProfiles: getProfiles\n})(withRouter(ProfileInterests));\nexport default ProfileInterestPort;","map":{"version":3,"sources":["C:\\Users\\tsc\\Desktop\\projects\\mern-nector-new\\client\\src\\components\\profiles\\ProfileInterests.js"],"names":["React","Component","connect","withRouter","PropTypes","TextFieldGroup","addNode","getNodes","getTree","test","addInterest","getInterests","getProfiles","Link","ProfileQueries","ProfileInterests","props","getDataFromChild","dataFromChild","console","log","passUp","tree2","name","sendDataToParent","refs","foob","style","state","parentName","update","onChange","bind","onSubmit","updateParent","e","preventDefault","data","setState","target","value","displayChildren","children","children2","listItems","undefined","len","length","newSlice","slice","map","node","buttonName","butt","prevState","profile","people","page","location","pathname","queries","q","propTypes","interests","object","func","isRequired","auth","mapStateToProps","ProfileInterestPort"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport {connect} from 'react-redux';\r\nimport {withRouter} from \"react-router-dom\";\r\nimport PropTypes from 'prop-types';\r\nimport \"../add-person/AddPersonStyles.css\";\r\nimport \"./ItemStyles.css\";\r\nimport TextFieldGroup from \"../common/TextFieldGroup\";\r\nimport {addNode,getNodes} from \"../../actions/nodeActions\";\r\nimport {getTree,test} from \"../../actions/treeactions\";\r\nimport {addInterest, getInterests, getProfiles} from \"../../actions/profileActions\";\r\nimport {Link} from 'react-router-dom';\r\nimport ProfileQueries from \"./ProfileQueries\";\r\n\r\nclass ProfileInterests extends Component {\r\n\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n           \r\n           name: \"\",\r\n           parentName: \"\",\r\n           update: \"\"\r\n        \r\n        }\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.update = this.update.bind(this);\r\n        //this.props.test();\r\n        \r\n    }\r\n      \r\n    update(){\r\n        this.props.updateParent(); \r\n        \r\n        \r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.getProfiles();\r\n    }\r\n       \r\n    onSubmit(e){\r\n        e.preventDefault();\r\n\r\n        const data = {\r\n            name: this.state.name   \r\n        }\r\n        \r\n            \r\n        //console.log(data.name, this.state.parentName );\r\n        \r\n        this.props.addNode(data.name, this.state.parentName);\r\n    }\r\n\r\n    \r\n\r\n    onChange(e) {\r\n        \r\n            this.setState({[e.target.name]: e.target.value});\r\n        \r\n    }\r\n\r\n    \r\n    getDataFromChild = (dataFromChild) => {\r\n        console.log(dataFromChild);\r\n        let passUp = [this.props.tree2.name, dataFromChild]\r\n        this.props.sendDataToParent(passUp);\r\n        this.refs.foob.style = 'background-color: red';\r\n        \r\n        \r\n    }\r\n   \r\n\r\n    render() {\r\n        const { displayChildren} = this.state; \r\n        \r\n        let children; \r\n        let children2;\r\n        let listItems;\r\n        \r\n        if(!(this.props.tree2 === \"\" || undefined)){\r\n            //console.log(this.props.tree2.children);\r\n            console.log(this.props.tree2, \"tree2\");\r\n            let len = this.props.tree2.length;\r\n            let newSlice;\r\n            console.log(\"len\",len);\r\n            if(len>1){\r\n                newSlice = this.props.tree2.slice(1,(len));\r\n                console.log(\"newslice\", newSlice);\r\n                listItems = newSlice.map((node) =>\r\n                    <div key = {node.name}>\r\n                        <ProfileInterestPort sendDataToParent = {this.getDataFromChild} key = {node[0]} tree2 = {node} />\r\n                    </div>\r\n                );\r\n            }\r\n            \r\n            \r\n            //console.log(listItems);\r\n        }\r\n        if(displayChildren){\r\n            children = (\r\n                <div >\r\n                {listItems}\r\n                \r\n                \r\n                </div>\r\n            )\r\n        }else{\r\n            children = (\r\n                \r\n                    <div></div>     \r\n                    \r\n                 \r\n            )\r\n        }\r\n        let buttonName = \"test\";\r\n         if(!(this.props.tree2 === \"\")){\r\n            //console.log(this.props.tree2.name);\r\n            buttonName = this.props.tree2[0];\r\n            this.state.parentName = buttonName; \r\n        }   \r\n        let butt; \r\n\r\n\r\n        \r\n\r\n        \r\n        switch (buttonName) {\r\n        case \"Add\":\r\n            butt = (\r\n                <Link to=\"/add-person\" className=\"btn  btn-info  ml-2\">Add</Link>\r\n            )\r\n            break;\r\n        case \"All\":\r\n            butt = (\r\n                <div  className=\"btn  btn-info  ml-2\" onClick ={() => {\r\n                    this.setState(prevState => ({\r\n                        displayChildren: !prevState.displayChildren\r\n                    }))\r\n                    \r\n                    \r\n                }}>All</div>\r\n            )\r\n            if(displayChildren){\r\n                children = (\r\n                    this.props.profile.profile.people.map((node) =>\r\n                        <div className=\"btn  btn-info mt-2 ml-2\" key = {node.name}>\r\n                            {node.name}\r\n                        </div>\r\n                    )\r\n                )\r\n            }\r\n            \r\n            break; \r\n        case \"Search\":\r\n            butt = (\r\n                <div  className=\"btn  btn-info  ml-2\" onClick ={() => {\r\n                    this.setState(prevState => ({\r\n                        displayChildren: !prevState.displayChildren\r\n                    }))\r\n                    \r\n                    \r\n                }}>Search</div>\r\n            )\r\n            if(displayChildren){\r\n                children = (\r\n                    <form  className = \"ml-2 w-25\" onSubmit = {this.onSubmit}>\r\n                               \r\n                        <TextFieldGroup \r\n                            placeholder = \"name\"\r\n                            name = \"name\"\r\n                            value = {this.state.name}\r\n                            onChange = {this.onChange}\r\n                            \r\n                            info = \"name\"\r\n                            autoComplete = \"off\"        \r\n                                    \r\n                        />     \r\n                                \r\n                               \r\n                        <input type = \"submit\" value= \"Submit\" className = \"btn btn-info btn-block mt-4\"/>\r\n                    </form>  \r\n                )\r\n                \r\n            }\r\n            \r\n        break;\r\n        case \"Queries\":\r\n            butt = (\r\n                <button type = \"button\" id = \"foo\" ref = \"foob\" className = \"btn btn-info  ml-2 \" onClick ={() => {\r\n                        this.setState(prevState => ({\r\n                            displayChildren: !prevState.displayChildren\r\n                        }))\r\n                        \r\n                        \r\n                    }}>\r\n                Queries\r\n                \r\n                </button> \r\n            )\r\n            if(displayChildren){\r\n                let page; \r\n                page = this.props.location.pathname[this.props.location.pathname.length - 1];\r\n                \r\n                children2 = (\r\n                    this.props.profile.profile.people[page].queries.map((q) =>\r\n                        <ProfileQueries updateParent = {this.update} current1 = {q}/>\r\n                    )\r\n                        \r\n                )\r\n                children = (\r\n\r\n                    <div className = \"ml-3\">\r\n                        <Link to= \"/search-person\" className = \"btn btn-info mb-2\">New Query</Link>\r\n                        {children2}\r\n                    </div>\r\n                    \r\n                )\r\n            }\r\n        \r\n        \r\n            break;\r\n        case \"New Query\":\r\n            butt = (\r\n\r\n                <Link to= \"/search-person\" className = \"btn btn-info\">New Query</Link>\r\n            )\r\n            \r\n            break;\r\n        default:\r\n            butt = (\r\n                <button type = \"button\" id = \"foo\" ref = \"foob\" className = \"btn btn-info  ml-2 \" onClick ={() => {\r\n                        this.setState(prevState => ({\r\n                            displayChildren: !prevState.displayChildren\r\n                        }))\r\n                        if(buttonName === \"Add\"){\r\n                            console.log(\"equals\");\r\n                            \r\n                        }\r\n                        \r\n                    }}>\r\n                {buttonName}\r\n                \r\n            </button> \r\n            )\r\n        }\r\n        \r\n        //console.log(\"hello\")\r\n        return (\r\n            <div>\r\n                <div className = \"d-flex  flex-row ml-2 bd-highlight mb-2\">\r\n                                    \r\n                    {butt}\r\n                    {/* <button className = \"btn .text-secondary btn-info butt2\" onClick ={() => {\r\n                            this.refs.foob.style = 'background-color: red';\r\n                            this.props.addInterest(buttonName);\r\n                            this.props.sendDataToParent([buttonName]);\r\n                        }}>\r\n                        >\r\n                    </button> */}\r\n                </div>\r\n                <div className = \"col nodeStack ml-3 p-0\">\r\n                    {children}\r\n                    \r\n                </div>\r\n\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nProfileInterests.propTypes = {\r\n    //getNodes: PropTypes.func.isRequired,\r\n    //node: PropTypes.object.isRequired\r\n    //getTree: PropTypes.func.isRequired,\r\n    //tree: PropTypes.object.isRequired,\r\n    //test: PropTypes.func.isRequired \r\n    //addNode: PropTypes.func\r\n    //errors: PropTypes.object.isRequired\r\n    interests: PropTypes.object,\r\n    getProfiles: PropTypes.func.isRequired,\r\n    profile: PropTypes.object,\r\n    auth: PropTypes.object\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    //node: state.node\r\n    //tree: state.tree\r\n    //errors: state.errors\r\n    interests: state.interests,\r\n    profile: state.profile,\r\n    auth: state.auth\r\n})\r\n\r\nconst ProfileInterestPort = connect(mapStateToProps, {addNode, getNodes, getTree, test, addInterest, getInterests,getProfiles})(withRouter(ProfileInterests));\r\nexport default ProfileInterestPort;"]},"metadata":{},"sourceType":"module"}