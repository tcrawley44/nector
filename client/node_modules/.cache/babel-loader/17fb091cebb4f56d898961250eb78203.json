{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\src\\\\components\\\\chat\\\\Chat.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getPosts, addPosts } from \"../../actions/postActions\";\nimport TextAreaFieldGroup from \"../common/TextAreaFieldGroup\";\nimport { withRouter } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport \"./chatStyles.css\";\n\nvar Chat =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Chat, _Component);\n\n  function Chat(props) {\n    var _this;\n\n    _classCallCheck(this, Chat);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Chat).call(this, props));\n\n    _this.scrollToBottom = function () {\n      _this.messagesEnd.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    };\n\n    _this.state = {\n      post: \"\",\n      update: 0\n    };\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n\n    _this.props.getPosts();\n\n    return _this;\n  }\n\n  _createClass(Chat, [{\n    key: \"onSubmit\",\n    value: function onSubmit(e) {\n      e.preventDefault();\n      var data = {\n        post: this.state.post\n      };\n      this.props.addPosts(data);\n      this.props.getPosts();\n      this.state.update = this.state.update + 1;\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.scrollToBottom();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.scrollToBottom();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var listPosts;\n      var postArray;\n\n      if (this.props.posts.posts.posts) {\n        postArray = this.props.posts.posts.posts.map(function (post) {\n          return React.createElement(\"p\", {\n            className: \"text-light\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61\n            },\n            __self: this\n          }, post.body);\n        });\n        listPosts = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, postArray);\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(TextAreaFieldGroup, {\n        placeholder: \"post\",\n        name: \"post\",\n        value: this.state.post,\n        onChange: this.onChange,\n        info: \"post\",\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        className: \"btn btn-info btn-block mt-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"container postBlock mt-3\",\n        ref: function ref(el) {\n          _this2.messagesEnd = el;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, listPosts, React.createElement(\"p\", {\n        className: \"text-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Chat;\n}(Component);\n\nChat.propTypes = {\n  posts: PropTypes.object.isRequired,\n  getPosts: PropTypes.func.isRequired,\n  addPosts: PropTypes.func\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    posts: state.posts\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getPosts: getPosts,\n  addPosts: addPosts\n})(withRouter(Chat));","map":{"version":3,"sources":["C:\\Users\\tsc\\Desktop\\projects\\mern-nector-new\\client\\src\\components\\chat\\Chat.js"],"names":["React","Component","connect","getPosts","addPosts","TextAreaFieldGroup","withRouter","PropTypes","Chat","props","scrollToBottom","messagesEnd","scrollIntoView","behavior","state","post","update","onChange","bind","onSubmit","e","preventDefault","data","setState","target","name","value","listPosts","postArray","posts","map","body","el","propTypes","object","isRequired","func","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport {connect} from 'react-redux';\r\nimport {getPosts, addPosts} from \"../../actions/postActions\";\r\nimport TextAreaFieldGroup from \"../common/TextAreaFieldGroup\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport PropTypes from 'prop-types';\r\nimport \"./chatStyles.css\";\r\n\r\nclass Chat extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            post: \"\",\r\n            update: 0\r\n            \r\n        }\r\n        \r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.props.getPosts(); \r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n        \r\n        let data = {\r\n            post: this.state.post\r\n        }\r\n        this.props.addPosts(data); \r\n        this.props.getPosts(); \r\n        this.state.update = this.state.update + 1;\r\n        \r\n    }\r\n\r\n    onChange(e) {\r\n        \r\n        this.setState({[e.target.name]: e.target.value});\r\n    \r\n    }\r\n\r\n    scrollToBottom = () => {\r\n        this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n      \r\n    componentDidMount() {\r\n        this.scrollToBottom();\r\n    }\r\n      \r\n    componentDidUpdate() {\r\n        this.scrollToBottom();\r\n    }\r\n\r\n\r\n    render() {\r\n        let listPosts; \r\n        let postArray; \r\n\r\n        if(this.props.posts.posts.posts){\r\n            postArray = this.props.posts.posts.posts.map(post => (\r\n                <p className = \"text-light\">{post.body}</p>\r\n            )\r\n\r\n            )\r\n            listPosts = (\r\n                <div>{postArray}</div>\r\n            )\r\n        }\r\n\r\n        return (\r\n        <div>\r\n            \r\n            <form  onSubmit = {this.onSubmit}>\r\n                                    \r\n                <TextAreaFieldGroup\r\n                    placeholder = \"post\"\r\n                    name = \"post\"\r\n                    value = {this.state.post}\r\n                    onChange = {this.onChange}\r\n                    \r\n                    info = \"post\"\r\n                    autoComplete = \"off\"\r\n                    \r\n                />\r\n\r\n                <input type = \"submit\" value= \"Submit\" className = \"btn btn-info btn-block mt-2\"/>\r\n            </form>   \r\n\r\n            <div className = \"container postBlock mt-3\" ref={(el) => { this.messagesEnd = el; }}>\r\n                <div className = \"col\">\r\n                    {listPosts}\r\n                    <p className = \"text-light\"></p>\r\n                </div>\r\n\r\n                   \r\n            </div>\r\n                             \r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nChat.propTypes = {\r\n    posts: PropTypes.object.isRequired,\r\n    getPosts: PropTypes.func.isRequired,\r\n    addPosts: PropTypes.func\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    posts: state.posts\r\n    \r\n});\r\n\r\nexport default connect(mapStateToProps, {getPosts, addPosts})(withRouter(Chat))"]},"metadata":{},"sourceType":"module"}