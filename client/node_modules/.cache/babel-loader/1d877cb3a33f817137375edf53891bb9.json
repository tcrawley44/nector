{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\src\\\\components\\\\profiles\\\\ProfileQueries.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { deleteQuery } from \"../../actions/profileActions\"; //this class defines each query and its children in the profile drop down \n\nvar ProfileQueries =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProfileQueries, _Component);\n\n  function ProfileQueries(props) {\n    var _this;\n\n    _classCallCheck(this, ProfileQueries);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProfileQueries).call(this, props));\n    _this.state = {\n      currentProfile: \"\",\n      update: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(ProfileQueries, [{\n    key: \"deleteQuery\",\n    value: function deleteQuery(profileData) {\n      this.props.deleteQuery(profileData);\n      this.setState({\n        update: \"\"\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var displayChildren = this.state.displayChildren;\n      var display;\n\n      if (displayChildren) {\n        var profileItems = this.props.current1.results.map(function (profile) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"btn  btn-info mt-2 \",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33\n            },\n            __self: this\n          }, profile));\n        });\n        display = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, profileItems);\n      } //console.log(this.props.profile.profile.people[0].queries);\n\n\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ml-2 row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"btn btn-info mb-2\",\n        onClick: function onClick() {\n          _this2.setState(function (prevState) {\n            return {\n              displayChildren: !prevState.displayChildren\n            };\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \" \", this.props.current1.name), React.createElement(\"div\", {\n        className: \"btn btn-info mb-2 x\",\n        onClick: function onClick() {\n          var profileData = {\n            query: _this2.props.current1.name,\n            id: _this2.props.auth.id\n          };\n          deleteQuery(profileData);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"x\"), React.createElement(\"div\", {\n        className: \"  mb-2 ml-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, display)));\n    }\n  }]);\n\n  return ProfileQueries;\n}(Component);\n\nProfileQueries.propTypes = {\n  deleteQuery: PropTypes.func,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    profile: state.profile,\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps, {\n  deleteQuery: deleteQuery\n})(ProfileQueries);","map":{"version":3,"sources":["C:\\Users\\tsc\\Desktop\\projects\\mern-nector-new\\client\\src\\components\\profiles\\ProfileQueries.js"],"names":["React","Component","connect","PropTypes","deleteQuery","ProfileQueries","props","state","currentProfile","update","profileData","setState","displayChildren","display","profileItems","current1","results","map","profile","prevState","name","query","id","auth","propTypes","func","object","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport PropTypes from 'prop-types';\r\nimport {deleteQuery} from \"../../actions/profileActions\";\r\n//this class defines each query and its children in the profile drop down \r\n\r\nclass ProfileQueries extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n           \r\n           currentProfile: \"\",\r\n           update: \"\"\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    deleteQuery(profileData) {\r\n        this.props.deleteQuery(profileData);\r\n        this.setState({update: \"\"});\r\n    }\r\n\r\n    render() {\r\n\r\n        const {displayChildren} = this.state;\r\n        let display; \r\n\r\n        if(displayChildren){\r\n            let profileItems = this.props.current1.results.map(profile => (\r\n                <div>             \r\n                    <div className = \"btn  btn-info mt-2 \" >\r\n                    \r\n                            \r\n                    \r\n                        \r\n                        {profile}\r\n                        \r\n                    </div>\r\n                    \r\n                </div>   \r\n            ))\r\n            display = (\r\n                <div>\r\n                    {profileItems}\r\n                </div>\r\n            )\r\n        }\r\n        //console.log(this.props.profile.profile.people[0].queries);\r\n        return (\r\n            <div className = \"container\" >\r\n                <div className = \"ml-2 row\">\r\n                    \r\n                    <div className = \"btn btn-info mb-2\" onClick ={() => {\r\n                        this.setState(prevState => ({\r\n                        displayChildren: !prevState.displayChildren\r\n                        }))}}> {this.props.current1.name}\r\n                        \r\n                    </div>\r\n                    <div className = \"btn btn-info mb-2 x\" onClick ={() => {\r\n                        \r\n                        const profileData = {\r\n                            query: this.props.current1.name,\r\n                            \r\n                           \r\n                            id: this.props.auth.id\r\n                            \r\n                        }\r\n                        deleteQuery(profileData);\r\n                        }}>\r\n                    \r\n                        x\r\n                    </div>\r\n                    <div className = \"  mb-2 ml-3\">\r\n                        {display}\r\n                        \r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nProfileQueries.propTypes = {\r\n    deleteQuery: PropTypes.func,\r\n    profile: PropTypes.object.isRequired,\r\n    auth: PropTypes.object\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile,\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, {deleteQuery})(ProfileQueries);"]},"metadata":{},"sourceType":"module"}