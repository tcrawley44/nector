{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\src\\\\components\\\\profiles\\\\Profiles.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { getProfiles, getNetwork } from '../../actions/profileActions';\nimport ProfileItem from \"./ProfileItem\";\nimport AddPerson from \"../add-person/AddPerson\";\nimport ProfileInterests from \"./ProfileInterests\";\nimport EditPerson from \"../edit-person/EditPerson\";\nimport Friends from \"./Friends\";\nimport Queries from \"./Queries\";\nimport \"./ItemStyles.css\";\n\nvar Profiles =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Profiles, _Component);\n\n  function Profiles(props) {\n    var _this;\n\n    _classCallCheck(this, Profiles);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Profiles).call(this, props));\n    _this.state = {\n      currentProfile: \"\"\n    };\n\n    _this.props.getProfiles();\n\n    return _this;\n  }\n\n  _createClass(Profiles, [{\n    key: \"update\",\n    value: function update() {\n      this.setState(function (prevState) {\n        return {\n          displayNetwork: !prevState.displayNetwork\n        };\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getProfiles();\n      this.props.getNetwork();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var box;\n\n      if (this.props.profile.profile) {\n        if (this.props.profile.profile.people) {\n          var _this$props$profile = this.props.profile,\n              profile = _this$props$profile.profile,\n              network = _this$props$profile.network,\n              loading = _this$props$profile.loading;\n          console.log(profile, \"profile\");\n          var _this$state = this.state,\n              displayInfo = _this$state.displayInfo,\n              displayEdit = _this$state.displayEdit,\n              displayNetwork = _this$state.displayNetwork,\n              displayMore = _this$state.displayMore,\n              displayInterests = _this$state.displayInterests;\n          console.log(profile, \"new profiles\");\n\n          if (profile.people) {\n            this.state.currentProfile = profile.people[this.props.match.params.id];\n          }\n\n          var info;\n          var profileItems;\n          var ints;\n          var more;\n          var network2;\n          var displayProfile = true;\n          var isUsersAccount;\n          var displayEditButton;\n          var currentPerson;\n\n          if (this.props.match.params.id >= this.props.profile.profile.people.length) {\n            currentPerson = this.props.location.state.passedPerson;\n            this.state.currentProfile = currentPerson;\n          } else {\n            currentPerson = profile.people[this.props.match.params.id];\n          }\n\n          if (localStorage.user === this.props.match.params.id) {\n            isUsersAccount = true;\n          } else {\n            isUsersAccount = false;\n          }\n\n          console.log(isUsersAccount);\n          console.log(currentPerson, \"currpurr\");\n          console.log(currentPerson.hasOwnProperty('isClaimed'), \"has prop\");\n\n          if (currentPerson.hasOwnProperty('isClaimed') && currentPerson.isClaimed === \"true\") {\n            if (isUsersAccount) {\n              displayEditButton = true;\n              console.log(\"account match and is claimed\");\n            } else {\n              displayEditButton = false;\n              console.log(\"account not match and is claimed\");\n            }\n          } else {\n            displayEditButton = true;\n            console.log(\"not claimed\");\n          }\n\n          var stars;\n\n          if (currentPerson.hasOwnProperty('stars')) {\n            stars = React.createElement(\"p\", {\n              className: \"text-light\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 102\n              },\n              __self: this\n            }, \"Stars: \", currentPerson.stars, \" \");\n          } else {\n            stars = React.createElement(\"p\", {\n              className: \"text-light\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 106\n              },\n              __self: this\n            }, \"Stars: 0 \");\n          }\n\n          var editButtonView;\n\n          if (displayEditButton) {\n            editButtonView = React.createElement(\"div\", {\n              className: \"btn btn-info ml-2\",\n              onClick: function onClick() {\n                _this2.setState(function (prevState) {\n                  return {\n                    displayEdit: !prevState.displayEdit\n                  };\n                });\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 113\n              },\n              __self: this\n            }, \"Edit Profile\");\n          }\n\n          if (displayMore) {\n            more = React.createElement(\"div\", {\n              className: \" mt-2\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 126\n              },\n              __self: this\n            }, React.createElement(ProfileInterests, {\n              tree2: this.state.currentProfile.interests[0],\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 127\n              },\n              __self: this\n            }));\n          }\n\n          if (isUsersAccount) {\n            console.log(network, \"network\");\n            network2 =\n            /* <div className = \"mt-2 ml-2\">\r\n                <Friends current = {this.state.currentProfile.name}/>\r\n                  <Queries current = {this.state.currentProfile.name}/>\r\n            </div>  */\n            React.createElement(ProfileInterests, {\n              updateParent: this.update,\n              tree2: network,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 140\n              },\n              __self: this\n            });\n          }\n\n          if (displayEdit) {\n            box = React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 150\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"btn btn-info w-25\",\n              onClick: function onClick() {\n                _this2.setState(function (prevState) {\n                  return {\n                    displayEdit: !prevState.displayEdit\n                  };\n                });\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 151\n              },\n              __self: this\n            }, \"Back\"), React.createElement(EditPerson, {\n              currName: this.state.currentProfile.name,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 159\n              },\n              __self: this\n            }));\n          } else {\n            if (displayInfo) {\n              info = React.createElement(\"div\", {\n                className: \"row\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 167\n                },\n                __self: this\n              }, React.createElement(\"div\", {\n                className: \"col text-light\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 168\n                },\n                __self: this\n              }, React.createElement(\"h4\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 169\n                },\n                __self: this\n              }, \" \", this.state.currentProfile.sex), React.createElement(\"h4\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 170\n                },\n                __self: this\n              }, \" \", this.state.currentProfile.age), React.createElement(\"h4\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 171\n                },\n                __self: this\n              }, \" \", this.state.currentProfile.city, \", \", this.state.currentProfile.state)));\n            }\n\n            if (profile === null || loading) {\n              profileItems = \"loading\";\n            } else {\n              if (displayProfile) {\n                box = React.createElement(\"div\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 181\n                  },\n                  __self: this\n                }, React.createElement(\"h1\", {\n                  className: \" display-5 text-center text-light\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 182\n                  },\n                  __self: this\n                }, this.state.currentProfile.name), stars, React.createElement(\"div\", {\n                  className: \"btn btn-info  \",\n                  onClick: function onClick() {\n                    _this2.setState(function (prevState) {\n                      return {\n                        displayInfo: !prevState.displayInfo\n                      };\n                    });\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 184\n                  },\n                  __self: this\n                }, \"Basic Info\"), editButtonView, info, React.createElement(\"div\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 197\n                  },\n                  __self: this\n                }, React.createElement(\"div\", {\n                  className: \"btn btn-info mt-2 w-25\",\n                  onClick: function onClick() {\n                    _this2.setState(function (prevState) {\n                      return {\n                        displayMore: !prevState.displayMore\n                      };\n                    });\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 199\n                  },\n                  __self: this\n                }, \"More\"), more), React.createElement(\"div\", {\n                  className: \"mt-2\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 210\n                  },\n                  __self: this\n                }, network2));\n              } else {\n                var newProfile = profile.people;\n\n                if (newProfile.length > 0) {\n                  //console.log(profile[0]);\n                  profileItems = newProfile.map(function (profile) {\n                    return React.createElement(\"div\", {\n                      className: \"btn personButton btn-info\",\n                      onClick: function onClick() {\n                        _this2.setState(function (prevState) {\n                          return {\n                            displayProfile: !prevState.displayProfile\n                          };\n                        });\n\n                        _this2.setState(function (prevState) {\n                          return {\n                            currentProfile: profile\n                          };\n                        });\n                      },\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 225\n                      },\n                      __self: this\n                    }, profile.name)\n                    /* <ProfileItem key = {profile._id} profile = {profile} /> */\n                    ;\n                  });\n                  box = React.createElement(\"div\", {\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 243\n                    },\n                    __self: this\n                  }, React.createElement(\"h1\", {\n                    className: \" display-4 text-center\",\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 244\n                    },\n                    __self: this\n                  }, \"List People\"), React.createElement(\"div\", {\n                    className: \"profiles\",\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 249\n                    },\n                    __self: this\n                  }, React.createElement(\"div\", {\n                    className: \"container\",\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 251\n                    },\n                    __self: this\n                  }, React.createElement(\"div\", {\n                    className: \"row\",\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 252\n                    },\n                    __self: this\n                  }, React.createElement(\"div\", {\n                    className: \"col-md-4\",\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 253\n                    },\n                    __self: this\n                  }, profileItems)))));\n                } else {\n                  profileItems = React.createElement(\"h4\", {\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 264\n                    },\n                    __self: this\n                  }, \"no profiles found...\");\n                }\n              }\n            }\n          }\n        } else {\n          box = React.createElement(\"h1\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 271\n            },\n            __self: this\n          }, \"loading...\");\n        }\n      } else {\n        box = React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276\n          },\n          __self: this\n        }, \"loading...\");\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"listScroll row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col mt-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, box)));\n    }\n  }]);\n\n  return Profiles;\n}(Component);\n\nProfiles.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  network: PropTypes.object,\n  auth: PropTypes.object\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    profile: state.profile,\n    network: state.network,\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getProfiles: getProfiles,\n  getNetwork: getNetwork\n})(Profiles);","map":{"version":3,"sources":["C:\\Users\\tsc\\Desktop\\projects\\mern-nector-new\\client\\src\\components\\profiles\\Profiles.js"],"names":["React","Component","connect","PropTypes","getProfiles","getNetwork","ProfileItem","AddPerson","ProfileInterests","EditPerson","Friends","Queries","Profiles","props","state","currentProfile","setState","prevState","displayNetwork","box","profile","people","network","loading","console","log","displayInfo","displayEdit","displayMore","displayInterests","match","params","id","info","profileItems","ints","more","network2","displayProfile","isUsersAccount","displayEditButton","currentPerson","length","location","passedPerson","localStorage","user","hasOwnProperty","isClaimed","stars","editButtonView","interests","update","name","sex","age","city","newProfile","map","propTypes","func","isRequired","object","auth","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport PropTypes from 'prop-types';\r\nimport {getProfiles,getNetwork} from '../../actions/profileActions';\r\nimport ProfileItem from \"./ProfileItem\";\r\nimport AddPerson from \"../add-person/AddPerson\";\r\nimport ProfileInterests from \"./ProfileInterests\";\r\nimport EditPerson from \"../edit-person/EditPerson\";\r\nimport Friends from \"./Friends\";\r\nimport Queries from \"./Queries\";\r\nimport \"./ItemStyles.css\";\r\nclass Profiles extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n           \r\n           currentProfile: \"\"\r\n        \r\n        }\r\n        this.props.getProfiles()\r\n        \r\n    }\r\n\r\n    update(){\r\n        this.setState(prevState => ({\r\n            displayNetwork: !prevState.displayNetwork\r\n        }))\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.getProfiles();\r\n        this.props.getNetwork();\r\n        \r\n    }\r\n  \r\n    render() {\r\n        let box; \r\n        if(this.props.profile.profile){\r\n\r\n        \r\n            if(this.props.profile.profile.people){\r\n            const {profile, network, loading} = this.props.profile;\r\n            console.log(profile, \"profile\");\r\n            const {displayInfo,displayEdit, displayNetwork, displayMore, displayInterests } = this.state; \r\n            console.log(profile, \"new profiles\");\r\n            if(profile.people){\r\n                \r\n                this.state.currentProfile = profile.people[this.props.match.params.id];\r\n                \r\n            }\r\n            \r\n            let info;\r\n            let profileItems;\r\n            let ints; \r\n            let more;\r\n            let network2; \r\n            let displayProfile = true; \r\n            let isUsersAccount; \r\n            let displayEditButton; \r\n            let currentPerson;\r\n            \r\n\r\n            \r\n            \r\n            if(this.props.match.params.id >= this.props.profile.profile.people.length){\r\n                currentPerson = this.props.location.state.passedPerson;\r\n                this.state.currentProfile = currentPerson;\r\n            }else{\r\n                currentPerson = profile.people[this.props.match.params.id];\r\n            }\r\n\r\n            \r\n                if(localStorage.user === this.props.match.params.id){\r\n                    isUsersAccount = true; \r\n                    \r\n                }else{\r\n                    isUsersAccount = false; \r\n                }\r\n                console.log(isUsersAccount);\r\n\r\n                \r\n                console.log(currentPerson, \"currpurr\");\r\n                \r\n                console.log(currentPerson.hasOwnProperty('isClaimed'), \"has prop\");\r\n                if((currentPerson.hasOwnProperty('isClaimed'))&& (currentPerson.isClaimed === \"true\") ){\r\n                    if(isUsersAccount){\r\n                        displayEditButton = true; \r\n                        console.log(\"account match and is claimed\");\r\n                    }else{\r\n                        displayEditButton = false; \r\n                        console.log(\"account not match and is claimed\");\r\n                    }\r\n                }else{\r\n                    displayEditButton = true; \r\n                    console.log(\"not claimed\");\r\n                }\r\n\r\n                let stars; \r\n                if(currentPerson.hasOwnProperty('stars')){\r\n                    stars = (\r\n                        <p className = \"text-light\">Stars: {currentPerson.stars} </p>\r\n                    )\r\n                }else{\r\n                    stars = (\r\n                    <p className = \"text-light\">Stars: 0 </p>\r\n                    )\r\n                }\r\n            \r\n            let editButtonView; \r\n            if(displayEditButton){\r\n                editButtonView = (\r\n                    <div className = \"btn btn-info ml-2\" onClick ={() => {\r\n                        this.setState(prevState => ({\r\n                            displayEdit: !prevState.displayEdit\r\n                            \r\n                        }))}}>\r\n                        \r\n                        Edit Profile\r\n                        \r\n                    </div>\r\n                )\r\n            }\r\n\r\n            if(displayMore){\r\n                more = (<div className = \" mt-2\">\r\n                    <ProfileInterests tree2 = {this.state.currentProfile.interests[0]}/>\r\n                </div>)\r\n                \r\n            }\r\n            if(isUsersAccount){\r\n                console.log(network, \"network\")\r\n                network2 = (\r\n                    /* <div className = \"mt-2 ml-2\">\r\n                        <Friends current = {this.state.currentProfile.name}/>\r\n\r\n                        <Queries current = {this.state.currentProfile.name}/>\r\n                    </div>  */\r\n                    \r\n                    <ProfileInterests updateParent = {this.update} tree2 = {network}/>           \r\n                                    \r\n                )\r\n                \r\n            }\r\n            \r\n            \r\n            \r\n                if(displayEdit){\r\n                    box = (\r\n                        <div>\r\n                            <div className = \"btn btn-info w-25\" onClick ={() => {\r\n                                this.setState(prevState => ({\r\n                                    displayEdit: !prevState.displayEdit\r\n                                }))}}>\r\n                                \r\n                                Back\r\n                                \r\n                            </div>\r\n                            <EditPerson currName = {this.state.currentProfile.name}/>\r\n                        </div>\r\n                    )\r\n                }else{\r\n\r\n                \r\n                    if(displayInfo){\r\n                        info = (\r\n                            <div className = \"row\">\r\n                                <div className = \"col text-light\">\r\n                                    <h4> {this.state.currentProfile.sex}</h4>\r\n                                    <h4> {this.state.currentProfile.age}</h4>\r\n                                    <h4> {this.state.currentProfile.city}, {this.state.currentProfile.state}</h4>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                    if (profile === null || loading) {\r\n                        profileItems = \"loading\";\r\n                    }else{\r\n                        if(displayProfile){\r\n                            box = (\r\n                                <div>\r\n                                    <h1 className = \" display-5 text-center text-light\">{this.state.currentProfile.name}</h1>\r\n                                    {stars}\r\n                                    <div className = \"btn btn-info  \" onClick ={() => {\r\n                                        this.setState(prevState => ({\r\n                                            displayInfo: !prevState.displayInfo\r\n                                        }))}}>\r\n                                        \r\n                                        Basic Info\r\n                                        \r\n                                    </div>\r\n                                    {editButtonView}\r\n                                    \r\n                                \r\n\r\n                                    {info}\r\n                                    <div >\r\n                                    \r\n                                        <div className = \"btn btn-info mt-2 w-25\" onClick ={() => {\r\n                                            this.setState(prevState => ({\r\n                                                displayMore: !prevState.displayMore\r\n                                                \r\n                                            }))}}>\r\n                                            \r\n                                            More\r\n                                            \r\n                                        </div>\r\n                                        {more}\r\n                                    </div>\r\n                                    <div className = \"mt-2\">\r\n                                    {network2}    \r\n                                    </div>\r\n                                    \r\n                                    \r\n                                </div>\r\n                                \r\n                            )\r\n                        }else{\r\n\r\n                            let newProfile = profile.people;\r\n                            if(newProfile.length > 0){\r\n                                //console.log(profile[0]);\r\n                                profileItems = newProfile.map(profile => (\r\n                                    \r\n                                    <div className = \"btn personButton btn-info\" onClick ={() => {\r\n                                        this.setState(prevState => ({\r\n                                            displayProfile: !prevState.displayProfile\r\n                                            \r\n                                        }))\r\n                                        this.setState(prevState => ({\r\n                                            currentProfile: profile\r\n                                        \r\n                                        }))\r\n                                            \r\n                                        }}>\r\n                                        \r\n                                        {profile.name}\r\n                                        \r\n                                    </div>\r\n                                    /* <ProfileItem key = {profile._id} profile = {profile} /> */\r\n                                ))\r\n                                box = (\r\n                                    <div>\r\n                                        <h1 className = \" display-4 text-center\">List People</h1>\r\n                                                \r\n                                                    \r\n                                                \r\n\r\n                                        <div className = \"profiles\">\r\n                                            \r\n                                            <div className = \"container\">\r\n                                                <div className = \"row\">\r\n                                                    <div className = \"col-md-4\">\r\n                                                        \r\n                                                        {profileItems}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            }else{\r\n                                profileItems = <h4>no profiles found...</h4>\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }else{\r\n                box = (\r\n                    <h1>loading...</h1>\r\n                )\r\n            }\r\n        }else{\r\n            box = (\r\n                <h1>loading...</h1>\r\n            )\r\n        }\r\n\r\n\r\n        return (\r\n            <div >\r\n                \r\n\r\n                        <div className = \"listScroll row\" >\r\n                            <div className = \"col mt-10\">\r\n                                {box}\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    \r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nProfiles.propTypes = {\r\n    getProfiles: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    network: PropTypes.object,\r\n    auth: PropTypes.object\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile,\r\n    network: state.network,\r\n    auth: state.auth\r\n})\r\nexport default connect(mapStateToProps, {getProfiles, getNetwork})(Profiles);"]},"metadata":{},"sourceType":"module"}