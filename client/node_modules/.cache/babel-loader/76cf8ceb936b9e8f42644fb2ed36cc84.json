{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector\\\\client\\\\src\\\\components\\\\profiles\\\\Profiles.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { getProfiles } from '../../actions/profileActions';\nimport ProfileItem from \"./ProfileItem\";\n\nvar Profiles =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Profiles, _Component);\n\n  function Profiles() {\n    _classCallCheck(this, Profiles);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Profiles).apply(this, arguments));\n  }\n\n  _createClass(Profiles, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getProfiles();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$profile = this.props.profile,\n          profile = _this$props$profile.profile,\n          loading = _this$props$profile.loading;\n      var profileItems;\n\n      if (profile === null || loading) {\n        profileItems = \"loading\";\n      } else {\n        if (profile.length > 0) {\n          console.log(profile.user.name);\n          profileItems = profile.map(function (profile) {\n            return React.createElement(ProfileItem, {\n              key: profile._id,\n              profile: profile,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 27\n              },\n              __self: this\n            });\n          });\n        } else {\n          profileItems = React.createElement(\"h4\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30\n            },\n            __self: this\n          }, \"no profiles found...\");\n        }\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"profiles\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \" display-4 text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"profiles\"), React.createElement(\"p\", {\n        className: \"lead text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"connect with other peeps\"), profileItems)))));\n    }\n  }]);\n\n  return Profiles;\n}(Component);\n\nProfiles.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    profile: state.profile\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getProfiles: getProfiles\n})(Profiles);","map":{"version":3,"sources":["C:\\Users\\tsc\\Desktop\\projects\\mern-nector\\client\\src\\components\\profiles\\Profiles.js"],"names":["React","Component","connect","PropTypes","getProfiles","ProfileItem","Profiles","props","profile","loading","profileItems","length","console","log","user","name","map","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,WAAR,QAA0B,8BAA1B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;IAEMC,Q;;;;;;;;;;;;;wCAEiB;AACf,WAAKC,KAAL,CAAWH,WAAX;AAEH;;;6BAEQ;AAAA,gCACsB,KAAKG,KAAL,CAAWC,OADjC;AAAA,UACEA,OADF,uBACEA,OADF;AAAA,UACWC,OADX,uBACWA,OADX;AAIL,UAAIC,YAAJ;;AAEA,UAAIF,OAAO,KAAK,IAAZ,IAAoBC,OAAxB,EAAiC;AAC7BC,QAAAA,YAAY,GAAG,SAAf;AACH,OAFD,MAEK;AACD,YAAGF,OAAO,CAACG,MAAR,GAAiB,CAApB,EAAsB;AAClBC,UAAAA,OAAO,CAACC,GAAR,CAAYL,OAAO,CAACM,IAAR,CAAaC,IAAzB;AACAL,UAAAA,YAAY,GAAGF,OAAO,CAACQ,GAAR,CAAY,UAAAR,OAAO;AAAA,mBAE9B,oBAAC,WAAD;AAAa,cAAA,GAAG,EAAIA,OAAO,CAACS,GAA5B;AAAiC,cAAA,OAAO,EAAIT,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAF8B;AAAA,WAAnB,CAAf;AAIH,SAND,MAMK;AACDE,UAAAA,YAAY,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAAf;AACH;AACJ;;AAED,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAG,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAG,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAG,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI;AAAG,QAAA,SAAS,EAAG,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAFJ,EAKKA,YALL,CADJ,CADJ,CADJ,CADJ,CADJ;AAiBL;;;;EA5CoBT,S;;AA+CvBK,QAAQ,CAACY,SAAT,GAAqB;AACjBd,EAAAA,WAAW,EAAED,SAAS,CAACgB,IAAV,CAAeC,UADX;AAEjBZ,EAAAA,OAAO,EAAEL,SAAS,CAACkB,MAAV,CAAiBD;AAFT,CAArB;;AAKA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAC9Bf,IAAAA,OAAO,EAAEe,KAAK,CAACf;AADe,GAAL;AAAA,CAA7B;;AAGA,eAAeN,OAAO,CAACoB,eAAD,EAAkB;AAAClB,EAAAA,WAAW,EAAXA;AAAD,CAAlB,CAAP,CAAwCE,QAAxC,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport PropTypes from 'prop-types';\r\nimport {getProfiles} from '../../actions/profileActions';\r\nimport ProfileItem from \"./ProfileItem\";\r\n\r\nclass Profiles extends Component {\r\n  \r\n    componentDidMount(){\r\n        this.props.getProfiles();\r\n        \r\n    }\r\n  \r\n    render() {\r\n        const {profile, loading} = this.props.profile;\r\n        \r\n\r\n        let profileItems;\r\n\r\n        if (profile === null || loading) {\r\n            profileItems = \"loading\";\r\n        }else{\r\n            if(profile.length > 0){\r\n                console.log(profile.user.name);\r\n                profileItems = profile.map(profile => (\r\n\r\n                    <ProfileItem key = {profile._id} profile = {profile} />\r\n                ))\r\n            }else{\r\n                profileItems = <h4>no profiles found...</h4>\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className = \"profiles\">\r\n                    <div className = \"container\">\r\n                        <div className = \"row\">\r\n                            <div className = \"col-md-12\">\r\n                                <h1 className = \" display-4 text-center\">profiles</h1>\r\n                                <p className = \"lead text-center\">\r\n                                    connect with other peeps\r\n                                </p>\r\n                                {profileItems}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n  }\r\n}\r\n\r\nProfiles.propTypes = {\r\n    getProfiles: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile\r\n})\r\nexport default connect(mapStateToProps, {getProfiles})(Profiles);"]},"metadata":{},"sourceType":"module"}