{"ast":null,"code":"import axios from \"axios\";\nimport { GET_PROFILE, GET_GROUPS, PROFILE_LOADING, GET_ERRORS, GET_PROFILES, ADD_INTEREST, GET_INTERESTS, GET_RESULTS } from './types';\nimport { NativeError } from \"mongoose\"; // get current profile\n\nexport var getCurrentProfile = function getCurrentProfile() {\n  return function (dispatch) {\n    dispatch(setProfileLoading());\n    axios.get('/api/profiles').then(function (res) {\n      return dispatch({\n        type: GET_PROFILE,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: {}\n      });\n    });\n  };\n}; // get network\n\nexport var getNetwork = function getNetwork() {\n  return function (dispatch) {\n    axios.get('/api/profiles/network').then(function (res) {\n      return dispatch({\n        type: GET_NETWORK,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: {}\n      });\n    });\n  };\n}; // get profile by handle\n\nexport var getProfileByHandle = function getProfileByHandle(handle) {\n  return function (dispatch) {\n    dispatch(setProfileLoading());\n    axios.get(\"/api/profiles/handle/\".concat(handle)).then(function (res) {\n      return dispatch({\n        type: GET_PROFILE,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_PROFILE,\n        payload: null\n      });\n    });\n  };\n}; //create profile\n\nexport var createProfile = function createProfile(profileData, history) {\n  return function (dispatch) {\n    console.log(\"is this working\");\n    axios.post(\"/api/profiles/txt\", profileData).then(function (res) {\n      return console.log(\"derr\");\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: {}\n      });\n    });\n  };\n};\nexport var addFriendGroup = function addFriendGroup(current) {\n  return function (dispatch) {\n    axios.post(\"/api/profiles/addFriendGroup\", current).then(function (res) {\n      return console.log(\"derr\");\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: {}\n      });\n    });\n  };\n};\nexport var getFriendGroups = function getFriendGroups(current) {\n  return function (dispatch) {\n    axios.post(\"/api/profiles/getFriendGroups\", current).then(function (res) {\n      return dispatch({\n        type: GET_GROUPS,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: {}\n      });\n    });\n  };\n};\nexport var updateProfile = function updateProfile(data) {\n  return function (dispatch) {\n    axios.post(\"/api/profiles/update\", data).then(function (res) {\n      return console.log(\"derr\");\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: {}\n      });\n    });\n  };\n};\nexport var searchPeople = function searchPeople(data) {\n  return function (dispatch) {\n    axios.post(\"/api/profiles/search\", data).then(function (res) {\n      return console.log(\"done\");\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_RESULTS,\n        payload: null\n      });\n    });\n  };\n};\nexport var addInterest = function addInterest(interests) {\n  return function (dispatch) {\n    dispatch({\n      type: ADD_INTEREST,\n      payload: {\n        interests: interests\n      }\n    });\n  };\n};\nexport var getInterests = function getInterests() {\n  return function (dispatch) {\n    dispatch({\n      type: GET_INTERESTS\n    });\n  };\n}; //profile loading\n\nexport var setProfileLoading = function setProfileLoading() {\n  return {\n    type: PROFILE_LOADING\n  };\n}; //add experience\n\nexport var addExperience = function addExperience(expData, history) {\n  return function (dispatch) {\n    axios.post('/api/profiles/experience', expData).then(function (res) {\n      return history.push(\"/dashboard\");\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; //get all profiles\n\nexport var getProfiles = function getProfiles() {\n  return function (dispatch) {\n    axios.get('/api/profiles/all').then(function (res) {\n      return dispatch({\n        type: GET_PROFILES,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; //old getprofiles from mongo\n\n/* dispatch(setProfileLoading());\r\naxios   \r\n    .get('/api/profiles/all')\r\n    .then(res => \r\n        dispatch({\r\n            type: GET_PROFILES,\r\n            payload: res.data\r\n            \r\n        }),\r\n        \r\n    )\r\n    \r\n    .catch(err =>\r\n        dispatch({\r\n            type: GET_PROFILES,\r\n            payload: null\r\n        })\r\n\r\n    ); */","map":{"version":3,"sources":["C:\\Users\\tsc\\Desktop\\projects\\mern-nector-new\\client\\src\\actions\\profileActions.js"],"names":["axios","GET_PROFILE","GET_GROUPS","PROFILE_LOADING","GET_ERRORS","GET_PROFILES","ADD_INTEREST","GET_INTERESTS","GET_RESULTS","NativeError","getCurrentProfile","dispatch","setProfileLoading","get","then","res","type","payload","data","catch","err","getNetwork","GET_NETWORK","getProfileByHandle","handle","createProfile","profileData","history","console","log","post","addFriendGroup","current","getFriendGroups","updateProfile","searchPeople","addInterest","interests","getInterests","addExperience","expData","push","response","getProfiles"],"mappings":"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","sourcesContent":["\r\nimport axios from \"axios\";\r\nimport {GET_PROFILE, GET_GROUPS, PROFILE_LOADING, GET_ERRORS, GET_PROFILES, ADD_INTEREST, GET_INTERESTS, GET_RESULTS} from './types';\r\nimport { NativeError } from \"mongoose\";\r\n\r\n// get current profile\r\nexport const getCurrentProfile = () => dispatch => {\r\n    dispatch(setProfileLoading());\r\n    axios.get('/api/profiles')\r\n        .then(res => \r\n            dispatch({\r\n                type: GET_PROFILE,\r\n                payload: res.data\r\n            })    \r\n        )\r\n        .catch(err => \r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: {}\r\n            })  \r\n        )\r\n}\r\n\r\n// get network\r\nexport const getNetwork = () => dispatch => {\r\n    \r\n    axios.get('/api/profiles/network')\r\n        .then(res => \r\n            dispatch({\r\n                type: GET_NETWORK,\r\n                payload: res.data\r\n            })    \r\n        )\r\n        .catch(err => \r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: {}\r\n            })  \r\n        )\r\n}\r\n\r\n\r\n// get profile by handle\r\nexport const getProfileByHandle = (handle) => dispatch => {\r\n    dispatch(setProfileLoading());\r\n    axios.get(`/api/profiles/handle/${handle}`)\r\n        .then(res => \r\n            dispatch({\r\n                type: GET_PROFILE,\r\n                payload: res.data\r\n            })    \r\n        )\r\n        .catch(err => \r\n            dispatch({\r\n                type: GET_PROFILE,\r\n                payload: null\r\n            })  \r\n        )\r\n}\r\n\r\n//create profile\r\nexport const createProfile = (profileData, history) => dispatch => {\r\n    console.log(\"is this working\");\r\n    axios\r\n        .post(\"/api/profiles/txt\",profileData)\r\n        .then(res =>  console.log(\"derr\"))\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: {}\r\n            })\r\n        );\r\n}\r\n\r\nexport const addFriendGroup = (current) => dispatch => {\r\n    \r\n    axios\r\n        .post(\"/api/profiles/addFriendGroup\", current)\r\n        .then(res =>  console.log(\"derr\"))\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: {}\r\n            })\r\n        );\r\n}\r\n\r\nexport const getFriendGroups = (current) => dispatch => {\r\n    \r\n    axios\r\n        .post(\"/api/profiles/getFriendGroups\", current)\r\n        .then(res =>  \r\n            dispatch({\r\n                type: GET_GROUPS,\r\n                payload: res.data\r\n            })    )\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: {}\r\n            })\r\n        );\r\n}\r\n\r\nexport const updateProfile = (data) => dispatch => {\r\n\r\n    axios\r\n        .post(\"/api/profiles/update\",data)\r\n        .then(res =>  console.log(\"derr\"))\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: {}\r\n            })\r\n        );\r\n}\r\n\r\nexport const searchPeople = (data) => dispatch => {\r\n    axios\r\n        .post(\"/api/profiles/search\", data)\r\n        .then(res =>\r\n            console.log(\"done\")     \r\n        )\r\n        .catch(err => \r\n            dispatch({\r\n                type: GET_RESULTS,\r\n                payload: null\r\n            })  \r\n        )\r\n}\r\n\r\nexport const addInterest = (interests) => dispatch => {\r\n    \r\n    dispatch({\r\n        type: ADD_INTEREST,\r\n        payload: {interests}\r\n    })\r\n}\r\n\r\nexport const getInterests = () => dispatch => {\r\n    dispatch({\r\n        type: GET_INTERESTS\r\n        \r\n    })\r\n}\r\n\r\n//profile loading\r\nexport const setProfileLoading = () => {\r\n    return {\r\n        type: PROFILE_LOADING\r\n    }\r\n}\r\n\r\n//add experience\r\nexport const addExperience = (expData,history) => dispatch => {\r\n    axios   \r\n        .post('/api/profiles/experience',expData)\r\n        .then(res => history.push(\"/dashboard\"))\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n\r\n        );\r\n        \r\n};\r\n\r\n//get all profiles\r\nexport const getProfiles = () => dispatch => {\r\n    axios   \r\n    .get('/api/profiles/all')\r\n    .then(res => \r\n        dispatch({\r\n            type: GET_PROFILES,\r\n            payload: res.data\r\n        })    \r\n    )\r\n    \r\n    .catch(err =>\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        })\r\n\r\n    );\r\n        \r\n        \r\n};\r\n\r\n//old getprofiles from mongo\r\n/* dispatch(setProfileLoading());\r\naxios   \r\n    .get('/api/profiles/all')\r\n    .then(res => \r\n        dispatch({\r\n            type: GET_PROFILES,\r\n            payload: res.data\r\n            \r\n        }),\r\n        \r\n    )\r\n    \r\n    .catch(err =>\r\n        dispatch({\r\n            type: GET_PROFILES,\r\n            payload: null\r\n        })\r\n\r\n    ); */"]},"metadata":{},"sourceType":"module"}