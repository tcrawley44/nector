{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector\\\\client\\\\src\\\\components\\\\dashboard\\\\Dashboard.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getCurrentProfile } from '../../actions/profileActions';\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dashboard, _Component);\n\n  function Dashboard() {\n    _classCallCheck(this, Dashboard);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).apply(this, arguments));\n  }\n\n  _createClass(Dashboard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getCurrentProfile();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var user = this.props.auth.user;\n      var _this$props$profile = this.props.profile,\n          profile = _this$props$profile.profile,\n          loading = _this$props$profile.loading;\n      var dashboardContent;\n\n      if (profile === null || loading) {\n        dashboardContent = React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, \"Loading...\");\n      } else {\n        dashboardContent = React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, \"hello\");\n      }\n\n      return React.createElement(\"div\", {\n        className: \"dashboard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        clasname: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"display-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"dashboard\"), dashboardContent))));\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    profile: state.profile,\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getCurrentProfile: getCurrentProfile\n})(Dashboard);","map":{"version":3,"sources":["C:\\Users\\tsc\\Desktop\\projects\\mern-nector\\client\\src\\components\\dashboard\\Dashboard.js"],"names":["React","Component","PropTypes","connect","getCurrentProfile","Dashboard","props","user","auth","profile","loading","dashboardContent","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,iBAAR,QAAgC,8BAAhC;;IAEMC,S;;;;;;;;;;;;;wCAEkB;AAChB,WAAKC,KAAL,CAAWF,iBAAX;AACH;;;6BAEQ;AAAA,UACEG,IADF,GACS,KAAKD,KAAL,CAAWE,IADpB,CACED,IADF;AAAA,gCAEqB,KAAKD,KAAL,CAAWG,OAFhC;AAAA,UAEEA,OAFF,uBAEEA,OAFF;AAAA,UAEUC,OAFV,uBAEUA,OAFV;AAIL,UAAIC,gBAAJ;;AAEA,UAAGF,OAAO,KAAK,IAAZ,IAAoBC,OAAvB,EAAgC;AAC5BC,QAAAA,gBAAgB,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAnB;AACH,OAFD,MAEO;AACHA,QAAAA,gBAAgB,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAnB;AACH;;AAED,aACA;AAAK,QAAA,SAAS,EAAG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAG,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,QAAQ,EAAG,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAG,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEKA,gBAFL,CADJ,CADJ,CADJ,CADA;AAYH;;;;EA9BmBV,S;;AAiCxBI,SAAS,CAACO,SAAV,GAAsB;AAClBR,EAAAA,iBAAiB,EAAEF,SAAS,CAACW,IAAV,CAAeC,UADhB;AAElBN,EAAAA,IAAI,EAAEN,SAAS,CAACa,MAAV,CAAiBD,UAFL;AAGlBL,EAAAA,OAAO,EAAEP,SAAS,CAACa,MAAV,CAAiBD;AAHR,CAAtB;;AAMA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAC9BR,IAAAA,OAAO,EAAEQ,KAAK,CAACR,OADe;AAE9BD,IAAAA,IAAI,EAAES,KAAK,CAACT;AAFkB,GAAL;AAAA,CAA7B;;AAKA,eAAeL,OAAO,CAACa,eAAD,EAAkB;AAACZ,EAAAA,iBAAiB,EAAjBA;AAAD,CAAlB,CAAP,CAA8CC,SAA9C,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {getCurrentProfile} from '../../actions/profileActions';\r\n\r\nclass Dashboard extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getCurrentProfile();\r\n    }\r\n\r\n    render() {\r\n        const {user} =this.props.auth;\r\n        const {profile,loading} = this.props.profile; \r\n\r\n        let dashboardContent; \r\n\r\n        if(profile === null || loading) {\r\n            dashboardContent = <h4>Loading...</h4>\r\n        } else {\r\n            dashboardContent = <h1>hello</h1>\r\n        }\r\n\r\n        return (\r\n        <div className = \"dashboard\">\r\n            <div className = \"container\">\r\n                <div className = \"row\">\r\n                    <div clasname = \"col-md-12\">\r\n                        <h1 className = \"display-4\">dashboard</h1>\r\n                        {dashboardContent}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nDashboard.propTypes = {\r\n    getCurrentProfile: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    profile: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile,\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, {getCurrentProfile})(Dashboard);"]},"metadata":{},"sourceType":"module"}