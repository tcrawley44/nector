{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\src\\\\components\\\\profiles\\\\Profiles.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { getProfiles } from '../../actions/profileActions';\nimport ProfileItem from \"./ProfileItem\";\nimport AddPerson from \"../add-person/AddPerson\";\nimport ProfileInterests from \"./ProfileInterests\";\nimport EditPerson from \"../edit-person/EditPerson\";\n\nvar Profiles =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Profiles, _Component);\n\n  function Profiles(props) {\n    var _this;\n\n    _classCallCheck(this, Profiles);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Profiles).call(this, props));\n    _this.state = {\n      currentProfile: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Profiles, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getProfiles();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props$profile = this.props.profile,\n          profile = _this$props$profile.profile,\n          loading = _this$props$profile.loading;\n      var _this$state = this.state,\n          displayProfile = _this$state.displayProfile,\n          displayInfo = _this$state.displayInfo,\n          displayEdit = _this$state.displayEdit,\n          displayInterests = _this$state.displayInterests;\n      console.log(profile, \"new profiles\");\n      var box;\n      var info;\n      var profileItems;\n      var ints;\n\n      if (displayEdit) {\n        box = React.createElement(EditPerson, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        });\n      } else {\n        if (displayInfo) {\n          info = React.createElement(\"div\", {\n            className: \"row\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"col\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48\n            },\n            __self: this\n          }, React.createElement(\"h4\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          }, \" \", this.state.currentProfile.sex), React.createElement(\"h4\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          }, \" \", this.state.currentProfile.age), React.createElement(\"h4\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51\n            },\n            __self: this\n          }, \" \", this.state.currentProfile.city, \", \", this.state.currentProfile.state)));\n        }\n\n        if (profile === null || loading) {\n          profileItems = \"loading\";\n        } else {\n          if (displayProfile) {\n            box = React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 61\n              },\n              __self: this\n            }, React.createElement(\"h1\", {\n              className: \" display-4 text-center\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 62\n              },\n              __self: this\n            }, this.state.currentProfile.name), React.createElement(\"div\", {\n              className: \"btn btn-info\",\n              onClick: function onClick() {\n                _this2.setState(function (prevState) {\n                  return {\n                    displayInfo: !prevState.displayInfo\n                  };\n                });\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 63\n              },\n              __self: this\n            }, \"Basic Info\"), React.createElement(\"div\", {\n              className: \"btn btn-info ml-2\",\n              onClick: function onClick() {\n                _this2.setState(function (prevState) {\n                  return {\n                    displayEdit: !prevState.displayEdit\n                  };\n                });\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 71\n              },\n              __self: this\n            }, \"Edit Person\"), info, React.createElement(\"div\", {\n              className: \"ml-2 mt-2\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 84\n              },\n              __self: this\n            }, React.createElement(ProfileInterests, {\n              tree2: this.state.currentProfile.interests[0],\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 85\n              },\n              __self: this\n            })), ints);\n          } else {\n            var newProfile = profile.people;\n\n            if (newProfile.length > 0) {\n              //console.log(profile[0]);\n              profileItems = newProfile.map(function (profile) {\n                return React.createElement(\"div\", {\n                  className: \"btn personButton btn-info\",\n                  onClick: function onClick() {\n                    _this2.setState(function (prevState) {\n                      return {\n                        displayProfile: !prevState.displayProfile\n                      };\n                    });\n\n                    _this2.setState(function (prevState) {\n                      return {\n                        currentProfile: profile\n                      };\n                    });\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 98\n                  },\n                  __self: this\n                }, profile.name)\n                /* <ProfileItem key = {profile._id} profile = {profile} /> */\n                ;\n              });\n              box = React.createElement(\"div\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 116\n                },\n                __self: this\n              }, React.createElement(\"h1\", {\n                className: \" display-4 text-center\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 117\n                },\n                __self: this\n              }, \"My People\"), React.createElement(\"div\", {\n                className: \"profiles\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 122\n                },\n                __self: this\n              }, React.createElement(\"div\", {\n                className: \"container\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 124\n                },\n                __self: this\n              }, React.createElement(\"div\", {\n                className: \"row\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 125\n                },\n                __self: this\n              }, React.createElement(\"div\", {\n                className: \"col-md-4\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 126\n                },\n                __self: this\n              }, profileItems)))));\n            } else {\n              profileItems = React.createElement(\"h4\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 137\n                },\n                __self: this\n              }, \"no profiles found...\");\n            }\n          }\n        }\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"listScroll\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, box));\n    }\n  }]);\n\n  return Profiles;\n}(Component);\n\nProfiles.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    profile: state.profile\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getProfiles: getProfiles\n})(Profiles);","map":{"version":3,"sources":["C:\\Users\\tsc\\Desktop\\projects\\mern-nector-new\\client\\src\\components\\profiles\\Profiles.js"],"names":["React","Component","connect","PropTypes","getProfiles","ProfileItem","AddPerson","ProfileInterests","EditPerson","Profiles","props","state","currentProfile","profile","loading","displayProfile","displayInfo","displayEdit","displayInterests","console","log","box","info","profileItems","ints","sex","age","city","name","setState","prevState","interests","newProfile","people","length","map","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport PropTypes from 'prop-types';\r\nimport {getProfiles} from '../../actions/profileActions';\r\nimport ProfileItem from \"./ProfileItem\";\r\nimport AddPerson from \"../add-person/AddPerson\";\r\nimport ProfileInterests from \"./ProfileInterests\";\r\nimport EditPerson from \"../edit-person/EditPerson\";\r\n\r\nclass Profiles extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n           \r\n           currentProfile: \"\"\r\n        \r\n        }\r\n        \r\n        \r\n    }\r\n    componentDidMount(){\r\n        this.props.getProfiles();\r\n        \r\n    }\r\n  \r\n    render() {\r\n        const {profile, loading} = this.props.profile;\r\n        const {displayProfile,displayInfo,displayEdit, displayInterests} = this.state; \r\n        console.log(profile, \"new profiles\");\r\n        let box; \r\n        let info;\r\n        let profileItems;\r\n        let ints; \r\n\r\n        \r\n\r\n        if(displayEdit){\r\n            box = (\r\n                <EditPerson />\r\n            )\r\n        }else{\r\n\r\n        \r\n            if(displayInfo){\r\n                info = (\r\n                    <div className = \"row\">\r\n                        <div className = \"col\">\r\n                            <h4> {this.state.currentProfile.sex}</h4>\r\n                            <h4> {this.state.currentProfile.age}</h4>\r\n                            <h4> {this.state.currentProfile.city}, {this.state.currentProfile.state}</h4>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            if (profile === null || loading) {\r\n                profileItems = \"loading\";\r\n            }else{\r\n                if(displayProfile){\r\n                    box = (\r\n                        <div>\r\n                            <h1 className = \" display-4 text-center\">{this.state.currentProfile.name}</h1>\r\n                            <div className = \"btn btn-info\" onClick ={() => {\r\n                                this.setState(prevState => ({\r\n                                    displayInfo: !prevState.displayInfo\r\n                                }))}}>\r\n                                \r\n                                Basic Info\r\n                                \r\n                            </div>\r\n                            <div className = \"btn btn-info ml-2\" onClick ={() => {\r\n                                this.setState(prevState => ({\r\n                                    displayEdit: !prevState.displayEdit\r\n                                    \r\n                                }))}}>\r\n                                \r\n                                Edit Person\r\n                                \r\n                            </div>\r\n                            \r\n                        \r\n\r\n                            {info}\r\n                            <div className = \"ml-2 mt-2\">\r\n                                <ProfileInterests tree2 = {this.state.currentProfile.interests[0]}/>\r\n                            </div>\r\n                            {ints}\r\n                        </div>\r\n                        \r\n                    )\r\n                }else{\r\n\r\n                    let newProfile = profile.people;\r\n                    if(newProfile.length > 0){\r\n                        //console.log(profile[0]);\r\n                        profileItems = newProfile.map(profile => (\r\n                            \r\n                            <div className = \"btn personButton btn-info\" onClick ={() => {\r\n                                this.setState(prevState => ({\r\n                                    displayProfile: !prevState.displayProfile\r\n                                    \r\n                                }))\r\n                                this.setState(prevState => ({\r\n                                    currentProfile: profile\r\n                                \r\n                                }))\r\n                                    \r\n                                }}>\r\n                                \r\n                                {profile.name}\r\n                                \r\n                            </div>\r\n                            /* <ProfileItem key = {profile._id} profile = {profile} /> */\r\n                        ))\r\n                        box = (\r\n                            <div>\r\n                                <h1 className = \" display-4 text-center\">My People</h1>\r\n                                        \r\n                                            \r\n                                        \r\n\r\n                                <div className = \"profiles\">\r\n                                    \r\n                                    <div className = \"container\">\r\n                                        <div className = \"row\">\r\n                                            <div className = \"col-md-4\">\r\n                                                \r\n                                                {profileItems}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }else{\r\n                        profileItems = <h4>no profiles found...</h4>\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return (\r\n            <div >\r\n                \r\n\r\n                        <div className = \"listScroll\" >\r\n                            {box}\r\n                            \r\n\r\n                        </div>\r\n\r\n                    \r\n            </div>\r\n        )\r\n  }\r\n}\r\n\r\nProfiles.propTypes = {\r\n    getProfiles: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile\r\n})\r\nexport default connect(mapStateToProps, {getProfiles})(Profiles);"]},"metadata":{},"sourceType":"module"}