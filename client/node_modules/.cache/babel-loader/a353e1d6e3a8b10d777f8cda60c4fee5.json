{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\src\\\\components\\\\profiles\\\\Profiles.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { getProfiles, getNetwork } from '../../actions/profileActions';\nimport ProfileItem from \"./ProfileItem\";\nimport AddPerson from \"../add-person/AddPerson\";\nimport ProfileInterests from \"./ProfileInterests\";\nimport EditPerson from \"../edit-person/EditPerson\";\nimport Friends from \"./Friends\";\nimport Queries from \"./Queries\";\nimport \"./ItemStyles.css\";\n\nvar Profiles =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Profiles, _Component);\n\n  function Profiles(props) {\n    var _this;\n\n    _classCallCheck(this, Profiles);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Profiles).call(this, props));\n    _this.state = {\n      currentProfile: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Profiles, [{\n    key: \"update\",\n    value: function update() {\n      this.setState(function (prevState) {\n        return {\n          displayNetwork: !prevState.displayNetwork\n        };\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getProfiles();\n      this.props.getNetwork();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props$profile = this.props.profile,\n          profile = _this$props$profile.profile,\n          network = _this$props$profile.network,\n          loading = _this$props$profile.loading;\n      console.log(profile, \"profile\");\n      var _this$state = this.state,\n          displayInfo = _this$state.displayInfo,\n          displayEdit = _this$state.displayEdit,\n          displayNetwork = _this$state.displayNetwork,\n          displayMore = _this$state.displayMore,\n          displayInterests = _this$state.displayInterests;\n      console.log(profile, \"new profiles\");\n\n      if (profile != null) {\n        this.state.currentProfile = profile.people[this.props.match.params.id];\n      }\n\n      var box;\n      var info;\n      var profileItems;\n      var ints;\n      var more;\n      var network2;\n      var displayProfile = true;\n      var isUsersAccount;\n      console.log(this.props.match.params.id, \"test param\");\n\n      if (localStorage.user === this.props.match.params.id) {\n        isUsersAccount = true;\n      }\n\n      console.log(isUsersAccount);\n\n      if (displayMore) {\n        more = React.createElement(\"div\", {\n          className: \" mt-2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(ProfileInterests, {\n          tree2: this.state.currentProfile.interests[0],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }));\n      }\n\n      if (displayNetwork && isUsersAccount) {\n        console.log(network, \"network\");\n        network2 =\n        /* <div className = \"mt-2 ml-2\">\r\n            <Friends current = {this.state.currentProfile.name}/>\r\n              <Queries current = {this.state.currentProfile.name}/>\r\n        </div>  */\n        React.createElement(ProfileInterests, {\n          updateParent: this.update,\n          tree2: network,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        });\n      }\n\n      if (displayEdit) {\n        box = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"btn btn-info w-25\",\n          onClick: function onClick() {\n            _this2.setState(function (prevState) {\n              return {\n                displayEdit: !prevState.displayEdit\n              };\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, \"Back\"), React.createElement(EditPerson, {\n          currName: this.state.currentProfile.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }));\n      } else {\n        if (displayInfo) {\n          info = React.createElement(\"div\", {\n            className: \"row\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"col text-light\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106\n            },\n            __self: this\n          }, React.createElement(\"h4\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107\n            },\n            __self: this\n          }, \" \", this.state.currentProfile.sex), React.createElement(\"h4\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108\n            },\n            __self: this\n          }, \" \", this.state.currentProfile.age), React.createElement(\"h4\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 109\n            },\n            __self: this\n          }, \" \", this.state.currentProfile.city, \", \", this.state.currentProfile.state)));\n        }\n\n        if (profile === null || loading) {\n          profileItems = \"loading\";\n        } else {\n          if (displayProfile) {\n            box = React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 119\n              },\n              __self: this\n            }, React.createElement(\"h1\", {\n              className: \" display-5 text-center text-light\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 120\n              },\n              __self: this\n            }, this.state.currentProfile.name), React.createElement(\"div\", {\n              className: \"btn btn-info  \",\n              onClick: function onClick() {\n                _this2.setState(function (prevState) {\n                  return {\n                    displayInfo: !prevState.displayInfo\n                  };\n                });\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 121\n              },\n              __self: this\n            }, \"Basic Info\"), React.createElement(\"div\", {\n              className: \"btn btn-info ml-2\",\n              onClick: function onClick() {\n                _this2.setState(function (prevState) {\n                  return {\n                    displayEdit: !prevState.displayEdit\n                  };\n                });\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 129\n              },\n              __self: this\n            }, \"Edit Profile\"), info, React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 142\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"btn btn-info mt-2 w-25\",\n              onClick: function onClick() {\n                _this2.setState(function (prevState) {\n                  return {\n                    displayMore: !prevState.displayMore\n                  };\n                });\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 144\n              },\n              __self: this\n            }, \"More\"), more), ints, React.createElement(\"div\", {\n              className: \"mt-2 \",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 155\n              },\n              __self: this\n            }, React.createElement(ProfileInterests, {\n              tree2: network,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 156\n              },\n              __self: this\n            })));\n          } else {\n            var newProfile = profile.people;\n\n            if (newProfile.length > 0) {\n              //console.log(profile[0]);\n              profileItems = newProfile.map(function (profile) {\n                return React.createElement(\"div\", {\n                  className: \"btn personButton btn-info\",\n                  onClick: function onClick() {\n                    _this2.setState(function (prevState) {\n                      return {\n                        displayProfile: !prevState.displayProfile\n                      };\n                    });\n\n                    _this2.setState(function (prevState) {\n                      return {\n                        currentProfile: profile\n                      };\n                    });\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 169\n                  },\n                  __self: this\n                }, profile.name)\n                /* <ProfileItem key = {profile._id} profile = {profile} /> */\n                ;\n              });\n              box = React.createElement(\"div\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 187\n                },\n                __self: this\n              }, React.createElement(\"h1\", {\n                className: \" display-4 text-center\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 188\n                },\n                __self: this\n              }, \"List People\"), React.createElement(\"div\", {\n                className: \"profiles\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 193\n                },\n                __self: this\n              }, React.createElement(\"div\", {\n                className: \"container\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 195\n                },\n                __self: this\n              }, React.createElement(\"div\", {\n                className: \"row\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 196\n                },\n                __self: this\n              }, React.createElement(\"div\", {\n                className: \"col-md-4\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 197\n                },\n                __self: this\n              }, profileItems)))));\n            } else {\n              profileItems = React.createElement(\"h4\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 208\n                },\n                __self: this\n              }, \"no profiles found...\");\n            }\n          }\n        }\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"listScroll row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col mt-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, box)));\n    }\n  }]);\n\n  return Profiles;\n}(Component);\n\nProfiles.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  network: PropTypes.object,\n  auth: PropTypes.object\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    profile: state.profile,\n    network: state.network,\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getProfiles: getProfiles,\n  getNetwork: getNetwork\n})(Profiles);","map":{"version":3,"sources":["C:\\Users\\tsc\\Desktop\\projects\\mern-nector-new\\client\\src\\components\\profiles\\Profiles.js"],"names":["React","Component","connect","PropTypes","getProfiles","getNetwork","ProfileItem","AddPerson","ProfileInterests","EditPerson","Friends","Queries","Profiles","props","state","currentProfile","setState","prevState","displayNetwork","profile","network","loading","console","log","displayInfo","displayEdit","displayMore","displayInterests","people","match","params","id","box","info","profileItems","ints","more","network2","displayProfile","isUsersAccount","localStorage","user","interests","update","name","sex","age","city","newProfile","length","map","propTypes","func","isRequired","object","auth","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport PropTypes from 'prop-types';\r\nimport {getProfiles,getNetwork} from '../../actions/profileActions';\r\nimport ProfileItem from \"./ProfileItem\";\r\nimport AddPerson from \"../add-person/AddPerson\";\r\nimport ProfileInterests from \"./ProfileInterests\";\r\nimport EditPerson from \"../edit-person/EditPerson\";\r\nimport Friends from \"./Friends\";\r\nimport Queries from \"./Queries\";\r\nimport \"./ItemStyles.css\";\r\nclass Profiles extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n           \r\n           currentProfile: \"\"\r\n        \r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    update(){\r\n        this.setState(prevState => ({\r\n            displayNetwork: !prevState.displayNetwork\r\n        }))\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.getProfiles();\r\n        this.props.getNetwork();\r\n        \r\n    }\r\n  \r\n    render() {\r\n        const {profile, network, loading} = this.props.profile;\r\n        console.log(profile, \"profile\");\r\n        const {displayInfo,displayEdit, displayNetwork, displayMore, displayInterests } = this.state; \r\n        console.log(profile, \"new profiles\");\r\n        if(profile != null){\r\n            \r\n            this.state.currentProfile = profile.people[this.props.match.params.id];\r\n            \r\n        }\r\n        let box; \r\n        let info;\r\n        let profileItems;\r\n        let ints; \r\n        let more;\r\n        let network2; \r\n        let displayProfile = true; \r\n        let isUsersAccount; \r\n\r\n        console.log(this.props.match.params.id, \"test param\");\r\n        if(localStorage.user === this.props.match.params.id){\r\n            isUsersAccount = true; \r\n            \r\n        }\r\n        console.log(isUsersAccount);\r\n\r\n        if(displayMore){\r\n            more = (<div className = \" mt-2\">\r\n                <ProfileInterests tree2 = {this.state.currentProfile.interests[0]}/>\r\n            </div>)\r\n            \r\n        }\r\n        if(displayNetwork && isUsersAccount){\r\n            console.log(network, \"network\")\r\n            network2 = (\r\n                /* <div className = \"mt-2 ml-2\">\r\n                    <Friends current = {this.state.currentProfile.name}/>\r\n\r\n                    <Queries current = {this.state.currentProfile.name}/>\r\n                </div>  */\r\n                \r\n                <ProfileInterests updateParent = {this.update} tree2 = {network}/>           \r\n                                   \r\n            )\r\n               \r\n        }\r\n        \r\n        \r\n        \r\n            if(displayEdit){\r\n                box = (\r\n                    <div>\r\n                        <div className = \"btn btn-info w-25\" onClick ={() => {\r\n                            this.setState(prevState => ({\r\n                                displayEdit: !prevState.displayEdit\r\n                            }))}}>\r\n                            \r\n                            Back\r\n                            \r\n                        </div>\r\n                        <EditPerson currName = {this.state.currentProfile.name}/>\r\n                    </div>\r\n                )\r\n            }else{\r\n\r\n            \r\n                if(displayInfo){\r\n                    info = (\r\n                        <div className = \"row\">\r\n                            <div className = \"col text-light\">\r\n                                <h4> {this.state.currentProfile.sex}</h4>\r\n                                <h4> {this.state.currentProfile.age}</h4>\r\n                                <h4> {this.state.currentProfile.city}, {this.state.currentProfile.state}</h4>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n                if (profile === null || loading) {\r\n                    profileItems = \"loading\";\r\n                }else{\r\n                    if(displayProfile){\r\n                        box = (\r\n                            <div>\r\n                                <h1 className = \" display-5 text-center text-light\">{this.state.currentProfile.name}</h1>\r\n                                <div className = \"btn btn-info  \" onClick ={() => {\r\n                                    this.setState(prevState => ({\r\n                                        displayInfo: !prevState.displayInfo\r\n                                    }))}}>\r\n                                    \r\n                                    Basic Info\r\n                                    \r\n                                </div>\r\n                                <div className = \"btn btn-info ml-2\" onClick ={() => {\r\n                                    this.setState(prevState => ({\r\n                                        displayEdit: !prevState.displayEdit\r\n                                        \r\n                                    }))}}>\r\n                                    \r\n                                    Edit Profile\r\n                                    \r\n                                </div>\r\n                                \r\n                            \r\n\r\n                                {info}\r\n                                <div >\r\n                                \r\n                                    <div className = \"btn btn-info mt-2 w-25\" onClick ={() => {\r\n                                        this.setState(prevState => ({\r\n                                            displayMore: !prevState.displayMore\r\n                                            \r\n                                        }))}}>\r\n                                        \r\n                                        More\r\n                                        \r\n                                    </div>\r\n                                    {more}\r\n                                </div>\r\n                                {ints}<div className = \"mt-2 \">\r\n                                    <ProfileInterests tree2 = {network}/>    \r\n                                </div>\r\n                                \r\n                            </div>\r\n                            \r\n                        )\r\n                    }else{\r\n\r\n                        let newProfile = profile.people;\r\n                        if(newProfile.length > 0){\r\n                            //console.log(profile[0]);\r\n                            profileItems = newProfile.map(profile => (\r\n                                \r\n                                <div className = \"btn personButton btn-info\" onClick ={() => {\r\n                                    this.setState(prevState => ({\r\n                                        displayProfile: !prevState.displayProfile\r\n                                        \r\n                                    }))\r\n                                    this.setState(prevState => ({\r\n                                        currentProfile: profile\r\n                                    \r\n                                    }))\r\n                                        \r\n                                    }}>\r\n                                    \r\n                                    {profile.name}\r\n                                    \r\n                                </div>\r\n                                /* <ProfileItem key = {profile._id} profile = {profile} /> */\r\n                            ))\r\n                            box = (\r\n                                <div>\r\n                                    <h1 className = \" display-4 text-center\">List People</h1>\r\n                                            \r\n                                                \r\n                                            \r\n\r\n                                    <div className = \"profiles\">\r\n                                        \r\n                                        <div className = \"container\">\r\n                                            <div className = \"row\">\r\n                                                <div className = \"col-md-4\">\r\n                                                    \r\n                                                    {profileItems}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }else{\r\n                            profileItems = <h4>no profiles found...</h4>\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        \r\n        return (\r\n            <div >\r\n                \r\n\r\n                        <div className = \"listScroll row\" >\r\n                            <div className = \"col mt-10\">\r\n                                {box}\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    \r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nProfiles.propTypes = {\r\n    getProfiles: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    network: PropTypes.object,\r\n    auth: PropTypes.object\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile,\r\n    network: state.network,\r\n    auth: state.auth\r\n})\r\nexport default connect(mapStateToProps, {getProfiles, getNetwork})(Profiles);"]},"metadata":{},"sourceType":"module"}