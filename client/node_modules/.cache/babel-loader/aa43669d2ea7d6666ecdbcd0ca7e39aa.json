{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\src\\\\components\\\\add-person\\\\AddPerson.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport TextFieldGroup from \"../common/TextFieldGroup\";\nimport TextAreaFieldGroup from \"../common/TextAreaFieldGroup\";\nimport SelectListGroup from \"../common/SelectListGroup\";\nimport { createProfile, getInterests } from \"../../actions/profileActions\";\nimport Interests from \"./Interests\";\nimport { getTree, test } from \"../../actions/treeactions\";\nimport { addNode } from \"../../actions/nodeActions\";\nimport \"./AddPersonStyles.css\";\n\nvar AddPerson =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddPerson, _Component);\n\n  function AddPerson(props) {\n    var _this;\n\n    _classCallCheck(this, AddPerson);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddPerson).call(this, props));\n\n    _this.getDataFromChild = function (dataFromChild) {\n      //this method culminates all the interest hiearchy\n      //and then it puts it in to one hiearchy to be saved\n      //it checks the current state hierachy, compares it with the new addition\n      //then combines them \n      //test prints\n      // console.log(dataFromChild);\n      // console.log(this.state.interests[0]);\n\n      /*\r\n      //check if state hiearchy is empty, if so, take the request and set as the interest state\r\n      if(this.state.interests[0] === undefined){\r\n          this.state.interests.push(dataFromChild);\r\n      }else{\r\n          //if the interest state is not empty, \r\n          //we can assume that the root node is \"interests\"\r\n          //@this.state.interests[0] = \"Interests\"\r\n          //we can also assume that there is at least one second level\r\n            \r\n          //we then need to check if same second level node(if already exists), so no duplicates\r\n          //so have to iterate through second level nodes in state hierarchy\r\n          const found1 = false; \r\n          const searchedAllChildren1 = false; \r\n          const i1 = 1; \r\n          while(!found1 && searchedAllChildren1){\r\n              if(dataFromChild[1][0] === this.state.interests[0][i1][0]){\r\n                  found1 = true; \r\n              }\r\n              if((i1 != (this.state.interests[0].length-1))&&(!found1)){\r\n                  i1 = i1 + 1; \r\n              }else{\r\n                  searchedAllChildren1 = true; \r\n              }\r\n            }\r\n          //same second level\r\n          if(found1){\r\n              //if they are the same, we need to check 3rd level node and so on\r\n              //this method may need to be recursive eventually based on how big the tree gets\r\n              //but for I may just hard code several layers in\r\n                //check 3rd layer same\r\n              const found2 = false; \r\n              const searchedAllChildren2 = false; \r\n              const i2 = 1; \r\n              while(!found2 && searchedAllChildren2){\r\n                  if(dataFromChild[1][1][0] === this.state.interests[0][i1][i2]){\r\n                      found2 = true; \r\n                  }\r\n                  if((i2 != (this.state.interests[0][i1].length-1))&&(!found2)){\r\n                      i2 = i2 + 1; \r\n                  }else{\r\n                      searchedAllChildren2 = true; \r\n                  }\r\n                    }\r\n              if(found2){\r\n                }else{\r\n                  this.state.interests[0][i1].push(dataFromChild[1][1]);\r\n              }\r\n          \r\n                \r\n          }else{//not same second level\r\n              this.state.interests[0].push(dataFromChild[1]);\r\n          }\r\n      }\r\n      */\n      var mergeTrees = function mergeTrees(parentTree, childTree) {\n        var found = false;\n        var searchedAllChildren = false;\n        var i = 1;\n        var atTheEnd = false;\n        console.log(childTree[1], parentTree[i]);\n\n        if (childTree[1] === undefined || parentTree[i] === undefined) {\n          atTheEnd = true;\n          console.log(\"true\");\n        }\n\n        while (!found && !searchedAllChildren && !atTheEnd) {\n          console.log(\"childtree\", childTree[1][0], \"parenttree\", parentTree[i][0]);\n          console.log(\"makes it here?\");\n\n          if (childTree[1][0] === parentTree[i][0]) {\n            found = true;\n          }\n\n          if (parentTree[i].length != 1 && i != parentTree[i].length - 1 && !found) {\n            i = i + 1;\n          } else {\n            searchedAllChildren = true;\n          }\n        }\n\n        console.log(\"makes it here2?\");\n\n        if (found) {\n          console.log(\"i\", i);\n          mergeTrees(parentTree[i], childTree[1]);\n        } else {\n          if (childTree[1].length === 1) {\n            parentTree[i].push(childTree[1][0]);\n          } else {\n            parentTree[i].push(childTree[1][1]);\n          }\n        }\n      };\n\n      console.log(\"child being sent: \", dataFromChild);\n\n      if (_this.state.interests[0] === undefined) {\n        _this.state.interests.push(dataFromChild);\n      } else {\n        mergeTrees(_this.state.interests[0], dataFromChild);\n        console.log(_this.state.interests, \"after mergeTree\");\n      }\n    };\n\n    _this.state = {\n      name: \"\",\n      sex: \"\",\n      age: \"\",\n      city: \"\",\n      state: \"\",\n      interests: [],\n      bio: \"\",\n      errors: {}\n    };\n\n    _this.props.test(); //this.props.addNode(\"Books\", \"Conceptual\");\n\n\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSelectChange = _this.onSelectChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AddPerson, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.errors) {\n        this.setState({\n          errors: nextProps.errors\n        });\n      }\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(e) {\n      e.preventDefault(); //console.log(this.props.interests, \"interests here\");\n\n      var profileData = {\n        name: this.state.name,\n        sex: this.state.sex,\n        age: this.state.age,\n        city: this.state.city,\n        state: this.state.state,\n        interests: this.state.interests,\n        bio: this.state.bio\n      };\n      console.log(profileData.interests);\n      this.props.createProfile(profileData, this.props.history);\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"onSelectChange\",\n    value: function onSelectChange(e) {\n      this.setState({\n        status: e.target.value\n      }); //console.log(this.status);\n      //console.log(\"derp\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var errors = this.state.errors;\n      var tree = this.props.tree; //console.log(tree);\n      //console.log(\"here2\");\n      //select options for status\n\n      var options = [{\n        label: 'male',\n        value: \"male\"\n      }, {\n        label: 'female',\n        value: \"female\"\n      }];\n      return React.createElement(\"div\", {\n        className: \"add-person\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-8 m-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"display-4 text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, \"Add Person\"), React.createElement(\"p\", {\n        className: \"lead text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, \"enter info\"), React.createElement(\"small\", {\n        className: \"d-block pb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, \"* = required fields\"), React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(TextFieldGroup, {\n        placeholder: \"name\",\n        name: \"name\",\n        value: this.state.name,\n        onChange: this.onChange,\n        error: errors.name,\n        info: \"name\",\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }), React.createElement(SelectListGroup, {\n        placeholder: \"sex\",\n        name: \"sex\",\n        value: this.state.sex,\n        onChange: this.onChange,\n        options: options,\n        error: errors.sex,\n        info: \"sex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }), React.createElement(TextFieldGroup, {\n        placeholder: \"age\",\n        name: \"age\",\n        value: this.state.age,\n        onChange: this.onChange,\n        error: errors.age,\n        info: \"age\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }), React.createElement(TextFieldGroup, {\n        placeholder: \"city\",\n        name: \"city\",\n        value: this.state.city,\n        onChange: this.onChange,\n        error: errors.city,\n        info: \"city\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }), React.createElement(TextFieldGroup, {\n        placeholder: \"state\",\n        name: \"state\",\n        value: this.state.state,\n        onChange: this.onChange,\n        error: errors.state,\n        info: \"state\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }), React.createElement(TextAreaFieldGroup, {\n        placeholder: \"bio\",\n        name: \"bio\",\n        value: this.state.bio,\n        onChange: this.onChange,\n        error: errors.bio,\n        info: \"bio\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        className: \"btn btn-info btn-block mt-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }))))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"interests\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        className: \"display-4 text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, \"Interests\"), React.createElement(Interests, {\n        sendDataToParent: this.getDataFromChild,\n        tree2: tree.tree,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return AddPerson;\n}(Component);\n\nAddPerson.propTypes = {\n  profile: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n  test: PropTypes.func.isRequired,\n  tree: PropTypes.object.isRequired,\n  interests: PropTypes.object\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    profile: state.profile,\n    errors: state.errors,\n    tree: state.tree,\n    interests: state.interests\n  };\n};\n\nexport default connect(mapStateToProps, {\n  createProfile: createProfile,\n  addNode: addNode,\n  test: test,\n  getInterests: getInterests\n})(withRouter(AddPerson));","map":{"version":3,"sources":["C:\\Users\\tsc\\Desktop\\projects\\mern-nector-new\\client\\src\\components\\add-person\\AddPerson.js"],"names":["React","Component","connect","withRouter","PropTypes","TextFieldGroup","TextAreaFieldGroup","SelectListGroup","createProfile","getInterests","Interests","getTree","test","addNode","AddPerson","props","getDataFromChild","dataFromChild","mergeTrees","parentTree","childTree","found","searchedAllChildren","i","atTheEnd","console","log","undefined","length","push","state","interests","name","sex","age","city","bio","errors","onChange","bind","onSubmit","onSelectChange","nextProps","setState","e","preventDefault","profileData","history","target","value","status","tree","options","label","propTypes","profile","object","isRequired","func","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport {connect} from 'react-redux';\r\nimport {withRouter} from \"react-router-dom\";\r\nimport PropTypes from 'prop-types';\r\nimport TextFieldGroup from \"../common/TextFieldGroup\";\r\nimport TextAreaFieldGroup from \"../common/TextAreaFieldGroup\";\r\nimport SelectListGroup from \"../common/SelectListGroup\";\r\nimport {createProfile, getInterests} from \"../../actions/profileActions\";\r\nimport Interests from \"./Interests\";\r\nimport{getTree,test} from \"../../actions/treeactions\";\r\nimport {addNode} from \"../../actions/nodeActions\";\r\nimport \"./AddPersonStyles.css\";\r\n\r\n\r\n\r\nclass AddPerson extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n           \r\n            name: \"\",\r\n            sex: \"\",\r\n            age: \"\",\r\n            \r\n            city: \"\",\r\n            state: \"\",\r\n            interests: [],\r\n            bio: \"\",\r\n            errors: {}\r\n            \r\n        }\r\n        this.props.test();\r\n        //this.props.addNode(\"Books\", \"Conceptual\");\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onSelectChange = this.onSelectChange.bind(this);\r\n    }\r\n    \r\n    componentDidMount(){\r\n        \r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n\r\n        if(nextProps.errors){\r\n            this.setState({errors: nextProps.errors});\r\n        }\r\n    }\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n\r\n        \r\n        //console.log(this.props.interests, \"interests here\");\r\n        const profileData = {\r\n            name: this.state.name,\r\n            sex: this.state.sex,\r\n            age: this.state.age,\r\n            city: this.state.city,\r\n            state: this.state.state, \r\n           \r\n            interests: this.state.interests,\r\n            bio: this.state.bio\r\n        }\r\n        console.log(profileData.interests);\r\n        this.props.createProfile(profileData, this.props.history);\r\n    }\r\n    \r\n    getDataFromChild = (dataFromChild) => {\r\n        //this method culminates all the interest hiearchy\r\n        //and then it puts it in to one hiearchy to be saved\r\n\r\n        //it checks the current state hierachy, compares it with the new addition\r\n        //then combines them \r\n\r\n        //test prints\r\n        // console.log(dataFromChild);\r\n        // console.log(this.state.interests[0]);\r\n        /*\r\n        //check if state hiearchy is empty, if so, take the request and set as the interest state\r\n        if(this.state.interests[0] === undefined){\r\n            this.state.interests.push(dataFromChild);\r\n        }else{\r\n            //if the interest state is not empty, \r\n            //we can assume that the root node is \"interests\"\r\n            //@this.state.interests[0] = \"Interests\"\r\n            //we can also assume that there is at least one second level\r\n\r\n            \r\n            //we then need to check if same second level node(if already exists), so no duplicates\r\n            //so have to iterate through second level nodes in state hierarchy\r\n            const found1 = false; \r\n            const searchedAllChildren1 = false; \r\n            const i1 = 1; \r\n            while(!found1 && searchedAllChildren1){\r\n                if(dataFromChild[1][0] === this.state.interests[0][i1][0]){\r\n                    found1 = true; \r\n                }\r\n                if((i1 != (this.state.interests[0].length-1))&&(!found1)){\r\n                    i1 = i1 + 1; \r\n                }else{\r\n                    searchedAllChildren1 = true; \r\n                }\r\n\r\n            }\r\n            //same second level\r\n            if(found1){\r\n                //if they are the same, we need to check 3rd level node and so on\r\n                //this method may need to be recursive eventually based on how big the tree gets\r\n                //but for I may just hard code several layers in\r\n\r\n                //check 3rd layer same\r\n                const found2 = false; \r\n                const searchedAllChildren2 = false; \r\n                const i2 = 1; \r\n                while(!found2 && searchedAllChildren2){\r\n                    if(dataFromChild[1][1][0] === this.state.interests[0][i1][i2]){\r\n                        found2 = true; \r\n                    }\r\n                    if((i2 != (this.state.interests[0][i1].length-1))&&(!found2)){\r\n                        i2 = i2 + 1; \r\n                    }else{\r\n                        searchedAllChildren2 = true; \r\n                    }\r\n    \r\n                }\r\n                if(found2){\r\n\r\n                }else{\r\n                    this.state.interests[0][i1].push(dataFromChild[1][1]);\r\n                }\r\n            \r\n\r\n                \r\n            }else{//not same second level\r\n                this.state.interests[0].push(dataFromChild[1]);\r\n            }\r\n        }\r\n        */\r\n        const mergeTrees = (parentTree, childTree) => {\r\n            let found = false; \r\n            let searchedAllChildren = false; \r\n            let i = 1; \r\n            let atTheEnd = false; \r\n            console.log(childTree[1], parentTree[i]);\r\n            if(childTree[1] === undefined || parentTree[i] === undefined){\r\n                atTheEnd = true; \r\n                console.log(\"true\");\r\n            }\r\n            while(!found && !searchedAllChildren && !atTheEnd){\r\n                console.log(\"childtree\", childTree[1][0], \"parenttree\", parentTree[i][0])\r\n                console.log(\"makes it here?\")\r\n                if(childTree[1][0] === parentTree[i][0]){\r\n                    found = true; \r\n                }\r\n                if((parentTree[i].length != 1)&&(i != (parentTree[i].length-1))&&(!found)){\r\n                    i = i + 1; \r\n                }else{\r\n                    searchedAllChildren = true; \r\n                }\r\n\r\n            }\r\n            console.log(\"makes it here2?\")\r\n            if(found){\r\n                console.log(\"i\",i);\r\n                mergeTrees(parentTree[i],childTree[1]);\r\n            }else{\r\n                if(childTree[1].length === 1){\r\n                    parentTree[i].push(childTree[1][0]);\r\n                }else{\r\n                    parentTree[i].push(childTree[1][1]);    \r\n                }\r\n                \r\n            }\r\n        }\r\n        console.log(\"child being sent: \", dataFromChild)\r\n        if(this.state.interests[0] === undefined){\r\n            this.state.interests.push(dataFromChild);\r\n        }else{\r\n            mergeTrees(this.state.interests[0],dataFromChild)\r\n            console.log(this.state.interests, \"after mergeTree\");\r\n        }\r\n        \r\n    }\r\n\r\n    \r\n\r\n    onChange(e) {\r\n        \r\n            this.setState({[e.target.name]: e.target.value});\r\n        \r\n    }\r\n\r\n    onSelectChange(e) {\r\n        this.setState({status: e.target.value});\r\n        //console.log(this.status);\r\n        //console.log(\"derp\");\r\n    }\r\n\r\n    render() {\r\n        const {errors} = this.state; \r\n        \r\n        const {tree} = this.props; \r\n        //console.log(tree);\r\n        //console.log(\"here2\");\r\n        //select options for status\r\n        const options = [\r\n            \r\n            {\r\n                label: 'male',\r\n                value: \"male\"\r\n            },\r\n            \r\n            {label: 'female', value: \"female\"}\r\n        ];\r\n\r\n       \r\n\r\n        return (\r\n            <div className = \"add-person\">\r\n                <div className = \"container\">\r\n                    <div className = \"row\">\r\n                        <div className = \"col-md-8 m-auto\">\r\n                            <h1 className = \"display-4 text-center\">Add Person</h1>\r\n                            <p className = \"lead text-center\">\r\n                                enter info\r\n                            </p>\r\n                            <small className = \"d-block pb-3\">* = required fields</small>\r\n\r\n                            <form  onSubmit = {this.onSubmit}>\r\n                               \r\n                                <TextFieldGroup \r\n                                    placeholder = \"name\"\r\n                                    name = \"name\"\r\n                                    value = {this.state.name}\r\n                                    onChange = {this.onChange}\r\n                                    error = {errors.name}\r\n                                    info = \"name\"\r\n                                    autoComplete = \"off\"\r\n                                    \r\n                                />\r\n                                <SelectListGroup \r\n                                    placeholder = \"sex\"\r\n                                    name = \"sex\"\r\n                                    value = {this.state.sex}\r\n                                    onChange = {this.onChange}\r\n                                    options = {options}\r\n                                    error = {errors.sex}\r\n                                    info = \"sex\"\r\n                                />\r\n                                <TextFieldGroup \r\n                                    placeholder = \"age\"\r\n                                    name = \"age\"\r\n                                    value = {this.state.age}\r\n                                    onChange = {this.onChange}\r\n                                    error = {errors.age}\r\n                                    info = \"age\"\r\n                                />\r\n                                <TextFieldGroup \r\n                                    placeholder = \"city\"\r\n                                    name = \"city\"\r\n                                    value = {this.state.city}\r\n                                    onChange = {this.onChange}\r\n                                    error = {errors.city}\r\n                                    info = \"city\"\r\n                                />\r\n                                <TextFieldGroup \r\n                                    placeholder = \"state\"\r\n                                    name = \"state\"\r\n                                    value = {this.state.state}\r\n                                    onChange = {this.onChange}\r\n                                    error = {errors.state}\r\n                                    info = \"state\"\r\n                                />\r\n                                \r\n                                \r\n                                \r\n                                \r\n                                <TextAreaFieldGroup \r\n                                    placeholder = \"bio\"\r\n                                    name = \"bio\"\r\n                                    value = {this.state.bio}\r\n                                    onChange = {this.onChange}\r\n                                    error = {errors.bio}\r\n                                    info = \"bio\"\r\n                                />\r\n\r\n                               \r\n                                <input type = \"submit\" value= \"Submit\" className = \"btn btn-info btn-block mt-4\"/>\r\n                            </form>   \r\n                        \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <br />\r\n                <div className = \"interests\">\r\n                    <div className = \"row\">\r\n                        <div className = \"col\">\r\n                             <br />\r\n                            \r\n                            <h1 className = \"display-4 text-center\">Interests</h1>\r\n                            \r\n                            <Interests sendDataToParent = {this.getDataFromChild} tree2 = {tree.tree} />\r\n                             \r\n                            <div className = \"container\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nAddPerson.propTypes = {\r\n    profile: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired,\r\n    test: PropTypes.func.isRequired,\r\n    tree: PropTypes.object.isRequired,\r\n    interests: PropTypes.object\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile,\r\n    errors: state.errors,\r\n    tree: state.tree,\r\n    interests: state.interests\r\n});\r\n\r\nexport default connect(mapStateToProps, {createProfile, addNode, test, getInterests})(withRouter(AddPerson));"]},"metadata":{},"sourceType":"module"}