{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { IS_UPDATED, GET_MATCHES, GET_ID, GET_PROFILE, GET_NETWORK, GET_RESULTS, GET_PROFILES, PROFILE_LOADING, ADD_INTEREST, GET_INTERESTS, GET_GROUPS } from '../actions/types';\nvar initialState = {\n  profile: null,\n  profiles: null,\n  loading: false,\n  interests: [],\n  groups: \"\",\n  network: [],\n  id: \"\",\n  matches: [],\n  existed: false,\n  update: 0\n};\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case PROFILE_LOADING:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case GET_PROFILES:\n      return _objectSpread({}, state, {\n        profile: action.payload,\n        loading: false\n      });\n\n    case GET_PROFILE:\n      return _objectSpread({}, state, {\n        profile: action.payload,\n        loading: false\n      });\n\n    case ADD_INTEREST:\n      return _objectSpread({}, state, {\n        interests: state.interests.concat(action.payload)\n      });\n\n    case GET_INTERESTS:\n      return _objectSpread({}, state);\n\n    case GET_GROUPS:\n      return _objectSpread({}, state, {\n        groups: action.payload\n      });\n\n    case GET_NETWORK:\n      return _objectSpread({}, state, {\n        network: action.payload\n      });\n\n    case GET_ID:\n      localStorage.user = action.payload.id;\n      return _objectSpread({}, state, {\n        id: action.payload.id,\n        existed: action.payload.existed\n      });\n\n    case GET_MATCHES:\n      return _objectSpread({}, state, {\n        matches: action.payload\n      });\n\n    case IS_UPDATED:\n      return _objectSpread({}, state, {\n        update: action.payload\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:\\Users\\tsc\\Desktop\\projects\\mern-nector-new\\client\\src\\reducers\\profileReducer.js"],"names":["IS_UPDATED","GET_MATCHES","GET_ID","GET_PROFILE","GET_NETWORK","GET_RESULTS","GET_PROFILES","PROFILE_LOADING","ADD_INTEREST","GET_INTERESTS","GET_GROUPS","initialState","profile","profiles","loading","interests","groups","network","id","matches","existed","update","state","action","type","payload","concat","localStorage","user"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,WAArB,EAAkCC,MAAlC,EAA0CC,WAA1C,EAAuDC,WAAvD,EAAoEC,WAApE,EAAiFC,YAAjF,EAA+FC,eAA/F,EAAgHC,YAAhH,EAA8HC,aAA9H,EAA6IC,UAA7I,QAA8J,kBAA9J;AAGA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,IADQ;AAEjBC,EAAAA,QAAQ,EAAE,IAFO;AAGjBC,EAAAA,OAAO,EAAE,KAHQ;AAIjBC,EAAAA,SAAS,EAAE,EAJM;AAKjBC,EAAAA,MAAM,EAAE,EALS;AAMjBC,EAAAA,OAAO,EAAE,EANQ;AAOjBC,EAAAA,EAAE,EAAE,EAPa;AAQjBC,EAAAA,OAAO,EAAE,EARQ;AASjBC,EAAAA,OAAO,EAAE,KATQ;AAUjBC,EAAAA,MAAM,EAAE;AAVS,CAArB;AAaA,eAAe,YAAuC;AAAA,MAA9BC,KAA8B,uEAAtBX,YAAsB;AAAA,MAARY,MAAQ;;AAClD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKjB,eAAL;AACI,+BACOe,KADP;AAEIR,QAAAA,OAAO,EAAE;AAFb;;AAIJ,SAAKR,YAAL;AACI,+BACOgB,KADP;AAEIV,QAAAA,OAAO,EAAEW,MAAM,CAACE,OAFpB;AAGIX,QAAAA,OAAO,EAAC;AAHZ;;AAKJ,SAAKX,WAAL;AACI,+BACOmB,KADP;AAEIV,QAAAA,OAAO,EAAEW,MAAM,CAACE,OAFpB;AAGIX,QAAAA,OAAO,EAAE;AAHb;;AAKJ,SAAKN,YAAL;AACI,+BACOc,KADP;AAEIP,QAAAA,SAAS,EAAEO,KAAK,CAACP,SAAN,CAAgBW,MAAhB,CAAuBH,MAAM,CAACE,OAA9B;AAFf;;AAKJ,SAAKhB,aAAL;AACI,+BACOa,KADP;;AAIJ,SAAKZ,UAAL;AACI,+BACOY,KADP;AAEIN,QAAAA,MAAM,EAAEO,MAAM,CAACE;AAFnB;;AAIJ,SAAKrB,WAAL;AACI,+BACOkB,KADP;AAEIL,QAAAA,OAAO,EAAEM,MAAM,CAACE;AAFpB;;AAIJ,SAAKvB,MAAL;AACIyB,MAAAA,YAAY,CAACC,IAAb,GAAoBL,MAAM,CAACE,OAAP,CAAeP,EAAnC;AACA,+BACOI,KADP;AAEIJ,QAAAA,EAAE,EAAEK,MAAM,CAACE,OAAP,CAAeP,EAFvB;AAGIE,QAAAA,OAAO,EAAEG,MAAM,CAACE,OAAP,CAAeL;AAH5B;;AAKJ,SAAKnB,WAAL;AACI,+BACOqB,KADP;AAEIH,QAAAA,OAAO,EAAEI,MAAM,CAACE;AAFpB;;AAKJ,SAAKzB,UAAL;AACI,+BACOsB,KADP;AAEID,QAAAA,MAAM,EAAEE,MAAM,CAACE;AAFnB;;AAKJ;AACI,aAAOH,KAAP;AA3DR;AA6DH","sourcesContent":["import { IS_UPDATED, GET_MATCHES, GET_ID, GET_PROFILE, GET_NETWORK, GET_RESULTS, GET_PROFILES, PROFILE_LOADING, ADD_INTEREST, GET_INTERESTS, GET_GROUPS} from '../actions/types';\r\n\r\n\r\nconst initialState = {\r\n    profile: null,\r\n    profiles: null,\r\n    loading: false,\r\n    interests: [],\r\n    groups: \"\",\r\n    network: [],\r\n    id: \"\",\r\n    matches: [],\r\n    existed: false,\r\n    update: 0\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case PROFILE_LOADING: \r\n            return{\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_PROFILES:\r\n            return{\r\n                ...state,\r\n                profile: action.payload,\r\n                loading:false\r\n            };\r\n        case GET_PROFILE:\r\n            return{\r\n                ...state,\r\n                profile: action.payload,\r\n                loading: false \r\n            };\r\n        case ADD_INTEREST: \r\n            return{\r\n                ...state,\r\n                interests: state.interests.concat(action.payload)\r\n               \r\n            }\r\n        case GET_INTERESTS:\r\n            return{\r\n                ...state, \r\n                \r\n            }\r\n        case GET_GROUPS:\r\n            return{\r\n                ...state,\r\n                groups: action.payload\r\n            }\r\n        case GET_NETWORK:\r\n            return{\r\n                ...state,\r\n                network: action.payload\r\n            }\r\n        case GET_ID:\r\n            localStorage.user = action.payload.id\r\n            return{\r\n                ...state,\r\n                id: action.payload.id,\r\n                existed: action.payload.existed\r\n            }\r\n        case GET_MATCHES: \r\n            return{\r\n                ...state,\r\n                matches: action.payload\r\n            }\r\n        \r\n        case IS_UPDATED: \r\n            return{\r\n                ...state,\r\n                update: action.payload\r\n            }\r\n        \r\n        default: \r\n            return state; \r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}