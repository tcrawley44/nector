{"ast":null,"code":"import axios from \"axios\";\nimport { SET_CURRENT_USER_ID, GET_ID, GET_MATCHES, GET_PROFILE, GET_NETWORK, GET_GROUPS, PROFILE_LOADING, GET_ERRORS, GET_PROFILES, ADD_INTEREST, GET_INTERESTS, GET_RESULTS, SET_CURRENT_USER } from './types';\nimport { NativeError } from \"mongoose\"; // get current profile\n\nexport var getCurrentProfile = function getCurrentProfile() {\n  return function (dispatch) {\n    dispatch(setProfileLoading());\n    axios.get('/api/profiles').then(function (res) {\n      return dispatch({\n        type: GET_PROFILE,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: {}\n      });\n    });\n  };\n}; // get network\n\nexport var getNetwork = function getNetwork() {\n  return function (dispatch) {\n    axios.get('/api/profiles/network').then(function (res) {\n      return dispatch({\n        type: GET_NETWORK,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: {}\n      });\n    });\n  };\n}; // get profile by handle\n\nexport var getProfileByHandle = function getProfileByHandle(handle) {\n  return function (dispatch) {\n    dispatch(setProfileLoading());\n    axios.get(\"/api/profiles/handle/\".concat(handle)).then(function (res) {\n      return dispatch({\n        type: GET_PROFILE,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_PROFILE,\n        payload: null\n      });\n    });\n  };\n}; //create profile\n\nexport var createProfile = function createProfile(profileData, history) {\n  return function (dispatch) {\n    console.log(\"is this working\");\n    axios.post(\"/api/profiles/txt\", profileData).then(function (res) {\n      return console.log(\"derr\");\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: {}\n      });\n    });\n  };\n};\nexport var addFriendGroup = function addFriendGroup(current) {\n  return function (dispatch) {\n    axios.post(\"/api/profiles/addFriendGroup\", current).then(function (res) {\n      return console.log(\"derr\");\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: {}\n      });\n    });\n  };\n};\nexport var getFriendGroups = function getFriendGroups(current) {\n  return function (dispatch) {\n    axios.post(\"/api/profiles/getFriendGroups\", current).then(function (res) {\n      return dispatch({\n        type: GET_GROUPS,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: {}\n      });\n    });\n  };\n};\nexport var updateProfile = function updateProfile(data, history) {\n  return function (dispatch) {\n    var response;\n    axios.post(\"/api/profiles/update\", data).then(function (res) {\n      return response = res;\n    });\n    history.push(\"/profile/\" + res.data);\n    dispatch({\n      type: SET_CURRENT_USER_ID,\n      payload: response\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: {}\n      });\n    });\n  };\n};\nexport var searchPeople = function searchPeople(data) {\n  return function (dispatch) {\n    axios.post(\"/api/profiles/search\", data).then(function (res) {\n      return dispatch({\n        type: GET_MATCHES,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_RESULTS,\n        payload: null\n      });\n    });\n  };\n}; //return id\n\nexport var searchByName = function searchByName(data) {\n  return function (dispatch) {\n    axios.post(\"/api/profiles/searchByName\", data).then(function (res) {\n      return dispatch({\n        type: GET_ID,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_RESULTS,\n        payload: null\n      });\n    });\n  };\n};\nexport var addInterest = function addInterest(interests) {\n  return function (dispatch) {\n    dispatch({\n      type: ADD_INTEREST,\n      payload: {\n        interests: interests\n      }\n    });\n  };\n};\nexport var getInterests = function getInterests() {\n  return function (dispatch) {\n    dispatch({\n      type: GET_INTERESTS\n    });\n  };\n}; //profile loading\n\nexport var setProfileLoading = function setProfileLoading() {\n  return {\n    type: PROFILE_LOADING\n  };\n}; //add experience\n\nexport var addExperience = function addExperience(expData, history) {\n  return function (dispatch) {\n    axios.post('/api/profiles/experience', expData).then(function (res) {\n      return history.push(\"/dashboard\");\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; //get all profiles\n\nexport var getProfiles = function getProfiles() {\n  return function (dispatch) {\n    axios.get('/api/profiles/all').then(function (res) {\n      return dispatch({\n        type: GET_PROFILES,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n};\nexport var deleteQuery = function deleteQuery(profileData) {\n  return function (dispatch) {\n    axios.post(\"/api/profiles/deleteQuery\", profileData).then(function (res) {\n      return console.log(\"deleted query\");\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; //old getprofiles from mongo\n\n/* dispatch(setProfileLoading());\r\naxios   \r\n    .get('/api/profiles/all')\r\n    .then(res => \r\n        dispatch({\r\n            type: GET_PROFILES,\r\n            payload: res.data\r\n            \r\n        }),\r\n        \r\n    )\r\n    \r\n    .catch(err =>\r\n        dispatch({\r\n            type: GET_PROFILES,\r\n            payload: null\r\n        })\r\n\r\n    ); */","map":{"version":3,"sources":["C:\\Users\\tsc\\Desktop\\projects\\mern-nector-new\\client\\src\\actions\\profileActions.js"],"names":["axios","SET_CURRENT_USER_ID","GET_ID","GET_MATCHES","GET_PROFILE","GET_NETWORK","GET_GROUPS","PROFILE_LOADING","GET_ERRORS","GET_PROFILES","ADD_INTEREST","GET_INTERESTS","GET_RESULTS","SET_CURRENT_USER","NativeError","getCurrentProfile","dispatch","setProfileLoading","get","then","res","type","payload","data","catch","err","getNetwork","getProfileByHandle","handle","createProfile","profileData","history","console","log","post","addFriendGroup","current","getFriendGroups","updateProfile","response","push","searchPeople","searchByName","addInterest","interests","getInterests","addExperience","expData","getProfiles","deleteQuery"],"mappings":"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","sourcesContent":["\r\nimport axios from \"axios\";\r\nimport {SET_CURRENT_USER_ID, GET_ID, GET_MATCHES, GET_PROFILE, GET_NETWORK, GET_GROUPS, PROFILE_LOADING, GET_ERRORS, GET_PROFILES, ADD_INTEREST, GET_INTERESTS, GET_RESULTS, SET_CURRENT_USER} from './types';\r\nimport { NativeError } from \"mongoose\";\r\n\r\n// get current profile\r\nexport const getCurrentProfile = () => dispatch => {\r\n    dispatch(setProfileLoading());\r\n    axios.get('/api/profiles')\r\n        .then(res => \r\n            dispatch({\r\n                type: GET_PROFILE,\r\n                payload: res.data\r\n            })    \r\n        )\r\n        .catch(err => \r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: {}\r\n            })  \r\n        )\r\n}\r\n\r\n// get network\r\nexport const getNetwork = () => dispatch => {\r\n    \r\n    axios.get('/api/profiles/network')\r\n        .then(res => \r\n            dispatch({\r\n                type: GET_NETWORK,\r\n                payload: res.data\r\n            })    \r\n        )\r\n        .catch(err => \r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: {}\r\n            })  \r\n        )\r\n}\r\n\r\n\r\n// get profile by handle\r\nexport const getProfileByHandle = (handle) => dispatch => {\r\n    dispatch(setProfileLoading());\r\n    axios.get(`/api/profiles/handle/${handle}`)\r\n        .then(res => \r\n            dispatch({\r\n                type: GET_PROFILE,\r\n                payload: res.data\r\n            })    \r\n        )\r\n        .catch(err => \r\n            dispatch({\r\n                type: GET_PROFILE,\r\n                payload: null\r\n            })  \r\n        )\r\n}\r\n\r\n//create profile\r\nexport const createProfile = (profileData, history) => dispatch => {\r\n    console.log(\"is this working\");\r\n    axios\r\n        .post(\"/api/profiles/txt\",profileData)\r\n        .then(res =>  console.log(\"derr\"))\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: {}\r\n            })\r\n        );\r\n}\r\n\r\nexport const addFriendGroup = (current) => dispatch => {\r\n    \r\n    axios\r\n        .post(\"/api/profiles/addFriendGroup\", current)\r\n        .then(res =>  console.log(\"derr\"))\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: {}\r\n            })\r\n        );\r\n}\r\n\r\nexport const getFriendGroups = (current) => dispatch => {\r\n    \r\n    axios\r\n        .post(\"/api/profiles/getFriendGroups\", current)\r\n        .then(res =>  \r\n            dispatch({\r\n                type: GET_GROUPS,\r\n                payload: res.data\r\n            })    )\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: {}\r\n            })\r\n        );\r\n}\r\n\r\nexport const updateProfile = (data, history) => dispatch => {\r\n    let response; \r\n    axios\r\n        .post(\"/api/profiles/update\",data)\r\n        .then(res => response = res) \r\n            history.push(\"/profile/\" + res.data)\r\n            dispatch({\r\n                type: SET_CURRENT_USER_ID,\r\n                payload: response\r\n            })\r\n            \r\n            \r\n        \r\n            \r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: {}\r\n            })\r\n        );\r\n}\r\n\r\nexport const searchPeople = (data) => dispatch => {\r\n    axios\r\n        .post(\"/api/profiles/search\", data)\r\n        .then(res =>\r\n            dispatch({\r\n                type: GET_MATCHES,\r\n                payload: res.data\r\n\r\n            })  \r\n        )\r\n        .catch(err => \r\n            dispatch({\r\n                type: GET_RESULTS,\r\n                payload: null\r\n            })  \r\n        )\r\n}\r\n\r\n//return id\r\nexport const searchByName = (data) => dispatch => {\r\n    axios\r\n        .post(\"/api/profiles/searchByName\", data)\r\n        .then(res =>\r\n            dispatch({\r\n                type: GET_ID,\r\n                payload: res.data\r\n            })      \r\n        )\r\n        .catch(err => \r\n            dispatch({\r\n                type: GET_RESULTS,\r\n                payload: null\r\n            })  \r\n        )\r\n}\r\n\r\nexport const addInterest = (interests) => dispatch => {\r\n    \r\n    dispatch({\r\n        type: ADD_INTEREST,\r\n        payload: {interests}\r\n    })\r\n}\r\n\r\nexport const getInterests = () => dispatch => {\r\n    dispatch({\r\n        type: GET_INTERESTS\r\n        \r\n    })\r\n}\r\n\r\n//profile loading\r\nexport const setProfileLoading = () => {\r\n    return {\r\n        type: PROFILE_LOADING\r\n    }\r\n}\r\n\r\n//add experience\r\nexport const addExperience = (expData,history) => dispatch => {\r\n    axios   \r\n        .post('/api/profiles/experience',expData)\r\n        .then(res => history.push(\"/dashboard\"))\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n\r\n        );\r\n        \r\n};\r\n\r\n//get all profiles\r\nexport const getProfiles = () => dispatch => {\r\n    axios   \r\n    .get('/api/profiles/all')\r\n    .then(res => \r\n        dispatch({\r\n            type: GET_PROFILES,\r\n            payload: res.data\r\n        })    \r\n    )\r\n    \r\n    .catch(err =>\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        })\r\n\r\n    );\r\n        \r\n        \r\n};\r\n\r\nexport const deleteQuery = (profileData) => dispatch => {\r\n    axios \r\n    .post(\"/api/profiles/deleteQuery\", profileData)\r\n    .then(res => console.log(\"deleted query\"))\r\n    .catch(err => dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n    }));\r\n}\r\n\r\n//old getprofiles from mongo\r\n/* dispatch(setProfileLoading());\r\naxios   \r\n    .get('/api/profiles/all')\r\n    .then(res => \r\n        dispatch({\r\n            type: GET_PROFILES,\r\n            payload: res.data\r\n            \r\n        }),\r\n        \r\n    )\r\n    \r\n    .catch(err =>\r\n        dispatch({\r\n            type: GET_PROFILES,\r\n            payload: null\r\n        })\r\n\r\n    ); */"]},"metadata":{},"sourceType":"module"}