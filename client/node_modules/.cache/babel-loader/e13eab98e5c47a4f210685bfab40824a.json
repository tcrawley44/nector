{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\src\\\\components\\\\profiles\\\\Profiles.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { getProfiles, getNetwork } from '../../actions/profileActions';\nimport ProfileItem from \"./ProfileItem\";\nimport AddPerson from \"../add-person/AddPerson\";\nimport ProfileInterests from \"./ProfileInterests\";\nimport EditPerson from \"../edit-person/EditPerson\";\nimport Friends from \"./Friends\";\nimport Queries from \"./Queries\";\nimport \"./ItemStyles.css\";\n\nvar Profiles =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Profiles, _Component);\n\n  function Profiles(props) {\n    var _this;\n\n    _classCallCheck(this, Profiles);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Profiles).call(this, props));\n    _this.state = {\n      currentProfile: \"\"\n    };\n\n    _this.props.getProfiles();\n\n    return _this;\n  }\n\n  _createClass(Profiles, [{\n    key: \"update\",\n    value: function update() {\n      this.setState(function (prevState) {\n        return {\n          displayNetwork: !prevState.displayNetwork\n        };\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getProfiles();\n      this.props.getNetwork();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var box;\n\n      if (this.props.profile.profile.people) {\n        var _this$props$profile = this.props.profile,\n            profile = _this$props$profile.profile,\n            network = _this$props$profile.network,\n            loading = _this$props$profile.loading;\n        console.log(profile, \"profile\");\n        var _this$state = this.state,\n            displayInfo = _this$state.displayInfo,\n            displayEdit = _this$state.displayEdit,\n            displayNetwork = _this$state.displayNetwork,\n            displayMore = _this$state.displayMore,\n            displayInterests = _this$state.displayInterests;\n        console.log(profile, \"new profiles\");\n\n        if (profile.people) {\n          this.state.currentProfile = profile.people[this.props.match.params.id];\n        }\n\n        var info;\n        var profileItems;\n        var ints;\n        var more;\n        var network2;\n        var displayProfile = true;\n        var isUsersAccount;\n        var displayEditButton;\n        var currentPerson;\n\n        if (this.props.match.params.id >= this.props.profile.profile.people.length) {\n          currentPerson = this.props.location.state.passedPerson;\n          this.state.currentProfile = currentPerson;\n        } else {\n          currentPerson = profile.people[this.props.match.params.id];\n        }\n\n        if (localStorage.user === this.props.match.params.id) {\n          isUsersAccount = true;\n        } else {\n          isUsersAccount = false;\n        }\n\n        console.log(isUsersAccount);\n        console.log(currentPerson, \"currpurr\");\n        console.log(currentPerson.hasOwnProperty('isClaimed'), \"has prop\");\n\n        if (currentPerson.hasOwnProperty('isClaimed') && currentPerson.isClaimed === \"true\") {\n          if (isUsersAccount) {\n            displayEditButton = true;\n            console.log(\"account match and is claimed\");\n          } else {\n            displayEditButton = false;\n            console.log(\"account not match and is claimed\");\n          }\n        } else {\n          displayEditButton = true;\n          console.log(\"not claimed\");\n        }\n\n        var stars;\n\n        if (currentPerson.hasOwnProperty('stars')) {\n          stars = React.createElement(\"p\", {\n            className: \"text-light\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99\n            },\n            __self: this\n          }, \"Stars: \", currentPerson.stars, \" \");\n        } else {\n          stars = React.createElement(\"p\", {\n            className: \"text-light\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 103\n            },\n            __self: this\n          }, \"Stars: 0 \");\n        }\n\n        var editButtonView;\n\n        if (displayEditButton) {\n          editButtonView = React.createElement(\"div\", {\n            className: \"btn btn-info ml-2\",\n            onClick: function onClick() {\n              _this2.setState(function (prevState) {\n                return {\n                  displayEdit: !prevState.displayEdit\n                };\n              });\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110\n            },\n            __self: this\n          }, \"Edit Profile\");\n        }\n\n        if (displayMore) {\n          more = React.createElement(\"div\", {\n            className: \" mt-2\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123\n            },\n            __self: this\n          }, React.createElement(ProfileInterests, {\n            tree2: this.state.currentProfile.interests[0],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124\n            },\n            __self: this\n          }));\n        }\n\n        if (isUsersAccount) {\n          console.log(network, \"network\");\n          network2 =\n          /* <div className = \"mt-2 ml-2\">\r\n              <Friends current = {this.state.currentProfile.name}/>\r\n                <Queries current = {this.state.currentProfile.name}/>\r\n          </div>  */\n          React.createElement(ProfileInterests, {\n            updateParent: this.update,\n            tree2: network,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 137\n            },\n            __self: this\n          });\n        }\n\n        if (displayEdit) {\n          box = React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 147\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"btn btn-info w-25\",\n            onClick: function onClick() {\n              _this2.setState(function (prevState) {\n                return {\n                  displayEdit: !prevState.displayEdit\n                };\n              });\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 148\n            },\n            __self: this\n          }, \"Back\"), React.createElement(EditPerson, {\n            currName: this.state.currentProfile.name,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 156\n            },\n            __self: this\n          }));\n        } else {\n          if (displayInfo) {\n            info = React.createElement(\"div\", {\n              className: \"row\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 164\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"col text-light\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 165\n              },\n              __self: this\n            }, React.createElement(\"h4\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 166\n              },\n              __self: this\n            }, \" \", this.state.currentProfile.sex), React.createElement(\"h4\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 167\n              },\n              __self: this\n            }, \" \", this.state.currentProfile.age), React.createElement(\"h4\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 168\n              },\n              __self: this\n            }, \" \", this.state.currentProfile.city, \", \", this.state.currentProfile.state)));\n          }\n\n          if (profile === null || loading) {\n            profileItems = \"loading\";\n          } else {\n            if (displayProfile) {\n              box = React.createElement(\"div\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 178\n                },\n                __self: this\n              }, React.createElement(\"h1\", {\n                className: \" display-5 text-center text-light\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 179\n                },\n                __self: this\n              }, this.state.currentProfile.name), stars, React.createElement(\"div\", {\n                className: \"btn btn-info  \",\n                onClick: function onClick() {\n                  _this2.setState(function (prevState) {\n                    return {\n                      displayInfo: !prevState.displayInfo\n                    };\n                  });\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 181\n                },\n                __self: this\n              }, \"Basic Info\"), editButtonView, info, React.createElement(\"div\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 194\n                },\n                __self: this\n              }, React.createElement(\"div\", {\n                className: \"btn btn-info mt-2 w-25\",\n                onClick: function onClick() {\n                  _this2.setState(function (prevState) {\n                    return {\n                      displayMore: !prevState.displayMore\n                    };\n                  });\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 196\n                },\n                __self: this\n              }, \"More\"), more), React.createElement(\"div\", {\n                className: \"mt-2\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 207\n                },\n                __self: this\n              }, network2));\n            } else {\n              var newProfile = profile.people;\n\n              if (newProfile.length > 0) {\n                //console.log(profile[0]);\n                profileItems = newProfile.map(function (profile) {\n                  return React.createElement(\"div\", {\n                    className: \"btn personButton btn-info\",\n                    onClick: function onClick() {\n                      _this2.setState(function (prevState) {\n                        return {\n                          displayProfile: !prevState.displayProfile\n                        };\n                      });\n\n                      _this2.setState(function (prevState) {\n                        return {\n                          currentProfile: profile\n                        };\n                      });\n                    },\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 222\n                    },\n                    __self: this\n                  }, profile.name)\n                  /* <ProfileItem key = {profile._id} profile = {profile} /> */\n                  ;\n                });\n                box = React.createElement(\"div\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 240\n                  },\n                  __self: this\n                }, React.createElement(\"h1\", {\n                  className: \" display-4 text-center\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 241\n                  },\n                  __self: this\n                }, \"List People\"), React.createElement(\"div\", {\n                  className: \"profiles\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 246\n                  },\n                  __self: this\n                }, React.createElement(\"div\", {\n                  className: \"container\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 248\n                  },\n                  __self: this\n                }, React.createElement(\"div\", {\n                  className: \"row\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 249\n                  },\n                  __self: this\n                }, React.createElement(\"div\", {\n                  className: \"col-md-4\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 250\n                  },\n                  __self: this\n                }, profileItems)))));\n              } else {\n                profileItems = React.createElement(\"h4\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 261\n                  },\n                  __self: this\n                }, \"no profiles found...\");\n              }\n            }\n          }\n        }\n      } else {\n        box = React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 268\n          },\n          __self: this\n        }, \"loading...\");\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"listScroll row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col mt-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, box)));\n    }\n  }]);\n\n  return Profiles;\n}(Component);\n\nProfiles.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  network: PropTypes.object,\n  auth: PropTypes.object\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    profile: state.profile,\n    network: state.network,\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getProfiles: getProfiles,\n  getNetwork: getNetwork\n})(Profiles);","map":{"version":3,"sources":["C:\\Users\\tsc\\Desktop\\projects\\mern-nector-new\\client\\src\\components\\profiles\\Profiles.js"],"names":["React","Component","connect","PropTypes","getProfiles","getNetwork","ProfileItem","AddPerson","ProfileInterests","EditPerson","Friends","Queries","Profiles","props","state","currentProfile","setState","prevState","displayNetwork","box","profile","people","network","loading","console","log","displayInfo","displayEdit","displayMore","displayInterests","match","params","id","info","profileItems","ints","more","network2","displayProfile","isUsersAccount","displayEditButton","currentPerson","length","location","passedPerson","localStorage","user","hasOwnProperty","isClaimed","stars","editButtonView","interests","update","name","sex","age","city","newProfile","map","propTypes","func","isRequired","object","auth","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport PropTypes from 'prop-types';\r\nimport {getProfiles,getNetwork} from '../../actions/profileActions';\r\nimport ProfileItem from \"./ProfileItem\";\r\nimport AddPerson from \"../add-person/AddPerson\";\r\nimport ProfileInterests from \"./ProfileInterests\";\r\nimport EditPerson from \"../edit-person/EditPerson\";\r\nimport Friends from \"./Friends\";\r\nimport Queries from \"./Queries\";\r\nimport \"./ItemStyles.css\";\r\nclass Profiles extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n           \r\n           currentProfile: \"\"\r\n        \r\n        }\r\n        this.props.getProfiles()\r\n        \r\n    }\r\n\r\n    update(){\r\n        this.setState(prevState => ({\r\n            displayNetwork: !prevState.displayNetwork\r\n        }))\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.getProfiles();\r\n        this.props.getNetwork();\r\n        \r\n    }\r\n  \r\n    render() {\r\n        let box; \r\n        if(this.props.profile.profile.people){\r\n        const {profile, network, loading} = this.props.profile;\r\n        console.log(profile, \"profile\");\r\n        const {displayInfo,displayEdit, displayNetwork, displayMore, displayInterests } = this.state; \r\n        console.log(profile, \"new profiles\");\r\n        if(profile.people){\r\n            \r\n            this.state.currentProfile = profile.people[this.props.match.params.id];\r\n            \r\n        }\r\n        \r\n        let info;\r\n        let profileItems;\r\n        let ints; \r\n        let more;\r\n        let network2; \r\n        let displayProfile = true; \r\n        let isUsersAccount; \r\n        let displayEditButton; \r\n        let currentPerson;\r\n        \r\n\r\n        \r\n        \r\n        if(this.props.match.params.id >= this.props.profile.profile.people.length){\r\n            currentPerson = this.props.location.state.passedPerson;\r\n            this.state.currentProfile = currentPerson;\r\n        }else{\r\n            currentPerson = profile.people[this.props.match.params.id];\r\n        }\r\n\r\n        \r\n            if(localStorage.user === this.props.match.params.id){\r\n                isUsersAccount = true; \r\n                \r\n            }else{\r\n                isUsersAccount = false; \r\n            }\r\n            console.log(isUsersAccount);\r\n\r\n            \r\n            console.log(currentPerson, \"currpurr\");\r\n            \r\n            console.log(currentPerson.hasOwnProperty('isClaimed'), \"has prop\");\r\n            if((currentPerson.hasOwnProperty('isClaimed'))&& (currentPerson.isClaimed === \"true\") ){\r\n                if(isUsersAccount){\r\n                    displayEditButton = true; \r\n                    console.log(\"account match and is claimed\");\r\n                }else{\r\n                    displayEditButton = false; \r\n                    console.log(\"account not match and is claimed\");\r\n                }\r\n            }else{\r\n                displayEditButton = true; \r\n                console.log(\"not claimed\");\r\n            }\r\n\r\n            let stars; \r\n            if(currentPerson.hasOwnProperty('stars')){\r\n                stars = (\r\n                    <p className = \"text-light\">Stars: {currentPerson.stars} </p>\r\n                )\r\n            }else{\r\n                stars = (\r\n                <p className = \"text-light\">Stars: 0 </p>\r\n                )\r\n            }\r\n        \r\n        let editButtonView; \r\n        if(displayEditButton){\r\n            editButtonView = (\r\n                <div className = \"btn btn-info ml-2\" onClick ={() => {\r\n                    this.setState(prevState => ({\r\n                        displayEdit: !prevState.displayEdit\r\n                        \r\n                    }))}}>\r\n                    \r\n                    Edit Profile\r\n                    \r\n                </div>\r\n            )\r\n        }\r\n\r\n        if(displayMore){\r\n            more = (<div className = \" mt-2\">\r\n                <ProfileInterests tree2 = {this.state.currentProfile.interests[0]}/>\r\n            </div>)\r\n            \r\n        }\r\n        if(isUsersAccount){\r\n            console.log(network, \"network\")\r\n            network2 = (\r\n                /* <div className = \"mt-2 ml-2\">\r\n                    <Friends current = {this.state.currentProfile.name}/>\r\n\r\n                    <Queries current = {this.state.currentProfile.name}/>\r\n                </div>  */\r\n                \r\n                <ProfileInterests updateParent = {this.update} tree2 = {network}/>           \r\n                                   \r\n            )\r\n               \r\n        }\r\n        \r\n        \r\n        \r\n            if(displayEdit){\r\n                box = (\r\n                    <div>\r\n                        <div className = \"btn btn-info w-25\" onClick ={() => {\r\n                            this.setState(prevState => ({\r\n                                displayEdit: !prevState.displayEdit\r\n                            }))}}>\r\n                            \r\n                            Back\r\n                            \r\n                        </div>\r\n                        <EditPerson currName = {this.state.currentProfile.name}/>\r\n                    </div>\r\n                )\r\n            }else{\r\n\r\n            \r\n                if(displayInfo){\r\n                    info = (\r\n                        <div className = \"row\">\r\n                            <div className = \"col text-light\">\r\n                                <h4> {this.state.currentProfile.sex}</h4>\r\n                                <h4> {this.state.currentProfile.age}</h4>\r\n                                <h4> {this.state.currentProfile.city}, {this.state.currentProfile.state}</h4>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n                if (profile === null || loading) {\r\n                    profileItems = \"loading\";\r\n                }else{\r\n                    if(displayProfile){\r\n                        box = (\r\n                            <div>\r\n                                <h1 className = \" display-5 text-center text-light\">{this.state.currentProfile.name}</h1>\r\n                                {stars}\r\n                                <div className = \"btn btn-info  \" onClick ={() => {\r\n                                    this.setState(prevState => ({\r\n                                        displayInfo: !prevState.displayInfo\r\n                                    }))}}>\r\n                                    \r\n                                    Basic Info\r\n                                    \r\n                                </div>\r\n                                {editButtonView}\r\n                                \r\n                            \r\n\r\n                                {info}\r\n                                <div >\r\n                                \r\n                                    <div className = \"btn btn-info mt-2 w-25\" onClick ={() => {\r\n                                        this.setState(prevState => ({\r\n                                            displayMore: !prevState.displayMore\r\n                                            \r\n                                        }))}}>\r\n                                        \r\n                                        More\r\n                                        \r\n                                    </div>\r\n                                    {more}\r\n                                </div>\r\n                                <div className = \"mt-2\">\r\n                                {network2}    \r\n                                </div>\r\n                                \r\n                                \r\n                            </div>\r\n                            \r\n                        )\r\n                    }else{\r\n\r\n                        let newProfile = profile.people;\r\n                        if(newProfile.length > 0){\r\n                            //console.log(profile[0]);\r\n                            profileItems = newProfile.map(profile => (\r\n                                \r\n                                <div className = \"btn personButton btn-info\" onClick ={() => {\r\n                                    this.setState(prevState => ({\r\n                                        displayProfile: !prevState.displayProfile\r\n                                        \r\n                                    }))\r\n                                    this.setState(prevState => ({\r\n                                        currentProfile: profile\r\n                                    \r\n                                    }))\r\n                                        \r\n                                    }}>\r\n                                    \r\n                                    {profile.name}\r\n                                    \r\n                                </div>\r\n                                /* <ProfileItem key = {profile._id} profile = {profile} /> */\r\n                            ))\r\n                            box = (\r\n                                <div>\r\n                                    <h1 className = \" display-4 text-center\">List People</h1>\r\n                                            \r\n                                                \r\n                                            \r\n\r\n                                    <div className = \"profiles\">\r\n                                        \r\n                                        <div className = \"container\">\r\n                                            <div className = \"row\">\r\n                                                <div className = \"col-md-4\">\r\n                                                    \r\n                                                    {profileItems}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }else{\r\n                            profileItems = <h4>no profiles found...</h4>\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }else{\r\n            box = (\r\n                <h1>loading...</h1>\r\n            )\r\n        }\r\n        return (\r\n            <div >\r\n                \r\n\r\n                        <div className = \"listScroll row\" >\r\n                            <div className = \"col mt-10\">\r\n                                {box}\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    \r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nProfiles.propTypes = {\r\n    getProfiles: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    network: PropTypes.object,\r\n    auth: PropTypes.object\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile,\r\n    network: state.network,\r\n    auth: state.auth\r\n})\r\nexport default connect(mapStateToProps, {getProfiles, getNetwork})(Profiles);"]},"metadata":{},"sourceType":"module"}