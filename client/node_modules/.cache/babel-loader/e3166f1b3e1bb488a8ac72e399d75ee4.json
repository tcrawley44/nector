{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\src\\\\components\\\\edit-person\\\\EditPerson.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport TextFieldGroup from \"../common/TextFieldGroup\";\nimport TextAreaFieldGroup from \"../common/TextAreaFieldGroup\";\nimport SelectListGroup from \"../common/SelectListGroup\";\nimport { createProfile, getInterests, updateProfile } from \"../../actions/profileActions\";\nimport Interests from \"../add-person/Interests\";\nimport { getTree, test } from \"../../actions/treeactions\";\nimport { addNode } from \"../../actions/nodeActions\";\nimport \"./EditPersonStyles.css\";\n\nvar EditPerson =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditPerson, _Component);\n\n  function EditPerson(props) {\n    var _this;\n\n    _classCallCheck(this, EditPerson);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditPerson).call(this, props));\n\n    _this.getDataFromChild = function (dataFromChild) {\n      var mergeTrees = function mergeTrees(parentTree, childTree) {\n        var found = false;\n        var searchedAllChildren = false;\n        var i = 1;\n        var atTheEnd = false;\n        console.log(childTree, parentTree);\n\n        if (childTree[1] === undefined || parentTree[i] === undefined) {\n          atTheEnd = true;\n          console.log(\"true\");\n        }\n\n        while (!found && !searchedAllChildren && !atTheEnd) {\n          console.log(\"childtree\", childTree[1][0], \"parenttree\", parentTree[i][0]);\n          console.log(\"makes it here?\");\n\n          if (childTree[1][0] === parentTree[i][0]) {\n            found = true;\n          }\n\n          if (parentTree.length != 1 && i != parentTree.length - 1 && !found) {\n            i = i + 1;\n          } else {\n            searchedAllChildren = true;\n          }\n        }\n\n        console.log(\"makes it here2?\");\n\n        if (found) {\n          console.log(\"i\", i);\n          mergeTrees(parentTree[i], childTree[1]);\n        } else {\n          parentTree.push(childTree[1]);\n        }\n      };\n\n      console.log(\"child being sent: \", dataFromChild);\n\n      if (_this.state.interests[0] === undefined) {\n        _this.state.interests.push(dataFromChild);\n      } else {\n        mergeTrees(_this.state.interests[0], dataFromChild);\n        console.log(_this.state.interests, \"after mergeTree\");\n      }\n    };\n\n    _this.getUpdateFromChild = function () {\n      _this.props.test();\n    };\n\n    _this.state = {\n      name: \"\",\n      sex: \"\",\n      age: \"\",\n      city: \"\",\n      state: \"\",\n      interests: [],\n      bio: \"\",\n      errors: {},\n      derr: \"\" //this.props.addNode(\"Books\", \"Conceptual\");\n\n    };\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSelectChange = _this.onSelectChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(EditPerson, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.test();\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      this.setState({\n        derr: this.derr\n      });\n\n      if (nextProps.errors) {\n        this.setState({\n          errors: nextProps.errors\n        });\n      }\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(e) {\n      e.preventDefault(); //console.log(this.props.interests, \"interests here\");\n\n      var profileData = {\n        name: this.state.name,\n        sex: this.state.sex,\n        age: this.state.age,\n        city: this.state.city,\n        state: this.state.state,\n        interests: this.state.interests,\n        bio: this.state.bio\n      };\n      profileData.name = this.props.current.name;\n      console.log(profileData.name); //console.log(\"what about here\");\n\n      this.props.updateProfile(profileData);\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"onSelectChange\",\n    value: function onSelectChange(e) {\n      this.setState({\n        status: e.target.value\n      }); //console.log(this.status);\n      //console.log(\"derp\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var errors = this.state.errors;\n      var tree = this.props.tree; //console.log(tree);\n      //console.log(\"here2\");\n      //select options for status\n\n      var options = [{\n        label: 'male',\n        value: \"male\"\n      }, {\n        label: 'female',\n        value: \"female\"\n      }];\n      return React.createElement(\"div\", {\n        className: \"add-person\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-8 m-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"display-4 text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"Edit Person\"), React.createElement(\"p\", {\n        className: \"lead text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"enter info\"), React.createElement(\"small\", {\n        className: \"d-block pb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"* = required fields\"), React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(TextFieldGroup, {\n        placeholder: \"name\",\n        name: \"name\",\n        value: this.state.name,\n        onChange: this.onChange,\n        error: errors.name,\n        info: \"name\",\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }), React.createElement(SelectListGroup, {\n        placeholder: \"sex\",\n        name: \"sex\",\n        value: this.state.sex,\n        onChange: this.onChange,\n        options: options,\n        error: errors.sex,\n        info: \"sex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }), React.createElement(TextFieldGroup, {\n        placeholder: \"age\",\n        name: \"age\",\n        value: this.state.age,\n        onChange: this.onChange,\n        error: errors.age,\n        info: \"age\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }), React.createElement(TextFieldGroup, {\n        placeholder: \"city\",\n        name: \"city\",\n        value: this.state.city,\n        onChange: this.onChange,\n        error: errors.city,\n        info: \"city\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }), React.createElement(TextFieldGroup, {\n        placeholder: \"state\",\n        name: \"state\",\n        value: this.state.state,\n        onChange: this.onChange,\n        error: errors.state,\n        info: \"state\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        className: \"btn btn-info btn-block mt-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }))))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"interests\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        className: \"display-4 text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, \"Interests\"), React.createElement(Interests, {\n        updateParent: this.getUpdateFromChild,\n        sendDataToParent: this.getDataFromChild,\n        tree2: tree.tree,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return EditPerson;\n}(Component);\n\nEditPerson.propTypes = {\n  profile: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n  test: PropTypes.func.isRequired,\n  tree: PropTypes.object.isRequired,\n  interests: PropTypes.object\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    profile: state.profile,\n    errors: state.errors,\n    tree: state.tree,\n    interests: state.interests\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateProfile: updateProfile,\n  createProfile: createProfile,\n  addNode: addNode,\n  test: test,\n  getInterests: getInterests\n})(withRouter(EditPerson));","map":{"version":3,"sources":["C:\\Users\\tsc\\Desktop\\projects\\mern-nector-new\\client\\src\\components\\edit-person\\EditPerson.js"],"names":["React","Component","connect","withRouter","PropTypes","TextFieldGroup","TextAreaFieldGroup","SelectListGroup","createProfile","getInterests","updateProfile","Interests","getTree","test","addNode","EditPerson","props","getDataFromChild","dataFromChild","mergeTrees","parentTree","childTree","found","searchedAllChildren","i","atTheEnd","console","log","undefined","length","push","state","interests","getUpdateFromChild","name","sex","age","city","bio","errors","derr","onChange","bind","onSubmit","onSelectChange","nextProps","setState","e","preventDefault","profileData","current","target","value","status","tree","options","label","propTypes","profile","object","isRequired","func","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport {connect} from 'react-redux';\r\nimport {withRouter} from \"react-router-dom\";\r\nimport PropTypes from 'prop-types';\r\nimport TextFieldGroup from \"../common/TextFieldGroup\";\r\nimport TextAreaFieldGroup from \"../common/TextAreaFieldGroup\";\r\nimport SelectListGroup from \"../common/SelectListGroup\";\r\nimport {createProfile, getInterests, updateProfile} from \"../../actions/profileActions\";\r\nimport Interests from \"../add-person/Interests\";\r\nimport{getTree,test} from \"../../actions/treeactions\";\r\nimport {addNode} from \"../../actions/nodeActions\";\r\nimport \"./EditPersonStyles.css\";\r\n\r\n\r\n\r\nclass EditPerson extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n           \r\n            name: \"\",\r\n            sex: \"\",\r\n            age: \"\",\r\n            \r\n            city: \"\",\r\n            state: \"\",\r\n            interests: [],\r\n            bio: \"\",\r\n            errors: {},\r\n            derr: \"\"\r\n        }\r\n        \r\n        //this.props.addNode(\"Books\", \"Conceptual\");\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onSelectChange = this.onSelectChange.bind(this);\r\n    }\r\n    \r\n    componentDidMount(){\r\n        this.props.test();\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        this.setState({derr: this.derr});\r\n        if(nextProps.errors){\r\n            this.setState({errors: nextProps.errors});\r\n        }\r\n    }\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n\r\n        \r\n        //console.log(this.props.interests, \"interests here\");\r\n        const profileData = {\r\n            name: this.state.name,\r\n            sex: this.state.sex,\r\n            age: this.state.age,\r\n            city: this.state.city,\r\n            state: this.state.state, \r\n           \r\n            interests: this.state.interests,\r\n            bio: this.state.bio\r\n        }\r\n        profileData.name = this.props.current.name;\r\n        console.log(profileData.name);\r\n        //console.log(\"what about here\");\r\n        this.props.updateProfile(profileData);\r\n    }\r\n\r\n    getDataFromChild = (dataFromChild) => {\r\n        const mergeTrees = (parentTree, childTree) => {\r\n            let found = false; \r\n            let searchedAllChildren = false; \r\n            let i = 1; \r\n            let atTheEnd = false; \r\n            console.log(childTree, parentTree);\r\n            if(childTree[1] === undefined || parentTree[i] === undefined){\r\n                atTheEnd = true; \r\n                console.log(\"true\");\r\n            }\r\n            while(!found && !searchedAllChildren && !atTheEnd){\r\n                console.log(\"childtree\", childTree[1][0], \"parenttree\", parentTree[i][0])\r\n                console.log(\"makes it here?\")\r\n                if(childTree[1][0] === parentTree[i][0]){\r\n                    found = true; \r\n                }\r\n                if((parentTree.length != 1)&&(i != (parentTree.length-1))&&(!found)){\r\n                    i = i + 1; \r\n                }else{\r\n                    searchedAllChildren = true; \r\n                }\r\n\r\n            }\r\n            console.log(\"makes it here2?\")\r\n            if(found){\r\n                console.log(\"i\",i);\r\n                mergeTrees(parentTree[i],childTree[1]);\r\n            }else{\r\n                \r\n                    parentTree.push(childTree[1]);\r\n                \r\n                \r\n            }\r\n        }\r\n        console.log(\"child being sent: \", dataFromChild)\r\n        if(this.state.interests[0] === undefined){\r\n            this.state.interests.push(dataFromChild);\r\n        }else{\r\n            mergeTrees(this.state.interests[0],dataFromChild)\r\n            console.log(this.state.interests, \"after mergeTree\");\r\n        }\r\n        \r\n    }\r\n\r\n    getUpdateFromChild = () => {\r\n        this.props.test();\r\n    }\r\n\r\n    onChange(e) {\r\n        \r\n            this.setState({[e.target.name]: e.target.value});\r\n        \r\n    }\r\n\r\n    onSelectChange(e) {\r\n        this.setState({status: e.target.value});\r\n        //console.log(this.status);\r\n        //console.log(\"derp\");\r\n    }\r\n\r\n    render() {\r\n        const {errors} = this.state; \r\n        \r\n        const {tree} = this.props; \r\n        //console.log(tree);\r\n        //console.log(\"here2\");\r\n        //select options for status\r\n        const options = [\r\n            \r\n            {\r\n                label: 'male',\r\n                value: \"male\"\r\n            },\r\n            \r\n            {label: 'female', value: \"female\"}\r\n        ];\r\n\r\n       \r\n\r\n        return (\r\n            <div className = \"add-person\">\r\n                <div className = \"container\">\r\n                    <div className = \"row\">\r\n                        <div className = \"col-md-8 m-auto\">\r\n                            <h1 className = \"display-4 text-center\">Edit Person</h1>\r\n                            <p className = \"lead text-center\">\r\n                                enter info\r\n                            </p>\r\n                            <small className = \"d-block pb-3\">* = required fields</small>\r\n\r\n                            <form  onSubmit = {this.onSubmit}>\r\n                               \r\n                                <TextFieldGroup \r\n                                    placeholder = \"name\"\r\n                                    name = \"name\"\r\n                                    value = {this.state.name}\r\n                                    onChange = {this.onChange}\r\n                                    error = {errors.name}\r\n                                    info = \"name\"\r\n                                    autoComplete = \"off\"\r\n                                    \r\n                                />\r\n                                <SelectListGroup \r\n                                    placeholder = \"sex\"\r\n                                    name = \"sex\"\r\n                                    value = {this.state.sex}\r\n                                    onChange = {this.onChange}\r\n                                    options = {options}\r\n                                    error = {errors.sex}\r\n                                    info = \"sex\"\r\n                                />\r\n                                <TextFieldGroup \r\n                                    placeholder = \"age\"\r\n                                    name = \"age\"\r\n                                    value = {this.state.age}\r\n                                    onChange = {this.onChange}\r\n                                    error = {errors.age}\r\n                                    info = \"age\"\r\n                                />\r\n                                <TextFieldGroup \r\n                                    placeholder = \"city\"\r\n                                    name = \"city\"\r\n                                    value = {this.state.city}\r\n                                    onChange = {this.onChange}\r\n                                    error = {errors.city}\r\n                                    info = \"city\"\r\n                                />\r\n                                <TextFieldGroup \r\n                                    placeholder = \"state\"\r\n                                    name = \"state\"\r\n                                    value = {this.state.state}\r\n                                    onChange = {this.onChange}\r\n                                    error = {errors.state}\r\n                                    info = \"state\"\r\n                                />\r\n                                \r\n                                \r\n                                \r\n                                \r\n                                {/* <TextAreaFieldGroup \r\n                                    placeholder = \"bio\"\r\n                                    name = \"bio\"\r\n                                    value = {this.state.bio}\r\n                                    onChange = {this.onChange}\r\n                                    error = {errors.bio}\r\n                                    info = \"bio\"\r\n                                /> */}\r\n\r\n                               \r\n                                <input type = \"submit\" value= \"Submit\" className = \"btn btn-info btn-block mt-4\"/>\r\n                            </form>   \r\n                        \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <br />\r\n                <div className = \"interests\">\r\n                    <div className = \"row\">\r\n                        <div className = \"col\">\r\n                             <br />\r\n                            \r\n                            <h1 className = \"display-4 text-center\">Interests</h1>\r\n                            \r\n                            <Interests updateParent = {this.getUpdateFromChild} sendDataToParent = {this.getDataFromChild} tree2 = {tree.tree} />\r\n                             \r\n                            <div className = \"container\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nEditPerson.propTypes = {\r\n    profile: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired,\r\n    test: PropTypes.func.isRequired,\r\n    tree: PropTypes.object.isRequired,\r\n    interests: PropTypes.object\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile,\r\n    errors: state.errors,\r\n    tree: state.tree,\r\n    interests: state.interests\r\n});\r\n\r\nexport default connect(mapStateToProps, {updateProfile, createProfile, addNode, test, getInterests})(withRouter(EditPerson));"]},"metadata":{},"sourceType":"module"}