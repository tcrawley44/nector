{"map":"{\"version\":3,\"sources\":[\"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\src\\\\validation\\\\is-empty.js\",\"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\src\\\\reducers\\\\authReducer.js\",\"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\src\\\\reducers\\\\errorReducer.js\",\"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\src\\\\reducers\\\\profileReducer.js\",\"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\src\\\\reducers\\\\nodeReducer.js\",\"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\src\\\\reducers\\\\treeReducer.js\",\"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\src\\\\reducers\\\\index.js\",\"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\src\\\\actions\\\\types.js\",\"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\src\\\\store.js\",\"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\src\\\\utils\\\\setAuthToken.js\",\"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\src\\\\actions\\\\authActions.js\",\"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\src\\\\actions\\\\profileActions.js\",\"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\src\\\\components\\\\profiles\\\\ProfileItem.js\",\"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\src\\\\components\\\\common\\\\TextFieldGroup.js\",\"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\src\\\\components\\\\common\\\\SelectListGroup.js\",\"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\src\\\\actions\\\\nodeActions.js\",\"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\src\\\\actions\\\\treeactions.js\",\"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\src\\\\components\\\\add-person\\\\Interests.js\",\"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\src\\\\components\\\\add-person\\\\AddPerson.js\",\"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\src\\\\components\\\\profiles\\\\ProfileQueries.js\",\"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\src\\\\components\\\\profiles\\\\ProfileInterests.js\",\"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\src\\\\components\\\\edit-person\\\\EditPerson.js\",\"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\src\\\\components\\\\profiles\\\\GroupItem.js\",\"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\src\\\\components\\\\profiles\\\\Friends.js\",\"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\src\\\\components\\\\search-people\\\\SearchPeople.js\",\"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\src\\\\components\\\\profiles\\\\Profiles.js\",\"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\src\\\\components\\\\profiles\\\\Queries.js\",\"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\src\\\\components\\\\home\\\\Login.js\",\"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\src\\\\components\\\\home\\\\Welcome.js\",\"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\src\\\\components\\\\home\\\\Home.js\",\"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\src\\\\App.js\",\"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\src\\\\serviceWorker.js\",\"C:\\\\Users\\\\tsc\\\\Desktop\\\\projects\\\\mern-nector-new\\\\client\\\\src\\\\index.js\"],\"names\":[\"isEmpty\",\"value\",\"undefined\",\"Object\",\"keys\",\"length\",\"trim\",\"initialState\",\"isAuthenticated\",\"id\",\"user\",\"profile\",\"profiles\",\"loading\",\"interests\",\"groups\",\"network\",\"matches\",\"existed\",\"node\",\"tree\",\"combineReducers\",\"auth\",\"state\",\"arguments\",\"action\",\"type\",\"objectSpread\",\"payload\",\"errors\",\"concat\",\"middleware\",\"thunk\",\"store\",\"createStore\",\"rootReducer\",\"compose\",\"applyMiddleware\",\"apply\",\"setAuthToken\",\"token\",\"axios\",\"defaults\",\"headers\",\"common\",\"setCurrentUser\",\"decoded\",\"createProfile\",\"profileData\",\"history\",\"dispatch\",\"console\",\"log\",\"post\",\"then\",\"res\",\"catch\",\"err\",\"addInterest\",\"getInterests\",\"getProfiles\",\"get\",\"data\",\"response\",\"Component\",\"TextFieldGroup\",\"_ref\",\"name\",\"placeholder\",\"label\",\"error\",\"info\",\"onChange\",\"disabled\",\"react_default\",\"a\",\"createElement\",\"className\",\"autoComplete\",\"classnames\",\"defaultProps\",\"SelectListGroup\",\"selectOptions\",\"options\",\"map\",\"option\",\"key\",\"addNode\",\"parent\",\"getNodes\",\"getTree\",\"test\",\"Interests\",\"props\",\"_this\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"getDataFromChild\",\"dataFromChild\",\"passUp\",\"tree2\",\"sendDataToParent\",\"refs\",\"foob\",\"style\",\"getUpdateFromChild\",\"updateParent\",\"parentName\",\"bind\",\"assertThisInitialized\",\"onSubmit\",\"e\",\"preventDefault\",\"setState\",\"defineProperty\",\"target\",\"children\",\"listItems\",\"_this2\",\"displayChildren\",\"InterestPort\",\"buttonName\",\"ref\",\"onClick\",\"prevState\",\"connect\",\"withRouter\",\"AddPerson\",\"push\",\"mergeTrees\",\"parentTree\",\"childTree\",\"found\",\"searchedAllChildren\",\"i\",\"atTheEnd\",\"sex\",\"age\",\"city\",\"bio\",\"derr\",\"onSelectChange\",\"nextProps\",\"status\",\"common_TextFieldGroup\",\"common_SelectListGroup\",\"add_person_Interests\",\"ProfileQueries\",\"currentProfile\",\"display\",\"profileItems\",\"current1\",\"results\",\"ProfileInterests\",\"children2\",\"newSlice\",\"len\",\"slice\",\"ProfileInterestPort\",\"butt\",\"Link\",\"to\",\"people\",\"queries\",\"q\",\"profiles_ProfileQueries\",\"EditPerson\",\"currName\",\"updateProfile\",\"GroupItem\",\"groupItems\",\"friends\",\"displayFriends\",\"button\",\"item\",\"groupItem\",\"Friends\",\"friendGroupName\",\"userName\",\"current\",\"getFriendGroups\",\"addFriendGroup\",\"groups2\",\"_this$state\",\"displayGroups\",\"profiles_GroupItem\",\"SearchPeople\",\"queryName\",\"displayResults\",\"currentUserId\",\"searchPeople\",\"results1\",\"match\",\"Profiles\",\"getNetwork\",\"_this$props$profile\",\"box\",\"more\",\"displayInfo\",\"displayEdit\",\"displayNetwork\",\"displayMore\",\"displayInterests\",\"params\",\"profiles_ProfileInterests\",\"edit_person_EditPerson\",\"ints\",\"Login\",\"email\",\"password\",\"password2\",\"registerUser\",\"newLoginUser\",\"emailErrors\",\"emailInput\",\"displaySignUp\",\"displayEmailErrors\",\"userData\",\"Welcome\",\"nameSubmitted\",\"searchByName\",\"d2\",\"finalDisplay\",\"display2\",\"display3\",\"final\",\"Home\",\"displayEditPerson\",\"displayProfiles\",\"displaySearch\",\"add_person_AddPerson\",\"Route\",\"exact\",\"path\",\"component\",\"search_people_SearchPeople\",\"localStorage\",\"jwtToken\",\"jwt_decode\",\"App\",\"es\",\"BrowserRouter\",\"Boolean\",\"window\",\"location\",\"hostname\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"const isEmpty = value =>\\r\\n    \\r\\n    value === undefined ||\\r\\n    value === null ||\\r\\n    (typeof value === 'object' && Object.keys(value).length === 0) ||\\r\\n    (typeof value === 'string' && value.trim().length ===0);\\r\\n\\r\\n\\r\\nexport default isEmpty;\",\"\\r\\nimport {SET_CURRENT_USER, GET_USER_ID} from '../actions/types';\\r\\nimport isEmpty from '../validation/is-empty';\\r\\n\\r\\nconst initialState = {\\r\\n    isAuthenticated: false,\\r\\n    id: \\\"\\\",\\r\\n    user: {}\\r\\n}\\r\\n\\r\\nexport default function(state = initialState, action) {\\r\\n    switch(action.type) {\\r\\n        case SET_CURRENT_USER: \\r\\n            //console.log(action.payload);\\r\\n            return {\\r\\n                ...state,\\r\\n                \\r\\n                isAuthenticated: !isEmpty(action.payload),\\r\\n                user: action.payload\\r\\n            };\\r\\n        case GET_USER_ID:\\r\\n            return{\\r\\n                ...state,\\r\\n                id: action.payload\\r\\n            }\\r\\n        default: \\r\\n            return state; \\r\\n    }\\r\\n\\r\\n}\",\"\\r\\nimport {GET_ERRORS} from '../actions/types';\\r\\n\\r\\nconst initialState = {\\r\\n    \\r\\n};\\r\\n\\r\\nexport default function(state = initialState, action) {\\r\\n    switch(action.type) {\\r\\n        case GET_ERRORS:\\r\\n            return action.payload; \\r\\n        default: \\r\\n            return state; \\r\\n    }\\r\\n\\r\\n}\",\"import {GET_MATCHES, GET_ID, GET_PROFILE, GET_NETWORK, GET_RESULTS, GET_PROFILES, PROFILE_LOADING, ADD_INTEREST, GET_INTERESTS, GET_GROUPS} from '../actions/types';\\r\\n\\r\\n\\r\\nconst initialState = {\\r\\n    profile: null,\\r\\n    profiles: null,\\r\\n    loading: false,\\r\\n    interests: [],\\r\\n    groups: \\\"\\\",\\r\\n    network: [],\\r\\n    id: \\\"\\\",\\r\\n    matches: [],\\r\\n    existed: false\\r\\n}\\r\\n\\r\\nexport default function(state = initialState, action) {\\r\\n    switch(action.type) {\\r\\n        case PROFILE_LOADING: \\r\\n            return{\\r\\n                ...state,\\r\\n                loading: true\\r\\n            }\\r\\n        case GET_PROFILES:\\r\\n            return{\\r\\n                ...state,\\r\\n                profile: action.payload,\\r\\n                loading:false\\r\\n            };\\r\\n        case GET_PROFILE:\\r\\n            return{\\r\\n                ...state,\\r\\n                profile: action.payload,\\r\\n                loading: false \\r\\n            };\\r\\n        case ADD_INTEREST: \\r\\n            return{\\r\\n                ...state,\\r\\n                interests: state.interests.concat(action.payload)\\r\\n               \\r\\n            }\\r\\n        case GET_INTERESTS:\\r\\n            return{\\r\\n                ...state, \\r\\n                \\r\\n            }\\r\\n        case GET_GROUPS:\\r\\n            return{\\r\\n                ...state,\\r\\n                groups: action.payload\\r\\n            }\\r\\n        case GET_NETWORK:\\r\\n            return{\\r\\n                ...state,\\r\\n                network: action.payload\\r\\n            }\\r\\n        case GET_ID:\\r\\n            return{\\r\\n                ...state,\\r\\n                id: action.payload.id,\\r\\n                existed: action.payload.existed\\r\\n            }\\r\\n        case GET_MATCHES: \\r\\n            return{\\r\\n                ...state,\\r\\n                matches: action.payload\\r\\n            }\\r\\n        default: \\r\\n            return state; \\r\\n    }\\r\\n}\",\"import {GET_NODE} from '../actions/types';\\r\\n\\r\\n\\r\\nconst initialState = {\\r\\n    node: null\\r\\n}\\r\\n\\r\\nexport default function( state = initialState, action) {\\r\\n    switch(action.type) {\\r\\n        case GET_NODE: \\r\\n            return{\\r\\n                ...state,\\r\\n                node: action.payload\\r\\n            }\\r\\n        \\r\\n        default: \\r\\n            return state;\\r\\n       \\r\\n    }\\r\\n}\",\"import {GET_TREE,GET_TEST} from '../actions/types';\\r\\n\\r\\n\\r\\nconst initialState = {\\r\\n    tree: \\\"\\\"\\r\\n}\\r\\n\\r\\nexport default function( state = initialState, action) {\\r\\n    switch(action.type) {\\r\\n        case GET_TREE: \\r\\n            return{\\r\\n                ...state,\\r\\n                tree: action.payload\\r\\n            }\\r\\n        \\r\\n        case GET_TEST:\\r\\n            return{\\r\\n                ...state,\\r\\n                tree: action.payload \\r\\n            }\\r\\n        default: \\r\\n            return state;\\r\\n       \\r\\n    }\\r\\n}\",\"import {combineReducers} from 'redux';\\r\\nimport authReducer from './authReducer';\\r\\nimport errorReducer from './errorReducer';\\r\\nimport profileReducer from './profileReducer'\\r\\nimport nodeReducer from \\\"./nodeReducer\\\";\\r\\nimport treeReducer from \\\"./treeReducer\\\";\\r\\nexport default combineReducers({\\r\\n    auth: authReducer,\\r\\n    errors: errorReducer,\\r\\n    profile: profileReducer,\\r\\n    node: nodeReducer,\\r\\n    tree: treeReducer\\r\\n});\",\"export const GET_ERRORS = 'GET_ERRORS';\\r\\nexport const SET_CURRENT_USER = \\\"SET_CURRENT_USER\\\";\\r\\nexport const GET_PROFILE = \\\"GET_PROFILE\\\";\\r\\nexport const PROFILE_LOADING = \\\"PROFILE_LOADING\\\";\\r\\nexport const PROFILE_NOT_FOUND = \\\"PROFILE_NOT_FOUND\\\";\\r\\nexport const CLEAR_CURRENT_PROFILE = \\\"CLEAR_CURRENT_PROFILE\\\";\\r\\nexport const GET_PROFILES = \\\"GET_PROFILES\\\";\\r\\nexport const GET_NODE = \\\"GET_NODE\\\";\\r\\nexport const GET_TREE = \\\"GET_TREE\\\";\\r\\nexport const GET_TEST = \\\"GET_TEST\\\";\\r\\nexport const ADD_INTEREST = \\\"ADD_INTEREST\\\";\\r\\nexport const GET_INTERESTS = \\\"GET_INTERESTS\\\";\\r\\nexport const GET_RESULTS = \\\"GET_RESULTS\\\";\\r\\nexport const GET_GROUPS = \\\"GET_GROUPS\\\"\\r\\nexport const IS_UPDATED = \\\"IS_UPDATED\\\";\\r\\nexport const GET_NETWORK = \\\"GET_NETWORK\\\";\\r\\nexport const GET_USER_ID = \\\"GET_USER_ID\\\";\\r\\nexport const GET_ID = \\\"GET_ID\\\";\\r\\nexport const GET_MATCHES = \\\"GET_MATCHES\\\";\",\"import {createStore, applyMiddleware, compose} from 'redux'; \\r\\nimport thunk from 'redux-thunk';\\r\\nimport rootReducer from './reducers';\\r\\n\\r\\nconst initialState = {};\\r\\n\\r\\nconst middleware = [thunk];\\r\\n\\r\\nconst store = createStore(\\r\\n    rootReducer, \\r\\n    initialState, \\r\\n    compose(\\r\\n        applyMiddleware(...middleware),\\r\\n        //window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\\r\\n    )\\r\\n    \\r\\n\\r\\n);\\r\\n\\r\\nexport default store; \",\"\\r\\nimport axios from 'axios';\\r\\n\\r\\nconst setAuthToken = token => {\\r\\n\\r\\n    if(token){\\r\\n        //apply to every request\\r\\n        axios.defaults.headers.common['Authorization'] = token;\\r\\n\\r\\n    }else{\\r\\n\\r\\n        //delete auth header\\r\\n        delete axios.defaults.headers.common['Authorization'];\\r\\n    }\\r\\n}\\r\\n\\r\\nexport default setAuthToken; \",\"import { GET_ERRORS,SET_CURRENT_USER, GET_USER_ID} from './types';\\r\\nimport axios from 'axios';\\r\\nimport setAuthToken from '../utils/setAuthToken';\\r\\nimport jwt_decode from 'jwt-decode';\\r\\n// Register user\\r\\nexport const registerUser = (userData) => dispatch => {\\r\\n    axios\\r\\n        .post('/api/auth/register', userData)\\r\\n        .then(res => \\r\\n            dispatch({\\r\\n\\r\\n                type: SET_CURRENT_USER,\\r\\n                payload: res.data\\r\\n            \\r\\n            }))\\r\\n        .catch(err => \\r\\n            console.log(\\\"error\\\")\\r\\n        );\\r\\n};\\r\\n\\r\\nexport const newLoginUser = userData => dispatch => {\\r\\n    axios.post('/api/auth/login', userData)\\r\\n        .then(res => {\\r\\n            dispatch({\\r\\n                type: GET_USER_ID,\\r\\n                payload: res.data\\r\\n            })\\r\\n            \\r\\n        })\\r\\n        .catch(err => \\r\\n            dispatch({\\r\\n                type: GET_ERRORS,\\r\\n                payload: err.response.data\\r\\n            })\\r\\n        )\\r\\n}\\r\\n\\r\\n//login - get user token\\r\\nexport const loginUser = userData => dispatch => {\\r\\n    axios.post('/api/users/login', userData)\\r\\n        .then(res => {\\r\\n            //save to local storage\\r\\n            \\r\\n            const {token} = res.data;\\r\\n            //set token to local storage\\r\\n            localStorage.setItem('jwtToken', token);\\r\\n            //set token to auth header\\r\\n            setAuthToken(token);\\r\\n            //decode token to get user data\\r\\n            const decoded = jwt_decode(token);\\r\\n            //set current user\\r\\n            dispatch(setCurrentUser(decoded));\\r\\n        })\\r\\n        .catch(err => \\r\\n            dispatch({\\r\\n                type: GET_ERRORS,\\r\\n                payload: err.response.data\\r\\n            })\\r\\n        )\\r\\n};\\r\\n\\r\\n//set logged in user\\r\\nexport const setCurrentUser = (decoded) => {\\r\\n    return {\\r\\n        type: SET_CURRENT_USER,\\r\\n        payload: decoded\\r\\n    }\\r\\n}\",\"\\r\\nimport axios from \\\"axios\\\";\\r\\nimport {GET_ID, GET_MATCHES, GET_PROFILE, GET_NETWORK, GET_GROUPS, PROFILE_LOADING, GET_ERRORS, GET_PROFILES, ADD_INTEREST, GET_INTERESTS, GET_RESULTS} from './types';\\r\\nimport { NativeError } from \\\"mongoose\\\";\\r\\n\\r\\n// get current profile\\r\\nexport const getCurrentProfile = () => dispatch => {\\r\\n    dispatch(setProfileLoading());\\r\\n    axios.get('/api/profiles')\\r\\n        .then(res => \\r\\n            dispatch({\\r\\n                type: GET_PROFILE,\\r\\n                payload: res.data\\r\\n            })    \\r\\n        )\\r\\n        .catch(err => \\r\\n            dispatch({\\r\\n                type: GET_ERRORS,\\r\\n                payload: {}\\r\\n            })  \\r\\n        )\\r\\n}\\r\\n\\r\\n// get network\\r\\nexport const getNetwork = () => dispatch => {\\r\\n    \\r\\n    axios.get('/api/profiles/network')\\r\\n        .then(res => \\r\\n            dispatch({\\r\\n                type: GET_NETWORK,\\r\\n                payload: res.data\\r\\n            })    \\r\\n        )\\r\\n        .catch(err => \\r\\n            dispatch({\\r\\n                type: GET_ERRORS,\\r\\n                payload: {}\\r\\n            })  \\r\\n        )\\r\\n}\\r\\n\\r\\n\\r\\n// get profile by handle\\r\\nexport const getProfileByHandle = (handle) => dispatch => {\\r\\n    dispatch(setProfileLoading());\\r\\n    axios.get(`/api/profiles/handle/${handle}`)\\r\\n        .then(res => \\r\\n            dispatch({\\r\\n                type: GET_PROFILE,\\r\\n                payload: res.data\\r\\n            })    \\r\\n        )\\r\\n        .catch(err => \\r\\n            dispatch({\\r\\n                type: GET_PROFILE,\\r\\n                payload: null\\r\\n            })  \\r\\n        )\\r\\n}\\r\\n\\r\\n//create profile\\r\\nexport const createProfile = (profileData, history) => dispatch => {\\r\\n    console.log(\\\"is this working\\\");\\r\\n    axios\\r\\n        .post(\\\"/api/profiles/txt\\\",profileData)\\r\\n        .then(res =>  console.log(\\\"derr\\\"))\\r\\n        .catch(err =>\\r\\n            dispatch({\\r\\n                type: GET_ERRORS,\\r\\n                payload: {}\\r\\n            })\\r\\n        );\\r\\n}\\r\\n\\r\\nexport const addFriendGroup = (current) => dispatch => {\\r\\n    \\r\\n    axios\\r\\n        .post(\\\"/api/profiles/addFriendGroup\\\", current)\\r\\n        .then(res =>  console.log(\\\"derr\\\"))\\r\\n        .catch(err =>\\r\\n            dispatch({\\r\\n                type: GET_ERRORS,\\r\\n                payload: {}\\r\\n            })\\r\\n        );\\r\\n}\\r\\n\\r\\nexport const getFriendGroups = (current) => dispatch => {\\r\\n    \\r\\n    axios\\r\\n        .post(\\\"/api/profiles/getFriendGroups\\\", current)\\r\\n        .then(res =>  \\r\\n            dispatch({\\r\\n                type: GET_GROUPS,\\r\\n                payload: res.data\\r\\n            })    )\\r\\n        .catch(err =>\\r\\n            dispatch({\\r\\n                type: GET_ERRORS,\\r\\n                payload: {}\\r\\n            })\\r\\n        );\\r\\n}\\r\\n\\r\\nexport const updateProfile = (data) => dispatch => {\\r\\n\\r\\n    axios\\r\\n        .post(\\\"/api/profiles/update\\\",data)\\r\\n        .then(res =>  console.log(\\\"derr\\\"))\\r\\n        .catch(err =>\\r\\n            dispatch({\\r\\n                type: GET_ERRORS,\\r\\n                payload: {}\\r\\n            })\\r\\n        );\\r\\n}\\r\\n\\r\\nexport const searchPeople = (data) => dispatch => {\\r\\n    axios\\r\\n        .post(\\\"/api/profiles/search\\\", data)\\r\\n        .then(res =>\\r\\n            dispatch({\\r\\n                type: GET_MATCHES,\\r\\n                payload: res.data\\r\\n\\r\\n            })  \\r\\n        )\\r\\n        .catch(err => \\r\\n            dispatch({\\r\\n                type: GET_RESULTS,\\r\\n                payload: null\\r\\n            })  \\r\\n        )\\r\\n}\\r\\n\\r\\n//return id\\r\\nexport const searchByName = (data) => dispatch => {\\r\\n    axios\\r\\n        .post(\\\"/api/profiles/searchByName\\\", data)\\r\\n        .then(res =>\\r\\n            dispatch({\\r\\n                type: GET_ID,\\r\\n                payload: res.data\\r\\n            })      \\r\\n        )\\r\\n        .catch(err => \\r\\n            dispatch({\\r\\n                type: GET_RESULTS,\\r\\n                payload: null\\r\\n            })  \\r\\n        )\\r\\n}\\r\\n\\r\\nexport const addInterest = (interests) => dispatch => {\\r\\n    \\r\\n    dispatch({\\r\\n        type: ADD_INTEREST,\\r\\n        payload: {interests}\\r\\n    })\\r\\n}\\r\\n\\r\\nexport const getInterests = () => dispatch => {\\r\\n    dispatch({\\r\\n        type: GET_INTERESTS\\r\\n        \\r\\n    })\\r\\n}\\r\\n\\r\\n//profile loading\\r\\nexport const setProfileLoading = () => {\\r\\n    return {\\r\\n        type: PROFILE_LOADING\\r\\n    }\\r\\n}\\r\\n\\r\\n//add experience\\r\\nexport const addExperience = (expData,history) => dispatch => {\\r\\n    axios   \\r\\n        .post('/api/profiles/experience',expData)\\r\\n        .then(res => history.push(\\\"/dashboard\\\"))\\r\\n        .catch(err =>\\r\\n            dispatch({\\r\\n                type: GET_ERRORS,\\r\\n                payload: err.response.data\\r\\n            })\\r\\n\\r\\n        );\\r\\n        \\r\\n};\\r\\n\\r\\n//get all profiles\\r\\nexport const getProfiles = () => dispatch => {\\r\\n    axios   \\r\\n    .get('/api/profiles/all')\\r\\n    .then(res => \\r\\n        dispatch({\\r\\n            type: GET_PROFILES,\\r\\n            payload: res.data\\r\\n        })    \\r\\n    )\\r\\n    \\r\\n    .catch(err =>\\r\\n        dispatch({\\r\\n            type: GET_ERRORS,\\r\\n            payload: err.response.data\\r\\n        })\\r\\n\\r\\n    );\\r\\n        \\r\\n        \\r\\n};\\r\\n\\r\\n//old getprofiles from mongo\\r\\n/* dispatch(setProfileLoading());\\r\\naxios   \\r\\n    .get('/api/profiles/all')\\r\\n    .then(res => \\r\\n        dispatch({\\r\\n            type: GET_PROFILES,\\r\\n            payload: res.data\\r\\n            \\r\\n        }),\\r\\n        \\r\\n    )\\r\\n    \\r\\n    .catch(err =>\\r\\n        dispatch({\\r\\n            type: GET_PROFILES,\\r\\n            payload: null\\r\\n        })\\r\\n\\r\\n    ); */\",\"import React, { Component } from 'react'\\r\\nimport PropTypes from \\\"prop-types\\\";\\r\\nimport {Link} from \\\"react-router-dom\\\";\\r\\nimport isEmpty from \\\"../../validation/is-empty\\\";\\r\\nimport \\\"./ItemStyles.css\\\";\\r\\n\\r\\nclass ProfileItem extends Component {\\r\\n  render() {\\r\\n\\r\\n    const {profile} = this.props;\\r\\n\\r\\n    return (\\r\\n      <div>\\r\\n        <div className = \\\"row\\\">\\r\\n          <div >\\r\\n            \\r\\n          </div>\\r\\n          <div >\\r\\n          \\r\\n            <h3 className = \\\"dark\\\"><Link to = {`/profile/${profile.handle}`} className = \\\"btn btn-info\\\">{profile.name}</Link></h3>\\r\\n            \\r\\n            {/* <Link to = {`/profile/${profile.handle}`} className = \\\"btn btn-info\\\">view profile</Link> */}\\r\\n          </div>\\r\\n          \\r\\n        </div>\\r\\n        \\r\\n      </div>\\r\\n    )\\r\\n  }\\r\\n}\\r\\n\\r\\nProfileItem.propTypes = {\\r\\n  profile: PropTypes.object.isRequired\\r\\n}\\r\\n\\r\\nexport default ProfileItem;\\r\\n\",\"import React from 'react'\\r\\nimport classnames from 'classnames';\\r\\nimport propTypes from 'prop-types';\\r\\nimport \\\"./fieldStyles.css\\\";\\r\\nconst TextFieldGroup = ({\\r\\n    name,\\r\\n    placeholder,\\r\\n    value,\\r\\n    label, \\r\\n    error,\\r\\n    info,\\r\\n    type,\\r\\n    onChange,\\r\\n    disabled\\r\\n}) => {\\r\\n  return (\\r\\n    <div className=\\\"form-group\\\">\\r\\n        <input \\r\\n            \\r\\n            autoComplete = \\\"new-password\\\"\\r\\n            type={type}\\r\\n            className={classnames(\\\"form-control form-control-lg\\\" )}\\r\\n            placeholder={placeholder} \\r\\n            name={name}\\r\\n            value = {value} \\r\\n            onChange = {onChange}\\r\\n            disabled = {disabled}\\r\\n            \\r\\n        />             \\r\\n    </div>\\r\\n  )\\r\\n}\\r\\n\\r\\nTextFieldGroup.propTypes = {\\r\\n    name: propTypes.string.isRequired,\\r\\n    placeholder: propTypes.string,\\r\\n    value: propTypes.string.isRequired,\\r\\n    info: propTypes.string,\\r\\n    \\r\\n    error: propTypes.string,\\r\\n    type: propTypes.string.isRequired,\\r\\n    onChange: propTypes.func.isRequired, \\r\\n    disabled: propTypes.string\\r\\n}\\r\\n\\r\\nTextFieldGroup.defaultProps = {\\r\\n    type: 'text'\\r\\n}\\r\\n\\r\\nexport default TextFieldGroup;\",\"import React from 'react'\\r\\nimport classnames from 'classnames';\\r\\nimport propTypes from 'prop-types';\\r\\n\\r\\nconst SelectListGroup = ({\\r\\n    name,\\r\\n    \\r\\n    value,\\r\\n    \\r\\n    error,\\r\\n    info,\\r\\n    \\r\\n    onChange,\\r\\n    options\\r\\n    \\r\\n}) => {\\r\\n    const selectOptions = options.map(option => (\\r\\n        <option key = {option.label} value = {option.value}>\\r\\n            {option.label}\\r\\n        </option>\\r\\n    ))\\r\\n    return (\\r\\n        <div className=\\\"form-group\\\">\\r\\n            <select\\r\\n                \\r\\n                className={classnames(\\\"form-control form-control-lg p-1 \\\" )}\\r\\n                 \\r\\n                name={name}\\r\\n                value = {value} \\r\\n                onChange = {onChange}\\r\\n            >\\r\\n                {selectOptions}\\r\\n            </select>\\r\\n                \\r\\n                        \\r\\n        </div>\\r\\n    )\\r\\n}\\r\\n\\r\\nSelectListGroup.propTypes = {\\r\\n    name: propTypes.string.isRequired,\\r\\n    \\r\\n    value: propTypes.string.isRequired,\\r\\n    info: propTypes.string,\\r\\n    error: propTypes.string,\\r\\n    \\r\\n    onChange: propTypes.func.isRequired, \\r\\n    options: propTypes.array.isRequired\\r\\n    \\r\\n}\\r\\n\\r\\n\\r\\n\\r\\nexport default SelectListGroup;\",\"import { GET_ERRORS, GET_NODE, IS_UPDATED} from './types';\\r\\nimport axios from 'axios';\\r\\n\\r\\nexport const addNode = (name, parent) => dispatch => {\\r\\n    axios\\r\\n        .post('/api/nodes/', {name, parent} )\\r\\n        .then(res => \\r\\n            dispatch({\\r\\n                type: IS_UPDATED,\\r\\n                payload: res.data\\r\\n            }))\\r\\n        .catch(err => \\r\\n            dispatch({\\r\\n                type: GET_ERRORS,\\r\\n                payload: err.response.data\\r\\n            })\\r\\n        );\\r\\n}\\r\\n\\r\\nexport const getNodes = () => dispatch => {\\r\\n\\r\\n    axios\\r\\n        .get(\\\"/api/nodes/\\\")\\r\\n        .then(res =>\\r\\n            dispatch({\\r\\n                type: GET_NODE,\\r\\n                payload: res.data\\r\\n            }),\\r\\n            \\r\\n        )\\r\\n        .catch(err =>\\r\\n            dispatch({\\r\\n                type: GET_NODE,\\r\\n                payload: null\\r\\n            })\\r\\n\\r\\n        );\\r\\n}\",\"import { GET_TREE, GET_TEST} from './types';\\r\\nimport axios from 'axios';\\r\\n\\r\\n\\r\\n\\r\\nexport const getTree = () => dispatch => {\\r\\n\\r\\n    axios\\r\\n        .get(\\\"/api/tree/\\\")\\r\\n        .then(res =>\\r\\n            dispatch({\\r\\n                type: GET_TREE,\\r\\n                payload: res.data\\r\\n            }),\\r\\n            \\r\\n        )\\r\\n        .catch(err =>\\r\\n            dispatch({\\r\\n                type: GET_TREE,\\r\\n                payload: null\\r\\n            })\\r\\n\\r\\n        );\\r\\n}\\r\\n\\r\\nexport const test = () => dispatch => {\\r\\n\\r\\n    axios\\r\\n        .get(\\\"/api/tree/test\\\")\\r\\n        .then(res =>\\r\\n            dispatch({\\r\\n                type: GET_TREE,\\r\\n                payload: res.data\\r\\n            }),\\r\\n            \\r\\n        )\\r\\n        .catch(err =>\\r\\n            dispatch({\\r\\n                type: GET_TREE,\\r\\n                payload: null\\r\\n            })\\r\\n\\r\\n        );\\r\\n            \\r\\n            \\r\\n\\r\\n            \\r\\n                 \\r\\n                 \\r\\n            \\r\\n}\\r\\n\\r\\n\",\"import React, { Component } from 'react'\\r\\nimport {connect} from 'react-redux';\\r\\nimport {withRouter} from \\\"react-router-dom\\\";\\r\\nimport PropTypes from 'prop-types';\\r\\nimport \\\"./AddPersonStyles.css\\\";\\r\\nimport TextFieldGroup from \\\"../common/TextFieldGroup\\\";\\r\\nimport {addNode,getNodes} from \\\"../../actions/nodeActions\\\";\\r\\nimport {getTree,test} from \\\"../../actions/treeactions\\\";\\r\\nimport {addInterest, getInterests} from \\\"../../actions/profileActions\\\";\\r\\n\\r\\n\\r\\nclass Interests extends Component {\\r\\n\\r\\n    \\r\\n    constructor(props) {\\r\\n        super(props);\\r\\n        this.state = {\\r\\n           \\r\\n           name: \\\"\\\",\\r\\n           parentName: \\\"\\\",\\r\\n           interests: []\\r\\n           \\r\\n        }\\r\\n        this.onChange = this.onChange.bind(this);\\r\\n        this.onSubmit = this.onSubmit.bind(this);\\r\\n        //this.props.test();\\r\\n        \\r\\n        \\r\\n    }\\r\\n        \\r\\n    componentDidMount(){\\r\\n        \\r\\n    }\\r\\n       \\r\\n    onSubmit(e){\\r\\n        e.preventDefault();\\r\\n\\r\\n        const data = {\\r\\n            name: this.state.name   \\r\\n        }\\r\\n        \\r\\n            \\r\\n        //console.log(data.name, this.state.parentName );\\r\\n        \\r\\n        this.props.addNode(data.name, this.state.parentName);\\r\\n        \\r\\n        this.props.updateParent();\\r\\n    }\\r\\n\\r\\n    \\r\\n\\r\\n    onChange(e) {\\r\\n        \\r\\n            this.setState({[e.target.name]: e.target.value});\\r\\n        \\r\\n    }\\r\\n\\r\\n    \\r\\n    getDataFromChild = (dataFromChild) => {\\r\\n        //console.log(dataFromChild);\\r\\n        let passUp = [this.props.tree2.name, dataFromChild]\\r\\n        this.props.sendDataToParent(passUp);\\r\\n        this.refs.foob.style = 'background-color: red';\\r\\n        \\r\\n        \\r\\n        \\r\\n    }\\r\\n   \\r\\n    getUpdateFromChild = () => {\\r\\n        this.props.updateParent();\\r\\n    }\\r\\n\\r\\n    render() {\\r\\n        const { displayChildren} = this.state; \\r\\n        \\r\\n        let children; \\r\\n        let listItems;\\r\\n        \\r\\n        if(!(this.props.tree2 === \\\"\\\" || undefined)){\\r\\n            //console.log(this.props.tree2.children);\\r\\n            listItems = this.props.tree2.children.map((node) =>\\r\\n                <div key = {node.name}>\\r\\n                    <InterestPort updateParent = {this.getUpdateFromChild} sendDataToParent = {this.getDataFromChild} key = {node.name} tree2 = {node} />\\r\\n                </div>\\r\\n            );\\r\\n            //console.log(listItems);\\r\\n        }\\r\\n        if(displayChildren){\\r\\n            children = (\\r\\n                <div className = \\\"nodeContainer\\\">\\r\\n                {listItems}\\r\\n                \\r\\n                <form  className =\\\"newChild\\\" onSubmit = {this.onSubmit}>\\r\\n                        <div className = \\\"row derp\\\"> \\r\\n                            <input\\r\\n                    \\r\\n                                className = \\\"form-control squish form-control-lg\\\" \\r\\n                                placeholder=\\\"name\\\"\\r\\n                                name=\\\"name\\\"\\r\\n                                value = {this.state.name}\\r\\n                                onChange = {this.onChange}\\r\\n                                autoComplete = \\\"off\\\"\\r\\n                            />             \\r\\n                                      \\r\\n                                \\r\\n                               \\r\\n                            <input type = \\\"submit\\\" value= \\\"+\\\" className = \\\"btn btn-info butt\\\"/>\\r\\n                        </div>\\r\\n                    </form> \\r\\n                </div>\\r\\n            )\\r\\n        }else{\\r\\n            children = (\\r\\n                \\r\\n                    <div></div>     \\r\\n                    \\r\\n                 \\r\\n            )\\r\\n        }\\r\\n        let buttonName = \\\"test\\\";\\r\\n         if(!(this.props.tree2 === \\\"\\\")){\\r\\n            //console.log(this.props.tree2.name);\\r\\n            buttonName = this.props.tree2.name;\\r\\n            this.state.parentName = buttonName; \\r\\n        }   \\r\\n        //console.log(\\\"hello\\\")\\r\\n        return (\\r\\n            <div>\\r\\n                <div className = \\\"d-flex nodeContainer flex-row ml-2 bd-highlight mb-2\\\">\\r\\n                                    \\r\\n                    <button type = \\\"button\\\" id = \\\"foo\\\" ref = \\\"foob\\\" className = \\\"btn btn-info ml-2\\\" onClick ={() => {\\r\\n                            this.setState(prevState => ({\\r\\n                                displayChildren: !prevState.displayChildren\\r\\n                            }))\\r\\n                        }}>\\r\\n                        {buttonName}\\r\\n                        \\r\\n                    </button> \\r\\n                    <button className = \\\"btn .text-secondary btn-info butt2\\\" onClick ={() => {\\r\\n                            this.refs.foob.style = 'background-color: red';\\r\\n                            this.props.addInterest(buttonName);\\r\\n                            this.props.sendDataToParent([buttonName]);\\r\\n                        }}>\\r\\n                        >\\r\\n                    </button>\\r\\n                </div>\\r\\n                <div className = \\\"col nodeStack\\\">\\r\\n                    {children}\\r\\n                    \\r\\n                </div>\\r\\n\\r\\n                \\r\\n            </div>\\r\\n        )\\r\\n    }\\r\\n}\\r\\n\\r\\nInterests.propTypes = {\\r\\n    //getNodes: PropTypes.func.isRequired,\\r\\n    //node: PropTypes.object.isRequired\\r\\n    //getTree: PropTypes.func.isRequired,\\r\\n    //tree: PropTypes.object.isRequired,\\r\\n    //test: PropTypes.func.isRequired \\r\\n    //addNode: PropTypes.func\\r\\n    //errors: PropTypes.object.isRequired\\r\\n    interests: PropTypes.object\\r\\n}\\r\\n\\r\\nconst mapStateToProps = state => ({\\r\\n    //node: state.node\\r\\n    //tree: state.tree\\r\\n    //errors: state.errors\\r\\n    interests: state.interests\\r\\n})\\r\\n\\r\\nconst InterestPort = connect(mapStateToProps, {addNode, getNodes, getTree, test, addInterest, getInterests})(withRouter(Interests));\\r\\nexport default InterestPort;\",\"import React, { Component } from 'react'\\r\\nimport {connect} from 'react-redux';\\r\\nimport {withRouter} from \\\"react-router-dom\\\";\\r\\nimport PropTypes from 'prop-types';\\r\\nimport TextFieldGroup from \\\"../common/TextFieldGroup\\\";\\r\\nimport TextAreaFieldGroup from \\\"../common/TextAreaFieldGroup\\\";\\r\\nimport SelectListGroup from \\\"../common/SelectListGroup\\\";\\r\\nimport {createProfile, getInterests} from \\\"../../actions/profileActions\\\";\\r\\nimport Interests from \\\"./Interests\\\";\\r\\nimport{getTree,test} from \\\"../../actions/treeactions\\\";\\r\\nimport {addNode} from \\\"../../actions/nodeActions\\\";\\r\\nimport \\\"./AddPersonStyles.css\\\";\\r\\n\\r\\n\\r\\n\\r\\nclass AddPerson extends Component {\\r\\n\\r\\n    constructor(props) {\\r\\n        super(props);\\r\\n        this.state = {\\r\\n           \\r\\n            name: \\\"\\\",\\r\\n            sex: \\\"male\\\",\\r\\n            age: \\\"\\\",\\r\\n            \\r\\n            city: \\\"\\\",\\r\\n            state: \\\"\\\",\\r\\n            interests: [],\\r\\n            bio: \\\"\\\",\\r\\n            errors: {},\\r\\n            derr: \\\"\\\"\\r\\n        }\\r\\n        \\r\\n        //this.props.addNode(\\\"Books\\\", \\\"Conceptual\\\");\\r\\n        this.onChange = this.onChange.bind(this);\\r\\n        this.onSubmit = this.onSubmit.bind(this);\\r\\n        this.onSelectChange = this.onSelectChange.bind(this);\\r\\n    }\\r\\n    \\r\\n    componentDidMount(){\\r\\n        this.props.test();\\r\\n    }\\r\\n\\r\\n    componentWillReceiveProps(nextProps){\\r\\n        this.setState({ derr: this.derr });\\r\\n        if(nextProps.errors){\\r\\n            this.setState({errors: nextProps.errors});\\r\\n        }\\r\\n    }\\r\\n    onSubmit(e){\\r\\n        e.preventDefault();\\r\\n\\r\\n        \\r\\n        //console.log(this.props.interests, \\\"interests here\\\");\\r\\n        const profileData = {\\r\\n            name: this.state.name,\\r\\n            sex: this.state.sex,\\r\\n            age: this.state.age,\\r\\n            city: this.state.city,\\r\\n            state: this.state.state, \\r\\n           \\r\\n            interests: this.state.interests,\\r\\n            bio: this.state.bio\\r\\n        }\\r\\n        console.log(profileData.interests);\\r\\n        this.props.createProfile(profileData, this.props.history);\\r\\n    }\\r\\n    \\r\\n    getDataFromChild = (dataFromChild) => {\\r\\n        //this method culminates all the interest hiearchy\\r\\n        //and then it puts it in to one hiearchy to be saved\\r\\n\\r\\n        //it checks the current state hierachy, compares it with the new addition\\r\\n        //then combines them \\r\\n\\r\\n        //test prints\\r\\n        // console.log(dataFromChild);\\r\\n        // console.log(this.state.interests[0]);\\r\\n        /*\\r\\n        //check if state hiearchy is empty, if so, take the request and set as the interest state\\r\\n        if(this.state.interests[0] === undefined){\\r\\n            this.state.interests.push(dataFromChild);\\r\\n        }else{\\r\\n            //if the interest state is not empty, \\r\\n            //we can assume that the root node is \\\"interests\\\"\\r\\n            //@this.state.interests[0] = \\\"Interests\\\"\\r\\n            //we can also assume that there is at least one second level\\r\\n\\r\\n            \\r\\n            //we then need to check if same second level node(if already exists), so no duplicates\\r\\n            //so have to iterate through second level nodes in state hierarchy\\r\\n            const found1 = false; \\r\\n            const searchedAllChildren1 = false; \\r\\n            const i1 = 1; \\r\\n            while(!found1 && searchedAllChildren1){\\r\\n                if(dataFromChild[1][0] === this.state.interests[0][i1][0]){\\r\\n                    found1 = true; \\r\\n                }\\r\\n                if((i1 != (this.state.interests[0].length-1))&&(!found1)){\\r\\n                    i1 = i1 + 1; \\r\\n                }else{\\r\\n                    searchedAllChildren1 = true; \\r\\n                }\\r\\n\\r\\n            }\\r\\n            //same second level\\r\\n            if(found1){\\r\\n                //if they are the same, we need to check 3rd level node and so on\\r\\n                //this method may need to be recursive eventually based on how big the tree gets\\r\\n                //but for I may just hard code several layers in\\r\\n\\r\\n                //check 3rd layer same\\r\\n                const found2 = false; \\r\\n                const searchedAllChildren2 = false; \\r\\n                const i2 = 1; \\r\\n                while(!found2 && searchedAllChildren2){\\r\\n                    if(dataFromChild[1][1][0] === this.state.interests[0][i1][i2]){\\r\\n                        found2 = true; \\r\\n                    }\\r\\n                    if((i2 != (this.state.interests[0][i1].length-1))&&(!found2)){\\r\\n                        i2 = i2 + 1; \\r\\n                    }else{\\r\\n                        searchedAllChildren2 = true; \\r\\n                    }\\r\\n    \\r\\n                }\\r\\n                if(found2){\\r\\n\\r\\n                }else{\\r\\n                    this.state.interests[0][i1].push(dataFromChild[1][1]);\\r\\n                }\\r\\n            \\r\\n\\r\\n                \\r\\n            }else{//not same second level\\r\\n                this.state.interests[0].push(dataFromChild[1]);\\r\\n            }\\r\\n        }\\r\\n        */\\r\\n        const mergeTrees = (parentTree, childTree) => {\\r\\n            let found = false; \\r\\n            let searchedAllChildren = false; \\r\\n            let i = 1; \\r\\n            let atTheEnd = false; \\r\\n            console.log(childTree, parentTree);\\r\\n            if(childTree[1] === undefined || parentTree[i] === undefined){\\r\\n                atTheEnd = true; \\r\\n                console.log(\\\"true\\\");\\r\\n            }\\r\\n            while(!found && !searchedAllChildren && !atTheEnd){\\r\\n                console.log(\\\"childtree\\\", childTree[1][0], \\\"parenttree\\\", parentTree[i][0])\\r\\n                console.log(\\\"makes it here?\\\")\\r\\n                if(childTree[1][0] === parentTree[i][0]){\\r\\n                    found = true; \\r\\n                }\\r\\n                if((parentTree.length != 1)&&(i != (parentTree.length-1))&&(!found)){\\r\\n                    i = i + 1; \\r\\n                }else{\\r\\n                    searchedAllChildren = true; \\r\\n                }\\r\\n\\r\\n            }\\r\\n            console.log(\\\"makes it here2?\\\")\\r\\n            if(found){\\r\\n                console.log(\\\"i\\\",i);\\r\\n                mergeTrees(parentTree[i],childTree[1]);\\r\\n            }else{\\r\\n                \\r\\n                    parentTree.push(childTree[1]);\\r\\n                \\r\\n                \\r\\n            }\\r\\n        }\\r\\n        console.log(\\\"child being sent: \\\", dataFromChild)\\r\\n        if(this.state.interests[0] === undefined){\\r\\n            this.state.interests.push(dataFromChild);\\r\\n        }else{\\r\\n            mergeTrees(this.state.interests[0],dataFromChild)\\r\\n            console.log(this.state.interests, \\\"after mergeTree\\\");\\r\\n        }\\r\\n        \\r\\n    }\\r\\n\\r\\n    getUpdateFromChild = () => {\\r\\n        this.props.test();\\r\\n    }\\r\\n\\r\\n    onChange(e) {\\r\\n        \\r\\n            this.setState({[e.target.name]: e.target.value});\\r\\n        \\r\\n    }\\r\\n\\r\\n    onSelectChange(e) {\\r\\n        this.setState({status: e.target.value});\\r\\n        //console.log(this.status);\\r\\n        //console.log(\\\"derp\\\");\\r\\n    }\\r\\n\\r\\n    render() {\\r\\n        const {errors} = this.state; \\r\\n        \\r\\n        const {tree} = this.props; \\r\\n        //console.log(tree);\\r\\n        //console.log(\\\"here2\\\");\\r\\n        //select options for status\\r\\n        const options = [\\r\\n            \\r\\n            {\\r\\n                label: 'male',\\r\\n                value: \\\"male\\\"\\r\\n            },\\r\\n            \\r\\n            {label: 'female', value: \\\"female\\\"}\\r\\n        ];\\r\\n\\r\\n       \\r\\n\\r\\n        return (\\r\\n            <div className = \\\"add-person\\\">\\r\\n                <div className = \\\"container\\\">\\r\\n                    <div className = \\\"row\\\">\\r\\n                        <div className = \\\"col-md-8 m-auto\\\">\\r\\n                            <h1 className = \\\"display-4 text-center\\\">Add Person</h1>\\r\\n                            <p className = \\\"lead text-center\\\">\\r\\n                                enter info\\r\\n                            </p>\\r\\n                            <small className = \\\"d-block pb-3\\\">* = required fields</small>\\r\\n\\r\\n                            <form  onSubmit = {this.onSubmit}>\\r\\n                               \\r\\n                                <TextFieldGroup \\r\\n                                    placeholder = \\\"name\\\"\\r\\n                                    name = \\\"name\\\"\\r\\n                                    value = {this.state.name}\\r\\n                                    onChange = {this.onChange}\\r\\n                                    error = {errors.name}\\r\\n                                    info = \\\"name\\\"\\r\\n                                    autoComplete = \\\"off\\\"\\r\\n                                    \\r\\n                                />\\r\\n                                <SelectListGroup \\r\\n                                    placeholder = \\\"sex\\\"\\r\\n                                    name = \\\"sex\\\"\\r\\n                                    value = {this.state.sex}\\r\\n                                    onChange = {this.onChange}\\r\\n                                    options = {options}\\r\\n                                    error = {errors.sex}\\r\\n                                    info = \\\"sex\\\"\\r\\n                                    className = \\\"selector\\\"\\r\\n                                />\\r\\n                                <TextFieldGroup \\r\\n                                    placeholder = \\\"age\\\"\\r\\n                                    name = \\\"age\\\"\\r\\n                                    value = {this.state.age}\\r\\n                                    onChange = {this.onChange}\\r\\n                                    error = {errors.age}\\r\\n                                    info = \\\"age\\\"\\r\\n                                />\\r\\n                                <TextFieldGroup \\r\\n                                    placeholder = \\\"city\\\"\\r\\n                                    name = \\\"city\\\"\\r\\n                                    value = {this.state.city}\\r\\n                                    onChange = {this.onChange}\\r\\n                                    error = {errors.city}\\r\\n                                    info = \\\"city\\\"\\r\\n                                />\\r\\n                                <TextFieldGroup \\r\\n                                    placeholder = \\\"state\\\"\\r\\n                                    name = \\\"state\\\"\\r\\n                                    value = {this.state.state}\\r\\n                                    onChange = {this.onChange}\\r\\n                                    error = {errors.state}\\r\\n                                    info = \\\"state\\\"\\r\\n                                />\\r\\n                                \\r\\n                                \\r\\n                                \\r\\n                                \\r\\n                                {/* <TextAreaFieldGroup \\r\\n                                    placeholder = \\\"bio\\\"\\r\\n                                    name = \\\"bio\\\"\\r\\n                                    value = {this.state.bio}\\r\\n                                    onChange = {this.onChange}\\r\\n                                    error = {errors.bio}\\r\\n                                    info = \\\"bio\\\"\\r\\n                                /> */}\\r\\n\\r\\n                               \\r\\n                                <input type = \\\"submit\\\" value= \\\"Submit\\\" className = \\\"btn btn-info btn-block mt-4\\\"/>\\r\\n                            </form>   \\r\\n                        \\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <br />\\r\\n                <div className = \\\"interests\\\">\\r\\n                    <div className = \\\"row\\\">\\r\\n                        <div className = \\\"col\\\">\\r\\n                             <br />\\r\\n                            \\r\\n                            <h1 className = \\\"display-4 text-center\\\">Interests</h1>\\r\\n                            \\r\\n                            <Interests updateParent = {this.getUpdateFromChild} sendDataToParent = {this.getDataFromChild} tree2 = {tree.tree} />\\r\\n                             \\r\\n                            <div className = \\\"container\\\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                \\r\\n            </div>\\r\\n        )\\r\\n    }\\r\\n}\\r\\n\\r\\nAddPerson.propTypes = {\\r\\n    profile: PropTypes.object.isRequired,\\r\\n    errors: PropTypes.object.isRequired,\\r\\n    test: PropTypes.func.isRequired,\\r\\n    tree: PropTypes.object.isRequired,\\r\\n    interests: PropTypes.object\\r\\n}\\r\\n\\r\\nconst mapStateToProps = state => ({\\r\\n    profile: state.profile,\\r\\n    errors: state.errors,\\r\\n    tree: state.tree,\\r\\n    interests: state.interests\\r\\n});\\r\\n\\r\\nexport default connect(mapStateToProps, {createProfile, addNode, test, getInterests})(withRouter(AddPerson));\",\"import React, { Component } from 'react'\\r\\nimport {connect} from \\\"react-redux\\\";\\r\\nimport PropTypes from 'prop-types';\\r\\n\\r\\nclass ProfileQueries extends Component {\\r\\n    \\r\\n    constructor(props) {\\r\\n        super(props);\\r\\n        this.state = {\\r\\n           \\r\\n           currentProfile: \\\"\\\"\\r\\n        \\r\\n        }\\r\\n        \\r\\n        \\r\\n    }\\r\\n\\r\\n   \\r\\n\\r\\n    render() {\\r\\n\\r\\n        const {displayChildren} = this.state;\\r\\n        let display; \\r\\n\\r\\n        if(displayChildren){\\r\\n            let profileItems = this.props.current1.results.map(profile => (\\r\\n                                \\r\\n                <div className = \\\"btn  btn-info mt-2 \\\" >\\r\\n                   \\r\\n                        \\r\\n                \\r\\n                    \\r\\n                    {profile}\\r\\n                    \\r\\n                </div>\\r\\n                \\r\\n            ))\\r\\n            display = (\\r\\n                <div>\\r\\n                    {profileItems}\\r\\n                </div>\\r\\n            )\\r\\n        }\\r\\n        //console.log(this.props.profile.profile.people[0].queries);\\r\\n        return (\\r\\n            <div>\\r\\n                <div className = \\\"btn btn-info\\\" onClick ={() => {\\r\\n                    this.setState(prevState => ({\\r\\n                    displayChildren: !prevState.displayChildren\\r\\n                    }))}}> {this.props.current1.name}</div>\\r\\n                    <div className = \\\"  mb-2 ml-3\\\">\\r\\n                    {display}</div>\\r\\n            </div>\\r\\n        )\\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\nProfileQueries.propTypes = {\\r\\n    \\r\\n    profile: PropTypes.object.isRequired,\\r\\n    auth: PropTypes.object\\r\\n}\\r\\n\\r\\nconst mapStateToProps = state => ({\\r\\n    profile: state.profile,\\r\\n    auth: state.auth\\r\\n})\\r\\n\\r\\nexport default connect(mapStateToProps)(ProfileQueries);\",\"import React, { Component } from 'react'\\r\\nimport {connect} from 'react-redux';\\r\\nimport {withRouter} from \\\"react-router-dom\\\";\\r\\nimport PropTypes from 'prop-types';\\r\\nimport \\\"../add-person/AddPersonStyles.css\\\";\\r\\nimport \\\"./ItemStyles.css\\\";\\r\\nimport TextFieldGroup from \\\"../common/TextFieldGroup\\\";\\r\\nimport {addNode,getNodes} from \\\"../../actions/nodeActions\\\";\\r\\nimport {getTree,test} from \\\"../../actions/treeactions\\\";\\r\\nimport {addInterest, getInterests, getProfiles} from \\\"../../actions/profileActions\\\";\\r\\nimport {Link} from 'react-router-dom';\\r\\nimport ProfileQueries from \\\"./ProfileQueries\\\";\\r\\n\\r\\nclass ProfileInterests extends Component {\\r\\n\\r\\n    \\r\\n    constructor(props) {\\r\\n        super(props);\\r\\n        this.state = {\\r\\n           \\r\\n           name: \\\"\\\",\\r\\n           parentName: \\\"\\\"\\r\\n        \\r\\n        }\\r\\n        this.onChange = this.onChange.bind(this);\\r\\n        this.onSubmit = this.onSubmit.bind(this);\\r\\n        //this.props.test();\\r\\n        \\r\\n    }\\r\\n        \\r\\n    componentDidMount(){\\r\\n        this.props.getProfiles();\\r\\n    }\\r\\n       \\r\\n    onSubmit(e){\\r\\n        e.preventDefault();\\r\\n\\r\\n        const data = {\\r\\n            name: this.state.name   \\r\\n        }\\r\\n        \\r\\n            \\r\\n        //console.log(data.name, this.state.parentName );\\r\\n        \\r\\n        this.props.addNode(data.name, this.state.parentName);\\r\\n    }\\r\\n\\r\\n    \\r\\n\\r\\n    onChange(e) {\\r\\n        \\r\\n            this.setState({[e.target.name]: e.target.value});\\r\\n        \\r\\n    }\\r\\n\\r\\n    \\r\\n    getDataFromChild = (dataFromChild) => {\\r\\n        console.log(dataFromChild);\\r\\n        let passUp = [this.props.tree2.name, dataFromChild]\\r\\n        this.props.sendDataToParent(passUp);\\r\\n        this.refs.foob.style = 'background-color: red';\\r\\n        \\r\\n        \\r\\n    }\\r\\n   \\r\\n\\r\\n    render() {\\r\\n        const { displayChildren} = this.state; \\r\\n        \\r\\n        let children; \\r\\n        let children2;\\r\\n        let listItems;\\r\\n        \\r\\n        if(!(this.props.tree2 === \\\"\\\" || undefined)){\\r\\n            //console.log(this.props.tree2.children);\\r\\n            console.log(this.props.tree2, \\\"tree2\\\");\\r\\n            let len = this.props.tree2.length;\\r\\n            let newSlice;\\r\\n            console.log(\\\"len\\\",len);\\r\\n            if(len>1){\\r\\n                newSlice = this.props.tree2.slice(1,(len));\\r\\n                console.log(\\\"newslice\\\", newSlice);\\r\\n                listItems = newSlice.map((node) =>\\r\\n                    <div key = {node.name}>\\r\\n                        <ProfileInterestPort sendDataToParent = {this.getDataFromChild} key = {node[0]} tree2 = {node} />\\r\\n                    </div>\\r\\n                );\\r\\n            }\\r\\n            \\r\\n            \\r\\n            //console.log(listItems);\\r\\n        }\\r\\n        if(displayChildren){\\r\\n            children = (\\r\\n                <div >\\r\\n                {listItems}\\r\\n                \\r\\n                \\r\\n                </div>\\r\\n            )\\r\\n        }else{\\r\\n            children = (\\r\\n                \\r\\n                    <div></div>     \\r\\n                    \\r\\n                 \\r\\n            )\\r\\n        }\\r\\n        let buttonName = \\\"test\\\";\\r\\n         if(!(this.props.tree2 === \\\"\\\")){\\r\\n            //console.log(this.props.tree2.name);\\r\\n            buttonName = this.props.tree2[0];\\r\\n            this.state.parentName = buttonName; \\r\\n        }   \\r\\n        let butt; \\r\\n\\r\\n\\r\\n        \\r\\n\\r\\n        \\r\\n        switch (buttonName) {\\r\\n        case \\\"Add\\\":\\r\\n            butt = (\\r\\n                <Link to=\\\"/add-person\\\" className=\\\"btn  btn-info  ml-2\\\">Add</Link>\\r\\n            )\\r\\n            break;\\r\\n        case \\\"All\\\":\\r\\n            butt = (\\r\\n                <div  className=\\\"btn  btn-info  ml-2\\\" onClick ={() => {\\r\\n                    this.setState(prevState => ({\\r\\n                        displayChildren: !prevState.displayChildren\\r\\n                    }))\\r\\n                    \\r\\n                    \\r\\n                }}>All</div>\\r\\n            )\\r\\n            if(displayChildren){\\r\\n                children = (\\r\\n                    this.props.profile.profile.people.map((node) =>\\r\\n                        <div className=\\\"btn  btn-info mt-2 ml-2\\\" key = {node.name}>\\r\\n                            {node.name}\\r\\n                        </div>\\r\\n                    )\\r\\n                )\\r\\n            }\\r\\n            \\r\\n            break; \\r\\n        case \\\"Queries\\\":\\r\\n            butt = (\\r\\n                <button type = \\\"button\\\" id = \\\"foo\\\" ref = \\\"foob\\\" className = \\\"btn btn-info  ml-2 \\\" onClick ={() => {\\r\\n                        this.setState(prevState => ({\\r\\n                            displayChildren: !prevState.displayChildren\\r\\n                        }))\\r\\n                        \\r\\n                        \\r\\n                    }}>\\r\\n                Queries\\r\\n                \\r\\n                </button> \\r\\n            )\\r\\n            if(displayChildren){\\r\\n                children2 = (\\r\\n                    this.props.profile.profile.people[this.props.auth.id].queries.map((q) =>\\r\\n                        <ProfileQueries current1 = {q}/>\\r\\n                    )\\r\\n                        \\r\\n                )\\r\\n                children = (\\r\\n\\r\\n                    <div className = \\\"ml-3\\\">\\r\\n                        <Link to= \\\"/search-person\\\" className = \\\"btn btn-info mb-2\\\">New Query</Link>\\r\\n                        {children2}\\r\\n                    </div>\\r\\n                    \\r\\n                )\\r\\n            }\\r\\n        \\r\\n        \\r\\n            break;\\r\\n        case \\\"New Query\\\":\\r\\n            butt = (\\r\\n\\r\\n                <Link to= \\\"/search-person\\\" className = \\\"btn btn-info\\\">New Query</Link>\\r\\n            )\\r\\n            \\r\\n            break;\\r\\n        default:\\r\\n            butt = (\\r\\n                <button type = \\\"button\\\" id = \\\"foo\\\" ref = \\\"foob\\\" className = \\\"btn btn-info  ml-2 \\\" onClick ={() => {\\r\\n                        this.setState(prevState => ({\\r\\n                            displayChildren: !prevState.displayChildren\\r\\n                        }))\\r\\n                        if(buttonName === \\\"Add\\\"){\\r\\n                            console.log(\\\"equals\\\");\\r\\n                            \\r\\n                        }\\r\\n                        \\r\\n                    }}>\\r\\n                {buttonName}\\r\\n                \\r\\n            </button> \\r\\n            )\\r\\n        }\\r\\n        \\r\\n        //console.log(\\\"hello\\\")\\r\\n        return (\\r\\n            <div>\\r\\n                <div className = \\\"d-flex  flex-row ml-2 bd-highlight mb-2\\\">\\r\\n                                    \\r\\n                    {butt}\\r\\n                    {/* <button className = \\\"btn .text-secondary btn-info butt2\\\" onClick ={() => {\\r\\n                            this.refs.foob.style = 'background-color: red';\\r\\n                            this.props.addInterest(buttonName);\\r\\n                            this.props.sendDataToParent([buttonName]);\\r\\n                        }}>\\r\\n                        >\\r\\n                    </button> */}\\r\\n                </div>\\r\\n                <div className = \\\"col nodeStack\\\">\\r\\n                    {children}\\r\\n                    \\r\\n                </div>\\r\\n\\r\\n                \\r\\n            </div>\\r\\n        )\\r\\n    }\\r\\n}\\r\\n\\r\\nProfileInterests.propTypes = {\\r\\n    //getNodes: PropTypes.func.isRequired,\\r\\n    //node: PropTypes.object.isRequired\\r\\n    //getTree: PropTypes.func.isRequired,\\r\\n    //tree: PropTypes.object.isRequired,\\r\\n    //test: PropTypes.func.isRequired \\r\\n    //addNode: PropTypes.func\\r\\n    //errors: PropTypes.object.isRequired\\r\\n    interests: PropTypes.object,\\r\\n    getProfiles: PropTypes.func.isRequired,\\r\\n    profile: PropTypes.object,\\r\\n    auth: PropTypes.object\\r\\n}\\r\\n\\r\\nconst mapStateToProps = state => ({\\r\\n    //node: state.node\\r\\n    //tree: state.tree\\r\\n    //errors: state.errors\\r\\n    interests: state.interests,\\r\\n    profile: state.profile,\\r\\n    auth: state.auth\\r\\n})\\r\\n\\r\\nconst ProfileInterestPort = connect(mapStateToProps, {addNode, getNodes, getTree, test, addInterest, getInterests,getProfiles})(withRouter(ProfileInterests));\\r\\nexport default ProfileInterestPort;\",\"import React, { Component } from 'react'\\r\\nimport {connect} from 'react-redux';\\r\\nimport {withRouter} from \\\"react-router-dom\\\";\\r\\nimport PropTypes from 'prop-types';\\r\\nimport TextFieldGroup from \\\"../common/TextFieldGroup\\\";\\r\\nimport TextAreaFieldGroup from \\\"../common/TextAreaFieldGroup\\\";\\r\\nimport SelectListGroup from \\\"../common/SelectListGroup\\\";\\r\\nimport {createProfile, getInterests, updateProfile} from \\\"../../actions/profileActions\\\";\\r\\nimport Interests from \\\"../add-person/Interests\\\";\\r\\nimport{getTree,test} from \\\"../../actions/treeactions\\\";\\r\\nimport {addNode} from \\\"../../actions/nodeActions\\\";\\r\\nimport \\\"./EditPersonStyles.css\\\";\\r\\n\\r\\n\\r\\n\\r\\nclass EditPerson extends Component {\\r\\n\\r\\n    constructor(props) {\\r\\n        super(props);\\r\\n        this.state = {\\r\\n           \\r\\n            name: \\\"\\\",\\r\\n            sex: \\\"\\\",\\r\\n            age: \\\"\\\",\\r\\n            \\r\\n            city: \\\"\\\",\\r\\n            state: \\\"\\\",\\r\\n            interests: [],\\r\\n            bio: \\\"\\\",\\r\\n            errors: {},\\r\\n            derr: \\\"\\\"\\r\\n        }\\r\\n        \\r\\n        //this.props.addNode(\\\"Books\\\", \\\"Conceptual\\\");\\r\\n        this.onChange = this.onChange.bind(this);\\r\\n        this.onSubmit = this.onSubmit.bind(this);\\r\\n        this.onSelectChange = this.onSelectChange.bind(this);\\r\\n    }\\r\\n    \\r\\n    componentDidMount(){\\r\\n        this.props.test();\\r\\n    }\\r\\n\\r\\n    componentWillReceiveProps(nextProps){\\r\\n        this.setState({derr: this.derr});\\r\\n        if(nextProps.errors){\\r\\n            this.setState({errors: nextProps.errors});\\r\\n        }\\r\\n    }\\r\\n    onSubmit(e){\\r\\n        e.preventDefault();\\r\\n\\r\\n        \\r\\n        //console.log(this.props.interests, \\\"interests here\\\");\\r\\n        const profileData = {\\r\\n            name: this.props.currName,\\r\\n            sex: this.state.sex,\\r\\n            age: this.state.age,\\r\\n            city: this.state.city,\\r\\n            state: this.state.state, \\r\\n           \\r\\n            interests: this.state.interests,\\r\\n            bio: this.state.bio\\r\\n        }\\r\\n        //profileData.name = this.props.current.name;\\r\\n        //console.log(profileData.name);\\r\\n        //console.log(\\\"what about here\\\");\\r\\n        this.props.updateProfile(profileData);\\r\\n        this.props.history.push(\\\"/profile/\\\" + this.props.profile.id);\\r\\n    }\\r\\n\\r\\n    getDataFromChild = (dataFromChild) => {\\r\\n        const mergeTrees = (parentTree, childTree) => {\\r\\n            let found = false; \\r\\n            let searchedAllChildren = false; \\r\\n            let i = 1; \\r\\n            let atTheEnd = false; \\r\\n            console.log(childTree, parentTree);\\r\\n            if(childTree[1] === undefined || parentTree[i] === undefined){\\r\\n                atTheEnd = true; \\r\\n                console.log(\\\"true\\\");\\r\\n            }\\r\\n            while(!found && !searchedAllChildren && !atTheEnd){\\r\\n                console.log(\\\"childtree\\\", childTree[1][0], \\\"parenttree\\\", parentTree[i][0])\\r\\n                console.log(\\\"makes it here?\\\")\\r\\n                if(childTree[1][0] === parentTree[i][0]){\\r\\n                    found = true; \\r\\n                }\\r\\n                if((parentTree.length != 1)&&(i != (parentTree.length-1))&&(!found)){\\r\\n                    i = i + 1; \\r\\n                }else{\\r\\n                    searchedAllChildren = true; \\r\\n                }\\r\\n\\r\\n            }\\r\\n            console.log(\\\"makes it here2?\\\")\\r\\n            if(found){\\r\\n                console.log(\\\"i\\\",i);\\r\\n                mergeTrees(parentTree[i],childTree[1]);\\r\\n            }else{\\r\\n                \\r\\n                    parentTree.push(childTree[1]);\\r\\n                \\r\\n                \\r\\n            }\\r\\n        }\\r\\n        console.log(\\\"child being sent: \\\", dataFromChild)\\r\\n        if(this.state.interests[0] === undefined){\\r\\n            this.state.interests.push(dataFromChild);\\r\\n        }else{\\r\\n            mergeTrees(this.state.interests[0],dataFromChild)\\r\\n            console.log(this.state.interests, \\\"after mergeTree\\\");\\r\\n        }\\r\\n        \\r\\n    }\\r\\n\\r\\n    getUpdateFromChild = () => {\\r\\n        this.props.test();\\r\\n    }\\r\\n\\r\\n    onChange(e) {\\r\\n        \\r\\n            this.setState({[e.target.name]: e.target.value});\\r\\n        \\r\\n    }\\r\\n\\r\\n    onSelectChange(e) {\\r\\n        this.setState({status: e.target.value});\\r\\n        //console.log(this.status);\\r\\n        //console.log(\\\"derp\\\");\\r\\n    }\\r\\n\\r\\n    render() {\\r\\n        const {errors} = this.state; \\r\\n        \\r\\n        const {tree} = this.props; \\r\\n        //console.log(tree);\\r\\n        //console.log(\\\"here2\\\");\\r\\n        //select options for status\\r\\n        const options = [\\r\\n            \\r\\n            {\\r\\n                label: 'male',\\r\\n                value: \\\"male\\\"\\r\\n            },\\r\\n            \\r\\n            {label: 'female', value: \\\"female\\\"}\\r\\n        ];\\r\\n\\r\\n       \\r\\n\\r\\n        return (\\r\\n            <div className = \\\"add-person\\\">\\r\\n                <div className = \\\"container\\\">\\r\\n                    <div className = \\\"row\\\">\\r\\n                        <div className = \\\"col-md-8 m-auto\\\">\\r\\n                            <h1 className = \\\"display-4 text-center\\\">Edit Person</h1>\\r\\n                            <p className = \\\"lead text-center\\\">\\r\\n                                enter info\\r\\n                            </p>\\r\\n                            <small className = \\\"d-block pb-3\\\">* = required fields</small>\\r\\n\\r\\n                            <form  onSubmit = {this.onSubmit}>\\r\\n                               \\r\\n                                <TextFieldGroup \\r\\n                                    placeholder = \\\"name\\\"\\r\\n                                    name = \\\"name\\\"\\r\\n                                    value = {this.state.name}\\r\\n                                    onChange = {this.onChange}\\r\\n                                    error = {errors.name}\\r\\n                                    info = \\\"name\\\"\\r\\n                                    autoComplete = \\\"off\\\"\\r\\n                                    \\r\\n                                />\\r\\n                                <SelectListGroup \\r\\n                                    placeholder = \\\"sex\\\"\\r\\n                                    name = \\\"sex\\\"\\r\\n                                    value = {this.state.sex}\\r\\n                                    onChange = {this.onChange}\\r\\n                                    options = {options}\\r\\n                                    error = {errors.sex}\\r\\n                                    info = \\\"sex\\\"\\r\\n                                />\\r\\n                                <TextFieldGroup \\r\\n                                    placeholder = \\\"age\\\"\\r\\n                                    name = \\\"age\\\"\\r\\n                                    value = {this.state.age}\\r\\n                                    onChange = {this.onChange}\\r\\n                                    error = {errors.age}\\r\\n                                    info = \\\"age\\\"\\r\\n                                />\\r\\n                                <TextFieldGroup \\r\\n                                    placeholder = \\\"city\\\"\\r\\n                                    name = \\\"city\\\"\\r\\n                                    value = {this.state.city}\\r\\n                                    onChange = {this.onChange}\\r\\n                                    error = {errors.city}\\r\\n                                    info = \\\"city\\\"\\r\\n                                />\\r\\n                                <TextFieldGroup \\r\\n                                    placeholder = \\\"state\\\"\\r\\n                                    name = \\\"state\\\"\\r\\n                                    value = {this.state.state}\\r\\n                                    onChange = {this.onChange}\\r\\n                                    error = {errors.state}\\r\\n                                    info = \\\"state\\\"\\r\\n                                />\\r\\n                                \\r\\n                                \\r\\n                                \\r\\n                                \\r\\n                                {/* <TextAreaFieldGroup \\r\\n                                    placeholder = \\\"bio\\\"\\r\\n                                    name = \\\"bio\\\"\\r\\n                                    value = {this.state.bio}\\r\\n                                    onChange = {this.onChange}\\r\\n                                    error = {errors.bio}\\r\\n                                    info = \\\"bio\\\"\\r\\n                                /> */}\\r\\n\\r\\n                               \\r\\n                                <input type = \\\"submit\\\" value= \\\"Submit\\\" className = \\\"btn btn-info btn-block mt-4\\\"/>\\r\\n                            </form>   \\r\\n                        \\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <br />\\r\\n                <div className = \\\"interests\\\">\\r\\n                    <div className = \\\"row\\\">\\r\\n                        <div className = \\\"col\\\">\\r\\n                             <br />\\r\\n                            \\r\\n                            <h1 className = \\\"display-4 text-center\\\">Interests</h1>\\r\\n                            \\r\\n                            <Interests updateParent = {this.getUpdateFromChild} sendDataToParent = {this.getDataFromChild} tree2 = {tree.tree} />\\r\\n                             \\r\\n                            <div className = \\\"container\\\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                \\r\\n            </div>\\r\\n        )\\r\\n    }\\r\\n}\\r\\n\\r\\nEditPerson.propTypes = {\\r\\n    profile: PropTypes.object.isRequired,\\r\\n    errors: PropTypes.object.isRequired,\\r\\n    test: PropTypes.func.isRequired,\\r\\n    tree: PropTypes.object.isRequired,\\r\\n    interests: PropTypes.object\\r\\n}\\r\\n\\r\\nconst mapStateToProps = state => ({\\r\\n    profile: state.profile,\\r\\n    errors: state.errors,\\r\\n    tree: state.tree,\\r\\n    interests: state.interests\\r\\n});\\r\\n\\r\\nexport default connect(mapStateToProps, {updateProfile, createProfile, addNode, test, getInterests})(withRouter(EditPerson));\",\"import React, { Component } from 'react'\\r\\n\\r\\nclass GroupItem extends Component {\\r\\n\\r\\n    constructor(props) {\\r\\n        super(props);\\r\\n        this.state = {\\r\\n           \\r\\n           \\r\\n        \\r\\n        }\\r\\n        \\r\\n        \\r\\n        \\r\\n    }\\r\\n\\r\\n    render() {\\r\\n        const {displayFriends} = this.state;\\r\\n\\r\\n        let groupItems; \\r\\n        let friends; \\r\\n        let button = (\\r\\n            <div className = \\\"btn personButton btn-info\\\" onClick ={() => {\\r\\n                this.setState(prevState => ({\\r\\n                    displayFriends: !prevState.displayFriends\\r\\n                    \\r\\n                }))\\r\\n                \\r\\n                \\r\\n                }}> \\r\\n                \\r\\n                {this.props.item.name}\\r\\n                \\r\\n            </div>\\r\\n        )\\r\\n        groupItems = this.props.item.friends.map(groupItem => (\\r\\n            <div>           \\r\\n                <div className = \\\"btn  ml-4 personButton btn-info\\\" onClick ={() => {\\r\\n                    \\r\\n                    \\r\\n                    \\r\\n                    }}> \\r\\n                    \\r\\n                    {groupItem.name}\\r\\n                    \\r\\n                </div>\\r\\n\\r\\n                \\r\\n            </div>   \\r\\n            /* <ProfileItem key = {profile._id} profile = {profile} /> */\\r\\n        ))\\r\\n        console.log(displayFriends);\\r\\n        if(displayFriends){\\r\\n            friends = groupItems;\\r\\n        }else{\\r\\n            friends = (<div></div>);\\r\\n        }\\r\\n            \\r\\n        \\r\\n        \\r\\n        return (\\r\\n            <div>\\r\\n                {button}\\r\\n                {friends}\\r\\n            </div>\\r\\n        )\\r\\n    }\\r\\n}\\r\\n\\r\\nexport default GroupItem;\",\"import React, { Component } from 'react'\\r\\nimport {connect} from 'react-redux';\\r\\nimport {withRouter} from \\\"react-router-dom\\\";\\r\\nimport PropTypes from 'prop-types';\\r\\nimport \\\"../add-person/AddPersonStyles.css\\\";\\r\\nimport \\\"./ItemStyles.css\\\";\\r\\nimport {addFriendGroup,getFriendGroups} from \\\"../../actions/profileActions\\\";\\r\\nimport GroupItem from \\\"./GroupItem\\\";\\r\\nclass Friends extends Component {\\r\\n\\r\\n    \\r\\n    constructor(props) {\\r\\n        super(props);\\r\\n        this.state = {\\r\\n           \\r\\n           friendGroupName: \\\"\\\",\\r\\n           userName: this.props.current\\r\\n        \\r\\n        }\\r\\n        this.onChange = this.onChange.bind(this);\\r\\n        this.onSubmit = this.onSubmit.bind(this);\\r\\n        //this.props.test();\\r\\n        const data = {\\r\\n            userName: this.state.userName\\r\\n        }\\r\\n        this.props.getFriendGroups(data);\\r\\n        \\r\\n    }\\r\\n    \\r\\n    componentDidMount(){\\r\\n        \\r\\n       \\r\\n        \\r\\n        \\r\\n    }\\r\\n    \\r\\n       \\r\\n    onSubmit(e){\\r\\n        e.preventDefault();\\r\\n\\r\\n        const data = {\\r\\n            friendGroupName: this.state.friendGroupName  ,\\r\\n            userName: this.props.current \\r\\n        }\\r\\n        \\r\\n            \\r\\n        //console.log(data.name, this.state.parentName );\\r\\n        \\r\\n        this.props.addFriendGroup(data);\\r\\n    }\\r\\n\\r\\n    \\r\\n\\r\\n    onChange(e) {\\r\\n        \\r\\n            this.setState({[e.target.name]: e.target.value});\\r\\n        \\r\\n    }\\r\\n\\r\\n    \\r\\n    \\r\\n   \\r\\n\\r\\n    render() {\\r\\n        const {groups} = this.props.profile;\\r\\n        const { displayGroups, displayFriends} = this.state; \\r\\n        //console.log(groups[0]);\\r\\n        let groups2; \\r\\n        let friends; \\r\\n        console.log(groups);\\r\\n        if(displayGroups && (groups !== \\\"\\\")){\\r\\n\\r\\n            let groupItems = groups.map(groupItem => (\\r\\n                <div>           \\r\\n                    \\r\\n                    \\r\\n                    <GroupItem item = {groupItem}  />\\r\\n                </div>   \\r\\n                /* <ProfileItem key = {profile._id} profile = {profile} /> */\\r\\n            ))\\r\\n            groups2 = (\\r\\n                <div>\\r\\n                    <div className = \\\"ml-4\\\">\\r\\n\\r\\n                        {groupItems}\\r\\n                    </div>\\r\\n                    \\r\\n                    <form  className =\\\"newChild mt-1 ml-4\\\" onSubmit = {this.onSubmit}>\\r\\n                        <div className = \\\"row derp\\\"> \\r\\n                            <input\\r\\n                    \\r\\n                                className = \\\"form-control squish2 form-control-lg\\\" \\r\\n                                placeholder=\\\"new group\\\"\\r\\n                                name=\\\"friendGroupName\\\"\\r\\n                                value = {this.state.friendGroupName}\\r\\n                                onChange = {this.onChange}\\r\\n                                autoComplete = \\\"off\\\"\\r\\n                            />             \\r\\n                                      \\r\\n                                \\r\\n                               \\r\\n                            <input type = \\\"submit\\\" value= \\\"+\\\" className = \\\"btn btn-info butt\\\"/>\\r\\n                        </div>\\r\\n                    </form> \\r\\n                </div>\\r\\n            )\\r\\n        }\\r\\n        return(\\r\\n            <div>\\r\\n                <div className = \\\"btn btn-info ml-2\\\" onClick ={() => {\\r\\n                    this.setState(prevState => ({\\r\\n                        displayGroups: !prevState.displayGroups\\r\\n                        \\r\\n                    }))}}>\\r\\n                    \\r\\n                    Friends\\r\\n                \\r\\n                </div>   \\r\\n                {groups2}                     \\r\\n            </div>\\r\\n        )\\r\\n        \\r\\n    }\\r\\n}\\r\\n\\r\\nFriends.propTypes = {\\r\\n    groups: PropTypes.object,\\r\\n    profile: PropTypes.object\\r\\n}\\r\\n\\r\\nconst mapStateToProps = state => ({\\r\\n    \\r\\n    interests: state.interests,\\r\\n    groups: state.groups,\\r\\n    profile: state.profile\\r\\n})\\r\\n\\r\\n\\r\\nexport default connect(mapStateToProps, {addFriendGroup, getFriendGroups})(withRouter(Friends));\",\"import React, { Component } from 'react'\\r\\nimport {connect} from 'react-redux';\\r\\nimport {withRouter} from \\\"react-router-dom\\\";\\r\\nimport PropTypes from 'prop-types';\\r\\nimport TextFieldGroup from \\\"../common/TextFieldGroup\\\";\\r\\nimport TextAreaFieldGroup from \\\"../common/TextAreaFieldGroup\\\";\\r\\nimport SelectListGroup from \\\"../common/SelectListGroup\\\";\\r\\nimport {createProfile, getInterests, searchPeople} from \\\"../../actions/profileActions\\\";\\r\\nimport Interests from \\\"../add-person/Interests\\\";\\r\\nimport{getTree,test} from \\\"../../actions/treeactions\\\";\\r\\nimport {addNode} from \\\"../../actions/nodeActions\\\";\\r\\nimport \\\"./SearchStyles.css\\\";\\r\\nimport {Link} from 'react-router-dom';\\r\\n\\r\\n\\r\\nclass SearchPeople extends Component {\\r\\n\\r\\n    constructor(props) {\\r\\n        super(props);\\r\\n        this.state = {\\r\\n            queryName: \\\"\\\",\\r\\n            name: \\\"\\\",\\r\\n            sex: \\\"\\\",\\r\\n            age: \\\"\\\",\\r\\n            \\r\\n            city: \\\"\\\",\\r\\n            state: \\\"\\\",\\r\\n            interests: [],\\r\\n            bio: \\\"\\\",\\r\\n            errors: {}\\r\\n            \\r\\n        }\\r\\n        this.props.test();\\r\\n        //this.props.addNode(\\\"Books\\\", \\\"Conceptual\\\");\\r\\n        this.onChange = this.onChange.bind(this);\\r\\n        this.onSubmit = this.onSubmit.bind(this);\\r\\n        this.onSelectChange = this.onSelectChange.bind(this);\\r\\n    }\\r\\n    \\r\\n    componentDidMount(){\\r\\n        \\r\\n    }\\r\\n\\r\\n    componentWillReceiveProps(nextProps){\\r\\n\\r\\n        if(nextProps.errors){\\r\\n            this.setState({errors: nextProps.errors});\\r\\n        }\\r\\n    }\\r\\n    onSubmit(e){\\r\\n        e.preventDefault();\\r\\n\\r\\n        \\r\\n        this.setState(prevState => ({\\r\\n            displayResults: !prevState.displayResults\\r\\n        }))\\r\\n        //console.log(this.props.interests, \\\"interests here\\\");\\r\\n        const profileData = {\\r\\n            queryName: this.state.queryName,\\r\\n            name: this.state.name,\\r\\n            sex: this.state.sex,\\r\\n            age: this.state.age,\\r\\n            city: this.state.city,\\r\\n            state: this.state.state, \\r\\n            currentUserId: this.props.auth.id,\\r\\n            interests: this.state.interests,\\r\\n            bio: this.state.bio\\r\\n        }\\r\\n        //console.log(\\\"what about here\\\");\\r\\n        this.props.searchPeople(profileData);\\r\\n    }\\r\\n\\r\\n    getDataFromChild = (dataFromChild) => {\\r\\n        const mergeTrees = (parentTree, childTree) => {\\r\\n            let found = false; \\r\\n            let searchedAllChildren = false; \\r\\n            let i = 1; \\r\\n            let atTheEnd = false; \\r\\n            console.log(childTree, parentTree);\\r\\n            if(childTree[1] === undefined || parentTree[i] === undefined){\\r\\n                atTheEnd = true; \\r\\n                console.log(\\\"true\\\");\\r\\n            }\\r\\n            while(!found && !searchedAllChildren && !atTheEnd){\\r\\n                console.log(\\\"childtree\\\", childTree[1][0], \\\"parenttree\\\", parentTree[i][0])\\r\\n                console.log(\\\"makes it here?\\\")\\r\\n                if(childTree[1][0] === parentTree[i][0]){\\r\\n                    found = true; \\r\\n                }\\r\\n                if((parentTree.length != 1)&&(i != (parentTree.length-1))&&(!found)){\\r\\n                    i = i + 1; \\r\\n                }else{\\r\\n                    searchedAllChildren = true; \\r\\n                }\\r\\n\\r\\n            }\\r\\n            console.log(\\\"makes it here2?\\\")\\r\\n            if(found){\\r\\n                console.log(\\\"i\\\",i);\\r\\n                mergeTrees(parentTree[i],childTree[1]);\\r\\n            }else{\\r\\n                \\r\\n                    parentTree.push(childTree[1]);\\r\\n                \\r\\n                \\r\\n            }\\r\\n        }\\r\\n        console.log(\\\"child being sent: \\\", dataFromChild)\\r\\n        if(this.state.interests[0] === undefined){\\r\\n            this.state.interests.push(dataFromChild);\\r\\n        }else{\\r\\n            mergeTrees(this.state.interests[0],dataFromChild)\\r\\n            //console.log(this.state.interests, \\\"after mergeTree\\\");\\r\\n        }\\r\\n        \\r\\n    }\\r\\n\\r\\n    onChange(e) {\\r\\n        \\r\\n            this.setState({[e.target.name]: e.target.value});\\r\\n        \\r\\n    }\\r\\n\\r\\n    onSelectChange(e) {\\r\\n        this.setState({status: e.target.value});\\r\\n        //console.log(this.status);\\r\\n        //console.log(\\\"derp\\\");\\r\\n    }\\r\\n\\r\\n    render() {\\r\\n        const {errors, displayResults} = this.state; \\r\\n        \\r\\n        const {tree} = this.props; \\r\\n        //console.log(tree);\\r\\n        //console.log(\\\"here2\\\");\\r\\n        //select options for status\\r\\n        const options = [\\r\\n            \\r\\n            {\\r\\n                label: 'male',\\r\\n                value: \\\"male\\\"\\r\\n            },\\r\\n            \\r\\n            {label: 'female', value: \\\"female\\\"}\\r\\n        ];\\r\\n        let display;\\r\\n        if(displayResults){\\r\\n            let results1 = this.props.profile.matches.map(match => (\\r\\n                             \\r\\n                <div className = \\\"btn personButton btn-info\\\" >\\r\\n                    \\r\\n                    {match}\\r\\n                    \\r\\n                </div>\\r\\n                /* <ProfileItem key = {profile._id} profile = {profile} /> */\\r\\n            ))\\r\\n            display = (\\r\\n                <div className = \\\"add-person\\\">\\r\\n                    <Link to = {\\\"profile/\\\" + this.props.auth.id} className = \\\"btn btn-info\\\">Back</Link>\\r\\n                            \\r\\n                    \\r\\n                    <div className = \\\"container\\\">\\r\\n                        <div className = \\\"row\\\">\\r\\n\\r\\n                            <div className = \\\"col-6\\\">\\r\\n                                {results1}\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            )\\r\\n        }else{\\r\\n            display = (\\r\\n                <div className = \\\"add-person\\\">\\r\\n                    <div className = \\\"container\\\">\\r\\n                        <div className = \\\"row\\\">\\r\\n                            <div className = \\\"col-md-8 m-auto\\\">\\r\\n                                <h1 className = \\\"display-5 text-center\\\">Search People</h1>\\r\\n                                <p className = \\\"lead text-center\\\">\\r\\n                                    enter info\\r\\n                                </p>\\r\\n                                <small className = \\\"d-block pb-3\\\">leave blank if irrelevant</small>\\r\\n\\r\\n                                <form  onSubmit = {this.onSubmit}>\\r\\n                                \\r\\n                                    <TextFieldGroup \\r\\n                                        placeholder = \\\"query name\\\"\\r\\n                                        name = \\\"queryName\\\"\\r\\n                                        value = {this.state.queryName}\\r\\n                                        onChange = {this.onChange}\\r\\n                                        error = {errors.name}\\r\\n                                        info = \\\"queryName\\\"\\r\\n                                        autoComplete = \\\"off\\\"\\r\\n                                        \\r\\n                                    />\\r\\n                                    <div className = \\\"mt-5\\\"></div>\\r\\n                                    <TextFieldGroup \\r\\n                                        placeholder = \\\"name\\\"\\r\\n                                        name = \\\"name\\\"\\r\\n                                        value = {this.state.name}\\r\\n                                        onChange = {this.onChange}\\r\\n                                        error = {errors.name}\\r\\n                                        info = \\\"name\\\"\\r\\n                                        autoComplete = \\\"off\\\"\\r\\n                                        \\r\\n                                    />\\r\\n                                    <SelectListGroup \\r\\n                                        placeholder = \\\"sex\\\"\\r\\n                                        name = \\\"sex\\\"\\r\\n                                        value = {this.state.sex}\\r\\n                                        onChange = {this.onChange}\\r\\n                                        options = {options}\\r\\n                                        error = {errors.sex}\\r\\n                                        info = \\\"sex\\\"\\r\\n                                    />\\r\\n                                    <TextFieldGroup \\r\\n                                        placeholder = \\\"age\\\"\\r\\n                                        name = \\\"age\\\"\\r\\n                                        value = {this.state.age}\\r\\n                                        onChange = {this.onChange}\\r\\n                                        error = {errors.age}\\r\\n                                        info = \\\"age\\\"\\r\\n                                    />\\r\\n                                    <TextFieldGroup \\r\\n                                        placeholder = \\\"city\\\"\\r\\n                                        name = \\\"city\\\"\\r\\n                                        value = {this.state.city}\\r\\n                                        onChange = {this.onChange}\\r\\n                                        error = {errors.city}\\r\\n                                        info = \\\"city\\\"\\r\\n                                    />\\r\\n                                    <TextFieldGroup \\r\\n                                        placeholder = \\\"state\\\"\\r\\n                                        name = \\\"state\\\"\\r\\n                                        value = {this.state.state}\\r\\n                                        onChange = {this.onChange}\\r\\n                                        error = {errors.state}\\r\\n                                        info = \\\"state\\\"\\r\\n                                    />\\r\\n                                    \\r\\n                                    \\r\\n                                    \\r\\n                                    \\r\\n                                    \\r\\n\\r\\n                                \\r\\n                                    <input type = \\\"submit\\\" value= \\\"Submit\\\" className = \\\"btn btn-info btn-block mt-4\\\"/>\\r\\n                                </form>   \\r\\n                            \\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <br />\\r\\n                    <div className = \\\"interests\\\">\\r\\n                        <div className = \\\"row\\\">\\r\\n                            <div className = \\\"col\\\">\\r\\n                                <br />\\r\\n                                \\r\\n                                <h1 className = \\\"display-5 text-center\\\">Interests</h1>\\r\\n                                \\r\\n                                <Interests sendDataToParent = {this.getDataFromChild} tree2 = {tree.tree} />\\r\\n                                \\r\\n                                <div className = \\\"container\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    \\r\\n                </div>\\r\\n            )\\r\\n        }\\r\\n        \\r\\n       \\r\\n\\r\\n        return (\\r\\n            <div>\\r\\n                \\r\\n                {display}\\r\\n            </div>\\r\\n            \\r\\n        )\\r\\n    }\\r\\n}\\r\\n\\r\\nSearchPeople.propTypes = {\\r\\n    profile: PropTypes.object.isRequired,\\r\\n    errors: PropTypes.object.isRequired,\\r\\n    test: PropTypes.func.isRequired,\\r\\n    tree: PropTypes.object.isRequired,\\r\\n    interests: PropTypes.object,\\r\\n    auth: PropTypes.object\\r\\n}\\r\\n\\r\\nconst mapStateToProps = state => ({\\r\\n    profile: state.profile,\\r\\n    errors: state.errors,\\r\\n    tree: state.tree,\\r\\n    interests: state.interests,\\r\\n    auth: state.auth\\r\\n});\\r\\n\\r\\nexport default connect(mapStateToProps, {createProfile, addNode, test, getInterests, searchPeople})(withRouter(SearchPeople));\",\"import React, { Component } from 'react'\\r\\nimport {connect} from \\\"react-redux\\\";\\r\\nimport PropTypes from 'prop-types';\\r\\nimport {getProfiles,getNetwork} from '../../actions/profileActions';\\r\\nimport ProfileItem from \\\"./ProfileItem\\\";\\r\\nimport AddPerson from \\\"../add-person/AddPerson\\\";\\r\\nimport ProfileInterests from \\\"./ProfileInterests\\\";\\r\\nimport EditPerson from \\\"../edit-person/EditPerson\\\";\\r\\nimport Friends from \\\"./Friends\\\";\\r\\nimport Queries from \\\"./Queries\\\";\\r\\nimport \\\"./ItemStyles.css\\\";\\r\\nclass Profiles extends Component {\\r\\n    \\r\\n    constructor(props) {\\r\\n        super(props);\\r\\n        this.state = {\\r\\n           \\r\\n           currentProfile: \\\"\\\"\\r\\n        \\r\\n        }\\r\\n        \\r\\n        \\r\\n    }\\r\\n    componentDidMount(){\\r\\n        this.props.getProfiles();\\r\\n        this.props.getNetwork();\\r\\n        \\r\\n    }\\r\\n  \\r\\n    render() {\\r\\n        const {profile, network, loading} = this.props.profile;\\r\\n        console.log(profile, \\\"profile\\\");\\r\\n        const {displayInfo,displayEdit, displayNetwork, displayMore, displayInterests } = this.state; \\r\\n        console.log(profile, \\\"new profiles\\\");\\r\\n        if(profile != null){\\r\\n            \\r\\n            this.state.currentProfile = profile.people[this.props.match.params.id];\\r\\n            \\r\\n        }\\r\\n        let box; \\r\\n        let info;\\r\\n        let profileItems;\\r\\n        let ints; \\r\\n        let more;\\r\\n        let network2; \\r\\n        let displayProfile = true; \\r\\n        if(displayMore){\\r\\n            more = (<div className = \\\" mt-2\\\">\\r\\n                <ProfileInterests tree2 = {this.state.currentProfile.interests[0]}/>\\r\\n            </div>)\\r\\n            \\r\\n        }\\r\\n        if(displayNetwork){\\r\\n            console.log(network, \\\"network\\\")\\r\\n            network2 = (\\r\\n                /* <div className = \\\"mt-2 ml-2\\\">\\r\\n                    <Friends current = {this.state.currentProfile.name}/>\\r\\n\\r\\n                    <Queries current = {this.state.currentProfile.name}/>\\r\\n                </div>  */\\r\\n                \\r\\n                <ProfileInterests tree2 = {network}/>           \\r\\n                                   \\r\\n            )\\r\\n               \\r\\n        }\\r\\n        \\r\\n        \\r\\n        \\r\\n            if(displayEdit){\\r\\n                box = (\\r\\n                    <div>\\r\\n                        <div className = \\\"btn btn-info w-25\\\" onClick ={() => {\\r\\n                            this.setState(prevState => ({\\r\\n                                displayEdit: !prevState.displayEdit\\r\\n                            }))}}>\\r\\n                            \\r\\n                            Back\\r\\n                            \\r\\n                        </div>\\r\\n                        <EditPerson current = {this.state.currentProfile}/>\\r\\n                    </div>\\r\\n                )\\r\\n            }else{\\r\\n\\r\\n            \\r\\n                if(displayInfo){\\r\\n                    info = (\\r\\n                        <div className = \\\"row\\\">\\r\\n                            <div className = \\\"col\\\">\\r\\n                                <h4> {this.state.currentProfile.sex}</h4>\\r\\n                                <h4> {this.state.currentProfile.age}</h4>\\r\\n                                <h4> {this.state.currentProfile.city}, {this.state.currentProfile.state}</h4>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    )\\r\\n                }\\r\\n                if (profile === null || loading) {\\r\\n                    profileItems = \\\"loading\\\";\\r\\n                }else{\\r\\n                    if(displayProfile){\\r\\n                        box = (\\r\\n                            <div>\\r\\n                                <h1 className = \\\" display-5 text-center\\\">{this.state.currentProfile.name}</h1>\\r\\n                                <div className = \\\"btn btn-info w-25\\\" onClick ={() => {\\r\\n                                    this.setState(prevState => ({\\r\\n                                        displayInfo: !prevState.displayInfo\\r\\n                                    }))}}>\\r\\n                                    \\r\\n                                    Basic Info\\r\\n                                    \\r\\n                                </div>\\r\\n                                <div className = \\\"btn btn-info ml-2\\\" onClick ={() => {\\r\\n                                    this.setState(prevState => ({\\r\\n                                        displayEdit: !prevState.displayEdit\\r\\n                                        \\r\\n                                    }))}}>\\r\\n                                    \\r\\n                                    Edit Profile\\r\\n                                    \\r\\n                                </div>\\r\\n                                \\r\\n                            \\r\\n\\r\\n                                {info}\\r\\n                                <div >\\r\\n                                \\r\\n                                    <div className = \\\"btn btn-info mt-2 w-25\\\" onClick ={() => {\\r\\n                                        this.setState(prevState => ({\\r\\n                                            displayMore: !prevState.displayMore\\r\\n                                            \\r\\n                                        }))}}>\\r\\n                                        \\r\\n                                        More\\r\\n                                        \\r\\n                                    </div>\\r\\n                                    {more}\\r\\n                                </div>\\r\\n                                {ints}<div className = \\\"mt-2 w-25\\\">\\r\\n                                    <ProfileInterests tree2 = {network}/>    \\r\\n                                </div>\\r\\n                                \\r\\n                            </div>\\r\\n                            \\r\\n                        )\\r\\n                    }else{\\r\\n\\r\\n                        let newProfile = profile.people;\\r\\n                        if(newProfile.length > 0){\\r\\n                            //console.log(profile[0]);\\r\\n                            profileItems = newProfile.map(profile => (\\r\\n                                \\r\\n                                <div className = \\\"btn personButton btn-info\\\" onClick ={() => {\\r\\n                                    this.setState(prevState => ({\\r\\n                                        displayProfile: !prevState.displayProfile\\r\\n                                        \\r\\n                                    }))\\r\\n                                    this.setState(prevState => ({\\r\\n                                        currentProfile: profile\\r\\n                                    \\r\\n                                    }))\\r\\n                                        \\r\\n                                    }}>\\r\\n                                    \\r\\n                                    {profile.name}\\r\\n                                    \\r\\n                                </div>\\r\\n                                /* <ProfileItem key = {profile._id} profile = {profile} /> */\\r\\n                            ))\\r\\n                            box = (\\r\\n                                <div>\\r\\n                                    <h1 className = \\\" display-4 text-center\\\">List People</h1>\\r\\n                                            \\r\\n                                                \\r\\n                                            \\r\\n\\r\\n                                    <div className = \\\"profiles\\\">\\r\\n                                        \\r\\n                                        <div className = \\\"container\\\">\\r\\n                                            <div className = \\\"row\\\">\\r\\n                                                <div className = \\\"col-md-4\\\">\\r\\n                                                    \\r\\n                                                    {profileItems}\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            )\\r\\n                        }else{\\r\\n                            profileItems = <h4>no profiles found...</h4>\\r\\n                        }\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n        \\r\\n        return (\\r\\n            <div >\\r\\n                \\r\\n\\r\\n                        <div className = \\\"listScroll\\\" >\\r\\n                            {box}\\r\\n                            \\r\\n\\r\\n                        </div>\\r\\n\\r\\n                    \\r\\n            </div>\\r\\n        )\\r\\n    }\\r\\n\\r\\n}\\r\\nProfiles.propTypes = {\\r\\n    getProfiles: PropTypes.func.isRequired,\\r\\n    profile: PropTypes.object.isRequired,\\r\\n    network: PropTypes.object\\r\\n}\\r\\n\\r\\nconst mapStateToProps = state => ({\\r\\n    profile: state.profile,\\r\\n    network: state.network\\r\\n})\\r\\nexport default connect(mapStateToProps, {getProfiles, getNetwork})(Profiles);\",\"import React, { Component } from 'react'\\r\\nimport SearchPeople from \\\"../search-people/SearchPeople\\\";\\r\\n\\r\\nclass Queries extends Component {\\r\\n\\r\\n    constructor(props) {\\r\\n        super(props);\\r\\n        this.state = {\\r\\n           \\r\\n           currentProfile: \\\"\\\"\\r\\n        \\r\\n        }\\r\\n        \\r\\n        \\r\\n    }\\r\\n    render() {\\r\\n        const {displayGroups, displaySearch} = this.state; \\r\\n        let display; \\r\\n        let display2; \\r\\n        if(displaySearch){\\r\\n            display2 = (\\r\\n                <SearchPeople />\\r\\n            )\\r\\n        \\r\\n        }else{\\r\\n            if(displayGroups){\\r\\n                display = (\\r\\n                    <div>\\r\\n                        <div className = \\\"btn btn-info mt-2 ml-4\\\" onClick ={() => {\\r\\n                            this.setState(prevState => ({\\r\\n                                displaySearch: !prevState.displaySearch\\r\\n                                \\r\\n                            }))}}>\\r\\n                            \\r\\n                            New Query\\r\\n                        \\r\\n                        </div>  \\r\\n                        \\r\\n                    </div>\\r\\n                )\\r\\n            }\\r\\n\\r\\n            if(!displaySearch){\\r\\n                display2 = (\\r\\n                    <div>\\r\\n    \\r\\n                    \\r\\n                        <div className = \\\"btn btn-info mt-2 ml-2\\\" onClick ={() => {\\r\\n                            this.setState(prevState => ({\\r\\n                                displayGroups: !prevState.displayGroups\\r\\n                                \\r\\n                            }))}}>\\r\\n                            \\r\\n                            Queries\\r\\n                        \\r\\n                        </div>   \\r\\n                        {display}\\r\\n                    </div>\\r\\n                )\\r\\n            }\\r\\n            \\r\\n        }\\r\\n        \\r\\n        return (\\r\\n            <div>\\r\\n                    \\r\\n                {display2}               \\r\\n                    \\r\\n            </div>\\r\\n        )\\r\\n    }\\r\\n}\\r\\n\\r\\nexport default Queries; \",\"import React, { Component } from 'react'\\r\\nimport TextFieldGroup from \\\"../common/TextFieldGroup\\\";\\r\\nimport {connect} from 'react-redux';\\r\\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\\r\\nimport Profiles from \\\"../profiles/Profiles\\\";\\r\\nimport {registerUser, newLoginUser} from \\\"../../actions/authActions\\\";\\r\\nimport {withRouter} from \\\"react-router-dom\\\";\\r\\nimport PropTypes from 'prop-types';\\r\\nclass Login extends Component {\\r\\n\\r\\n    constructor(props) {\\r\\n        super(props);\\r\\n        this.state = {\\r\\n           \\r\\n            email: \\\"\\\",\\r\\n            password: \\\"\\\",\\r\\n            password2: \\\"\\\"\\r\\n        }\\r\\n        \\r\\n        //this.props.addNode(\\\"Books\\\", \\\"Conceptual\\\");\\r\\n        this.onChange = this.onChange.bind(this);\\r\\n        this.onSubmit = this.onSubmit.bind(this);\\r\\n        \\r\\n    }\\r\\n    componentDidMount(){\\r\\n        \\r\\n    }\\r\\n    componentWillReceiveProps(){\\r\\n        \\r\\n    }\\r\\n    onSubmit(e){\\r\\n        e.preventDefault();\\r\\n\\r\\n        \\r\\n        //console.log(this.props.interests, \\\"interests here\\\");\\r\\n        const profileData = {\\r\\n            email: this.state.email,\\r\\n            password: this.state.password,\\r\\n            password2: this.state.password2\\r\\n        }\\r\\n        console.log(this.state.password2.length);\\r\\n        if(this.state.password2.length > 0){\\r\\n            this.props.registerUser(profileData);\\r\\n            this.props.history.push('/welcome');\\r\\n        }else{\\r\\n            this.props.newLoginUser(profileData);\\r\\n            \\r\\n            \\r\\n        }\\r\\n        \\r\\n        //this.props.createProfile(profileData, this.props.history);\\r\\n    }\\r\\n\\r\\n    onChange(e) {\\r\\n        \\r\\n        this.setState({[e.target.name]: e.target.value});\\r\\n    \\r\\n    }\\r\\n\\r\\n  render() {\\r\\n      const {displaySignUp, displayEmailErrors} = this.state;\\r\\n      let display; \\r\\n      let emailErrors;\\r\\n      let emailErrorMessage; \\r\\n      let emailInput; \\r\\n\\r\\n      if(displayEmailErrors){\\r\\n        emailErrors = (\\r\\n            <p className = \\\"mb-0 ml-4\\\"> email not found</p>\\r\\n        );\\r\\n        emailInput = (\\r\\n            <input \\r\\n                autoComplete = \\\"new-password\\\"\\r\\n                type =\\\"email\\\"\\r\\n                className=\\\"form-control form-control-lg mb-0 \\\" \\r\\n                placeholder=\\\"email\\\"\\r\\n                name=\\\"email\\\"\\r\\n                value = {this.state.email} \\r\\n                onChange = {this.onChange}\\r\\n                            \\r\\n\\r\\n\\r\\n            /> \\r\\n        )\\r\\n      }else{\\r\\n          emailInput =(\\r\\n            <input \\r\\n                autoComplete = \\\"new-password\\\"\\r\\n                type =\\\"email\\\"\\r\\n                className=\\\"form-control form-control-lg mb-3 \\\" \\r\\n                placeholder=\\\"email\\\"\\r\\n                name=\\\"email\\\"\\r\\n                value = {this.state.email} \\r\\n                onChange = {this.onChange}\\r\\n                        \\r\\n\\r\\n\\r\\n            /> \\r\\n          )\\r\\n      }\\r\\n      \\r\\n      console.log(this.props.auth.id);\\r\\n      if(this.props.auth.id != \\\"\\\"){\\r\\n        this.props.history.push('/profile/' + this.props.auth.id);\\r\\n      }\\r\\n      if(displaySignUp){\\r\\n          display = (\\r\\n            <div className = \\\" row align-self-center mt-5 \\\">\\r\\n\\r\\n                <div className = \\\"col-md-8  m-auto\\\">\\r\\n                    <form  onSubmit = {this.onSubmit}>\\r\\n                    \\r\\n                        <TextFieldGroup \\r\\n                            placeholder = \\\"email\\\"\\r\\n                            name = \\\"email\\\"\\r\\n                            value = {this.state.email}\\r\\n                            onChange = {this.onChange}\\r\\n                            \\r\\n                            info = \\\"email\\\"\\r\\n                            autoComplete = \\\"off\\\"\\r\\n                            \\r\\n                        />\\r\\n                        \\r\\n                        <input \\r\\n\\r\\n                            autoComplete = \\\"new-password\\\"\\r\\n                            type =\\\"password\\\"\\r\\n                            className=\\\"form-control form-control-lg\\\" \\r\\n                            placeholder=\\\"password\\\"\\r\\n                            name=\\\"password\\\"\\r\\n                            value = {this.state.password} \\r\\n                            onChange = {this.onChange}\\r\\n                        \\r\\n                            \\r\\n                        />  \\r\\n\\r\\n                        <input \\r\\n\\r\\n                            autoComplete = \\\"new-password\\\"\\r\\n                            type =\\\"password\\\"\\r\\n                            className=\\\"form-control form-control-lg mt-2\\\" \\r\\n                            placeholder=\\\"confirm password\\\"\\r\\n                            name=\\\"password2\\\"\\r\\n                            value = {this.state.password2} \\r\\n                            onChange = {this.onChange}\\r\\n\\r\\n\\r\\n                        />  \\r\\n                        \\r\\n                        \\r\\n                        \\r\\n                        \\r\\n\\r\\n                    \\r\\n                        <input type = \\\"submit\\\" value= \\\"Create account\\\" className = \\\"btn btn-info btn-block mt-4\\\"/>\\r\\n                    </form> \\r\\n                    \\r\\n                </div>\\r\\n            </div>  \\r\\n          )\\r\\n      }else{\\r\\n          display = (\\r\\n            <div className = \\\" row align-self-center mt-5 \\\">\\r\\n\\r\\n                <div className = \\\"col-md-8  m-auto\\\">\\r\\n                    <form  onSubmit = {this.onSubmit}>\\r\\n                    \\r\\n                        \\r\\n                        {emailInput} \\r\\n\\r\\n                        {emailErrors}\\r\\n\\r\\n                        <input \\r\\n\\r\\n                            autoComplete = \\\"new-password\\\"\\r\\n                            type =\\\"password\\\"\\r\\n                            className=\\\"form-control form-control-lg \\\" \\r\\n                            placeholder=\\\"password\\\"\\r\\n                            name=\\\"password\\\"\\r\\n                            value = {this.state.password} \\r\\n                            onChange = {this.onChange}\\r\\n                        \\r\\n                            \\r\\n                        />  \\r\\n                        \\r\\n                        \\r\\n                        \\r\\n                        \\r\\n\\r\\n                    \\r\\n                        <input type = \\\"submit\\\" value= \\\"Login\\\" className = \\\"btn btn-info btn-block mt-4\\\"/>\\r\\n                    </form> \\r\\n                    <div className = \\\"btn btn-info btn-block mt-4\\\" onClick ={() => {\\r\\n                            this.setState(prevState => ({\\r\\n                                displaySignUp: !prevState.displaySignUp\\r\\n                            }))}}>Sign Up2\\r\\n                    </div>  \\r\\n                </div>\\r\\n            </div>\\r\\n          )\\r\\n      }\\r\\n    return (\\r\\n        \\r\\n                    \\r\\n                    <div>\\r\\n                        <div className = \\\"row \\\">\\r\\n                            <div className = \\\"col-sm\\\"></div>\\r\\n                            <div className = \\\"col-sm\\\">\\r\\n                                <h1>Nectorr</h1>\\r\\n                            </div>\\r\\n                            <div className = \\\"col-sm\\\"></div>\\r\\n                        </div>\\r\\n                        \\r\\n\\r\\n                            \\r\\n                        {display}\\r\\n\\r\\n                        \\r\\n\\r\\n                    </div>\\r\\n\\r\\n    )\\r\\n  }\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\nLogin.propTypes = {\\r\\n    auth: PropTypes.object\\r\\n}\\r\\n\\r\\nconst mapStateToProps = state => ({\\r\\n    auth: state.auth\\r\\n});\\r\\n\\r\\nexport default connect(mapStateToProps, {registerUser, newLoginUser})(withRouter(Login));\",\"import React, { Component } from 'react'\\r\\nimport {searchByName} from \\\"../../actions/profileActions\\\"\\r\\nimport {connect} from 'react-redux';\\r\\nimport {withRouter} from \\\"react-router-dom\\\";\\r\\nimport EditPerson from \\\"../edit-person/EditPerson\\\";\\r\\nimport PropTypes from 'prop-types';\\r\\n class Welcome extends Component {\\r\\n\\r\\n  constructor(props) {\\r\\n    super(props);\\r\\n    this.state = {\\r\\n       \\r\\n        name: \\\"\\\",\\r\\n        nameSubmitted: false\\r\\n    }\\r\\n    \\r\\n    //this.props.addNode(\\\"Books\\\", \\\"Conceptual\\\");\\r\\n    this.onChange = this.onChange.bind(this);\\r\\n    this.onSubmit = this.onSubmit.bind(this);\\r\\n    \\r\\n  }\\r\\n  \\r\\n  \\r\\n\\r\\n  onSubmit(e){\\r\\n    e.preventDefault();\\r\\n\\r\\n    \\r\\n    //console.log(this.props.interests, \\\"interests here\\\");\\r\\n    const profileData = {\\r\\n        name: this.state.name,\\r\\n        email: this.props.auth.user\\r\\n    }\\r\\n    this.props.searchByName(profileData);\\r\\n    this.state.nameSubmitted = true; \\r\\n    \\r\\n  }\\r\\n\\r\\n  onChange(e) {\\r\\n        \\r\\n    this.setState({[e.target.name]: e.target.value});\\r\\n\\r\\n  }\\r\\n  \\r\\n  render() {\\r\\n    const {display2, finalDisplay} = this.state; \\r\\n    let d2; \\r\\n    console.log(this.props.profile.existed);\\r\\n    let display3 = false; \\r\\n    let final = false; \\r\\n    \\r\\n\\r\\n    if(finalDisplay){\\r\\n      d2 = (\\r\\n        <EditPerson currName = {this.state.name}/>\\r\\n      ) \\r\\n      final = true; \\r\\n    }else{\\r\\n\\r\\n    \\r\\n      if(this.props.profile.existed){\\r\\n        display3 = true; \\r\\n        \\r\\n      }else{\\r\\n        console.log(this.state.nameSubmitted);\\r\\n        if(this.state.nameSubmitted && !final){\\r\\n            d2 = (\\r\\n              <div>\\r\\n                <p className = \\\"ml-2 mr-2\\\">\\r\\n                Nice to Meet you!\\r\\n\\r\\n                Next, Id like to know a little more about you!\\r\\n\\r\\n                This basic info will help your friends find you, and will help you find new friends as well!\\r\\n                \\r\\n            \\r\\n                </p>\\r\\n                <div className = \\\"btn btn-info\\\" onClick ={() => {\\r\\n                    \\r\\n                            \\r\\n                    this.setState(prevState => ({\\r\\n                      finalDisplay: !prevState.finalDisplay\\r\\n                    }))\\r\\n                      \\r\\n                  }}>\\r\\n                  Next\\r\\n                </div>\\r\\n                \\r\\n              </div>\\r\\n            )\\r\\n        }\\r\\n      }\\r\\n    }\\r\\n\\r\\n    if(display3 && !final){\\r\\n      d2 = (\\r\\n        <div className = \\\" row mt-5 ml-2 mr-2\\\">\\r\\n        <p className = \\\"ml-2 mr-2\\\">\\r\\n        It looks like someone has already created a placeholder account for you! \\r\\n        Placeholder accounts help users keep up with their IRL friends, even before their \\r\\n        friends have created accounts!\\r\\n\\r\\n    \\r\\n        </p>\\r\\n        <p className = \\\"ml-2 mr-2\\\">\\r\\n           Placeholder accounts may contain some info about you, including who you know, and based on what your friends know about you, \\r\\n           but you can expand or edit this information. \\r\\n\\r\\n    \\r\\n        </p>\\r\\n        <p className = \\\"ml-2 mr-2\\\">\\r\\n           Click below to go to your profile\\r\\n\\r\\n    \\r\\n        </p>\\r\\n        <div className = \\\"col\\\">\\r\\n        \\r\\n          <div className = \\\"btn btn-info\\\" onClick ={() => {\\r\\n                this.props.history.push(\\\"/profile/\\\" + this.props.profile.id);\\r\\n          }}>Go to profile</div>\\r\\n        </div>\\r\\n        </div>\\r\\n      )\\r\\n    }else{\\r\\n      if(!this.state.nameSubmitted && !final){\\r\\n\\r\\n      \\r\\n        d2 = (\\r\\n          <div className = \\\"container \\\">\\r\\n          <div className = \\\"row\\\">\\r\\n            <h1 className = \\\"welcome m-auto\\\">Welcome</h1>  \\r\\n            <p className = \\\"ml-2 mr-2 mt-2 \\\">My name is Nector, and I am here to help you connect!</p>\\r\\n            <p className = \\\"ml-4 mr-2 \\\">What is your name?</p>\\r\\n\\r\\n            <form  className = \\\"m-auto\\\" onSubmit = {this.onSubmit}>\\r\\n              <input \\r\\n\\r\\n                autoComplete = \\\"new-password\\\"\\r\\n                type =\\\"text\\\"\\r\\n                className=\\\"form-control form-control-lg m-auto\\\" \\r\\n                placeholder=\\\"name\\\"\\r\\n                name=\\\"name\\\"\\r\\n                value = {this.state.name} \\r\\n                onChange = {this.onChange}\\r\\n\\r\\n\\r\\n              />          \\r\\n              <input type = \\\"submit\\\" value= \\\"Submit\\\" className = \\\"btn btn-info btn-block mt-4\\\" />\\r\\n            </form>                     \\r\\n                                  \\r\\n                                  \\r\\n                                  \\r\\n                                  \\r\\n                                  \\r\\n                                \\r\\n                                \\r\\n            \\r\\n          </div>\\r\\n          \\r\\n            \\r\\n        </div>\\r\\n        )\\r\\n      }\\r\\n    }\\r\\n    return (\\r\\n      <div>\\r\\n        {d2}\\r\\n      </div>\\r\\n\\r\\n      \\r\\n      \\r\\n    )\\r\\n  }\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\nWelcome.propTypes = {\\r\\n  profile: PropTypes.object,\\r\\n  auth: PropTypes.object\\r\\n}\\r\\n\\r\\nconst mapStateToProps = state => ({\\r\\n  profile: state.profile,\\r\\n  auth: state.auth\\r\\n});\\r\\n\\r\\nexport default connect(mapStateToProps, {searchByName})(withRouter(Welcome));\",\"import React, { Component } from 'react'\\r\\nimport \\\"./HomeStyles.css\\\";\\r\\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\\r\\nimport AddPerson from \\\"../add-person/AddPerson\\\";\\r\\nimport Profiles from \\\"../profiles/Profiles\\\";\\r\\nimport EditPerson from \\\"../edit-person/EditPerson\\\";\\r\\nimport SearchPeople from \\\"../search-people/SearchPeople\\\"\\r\\nimport {withRouter, Link} from \\\"react-router-dom\\\";\\r\\nclass Home extends Component {\\r\\n    \\r\\n    constructor(props) {\\r\\n        super(props);\\r\\n        this.state = {\\r\\n           \\r\\n           \\r\\n        \\r\\n        }\\r\\n        \\r\\n        \\r\\n    }\\r\\n    \\r\\n  \\r\\n    render() {\\r\\n        const {displayEditPerson, displayProfiles, displaySearch} = this.state; \\r\\n        \\r\\n        let box; \\r\\n\\r\\n        if(displayEditPerson){\\r\\n            box = (\\r\\n                <div>\\r\\n                    \\r\\n                    <button className = \\\"btn btn-dark listButton bn-info\\\" onClick ={() => {\\r\\n                        this.setState(prevState => ({\\r\\n                            displayEditPerson: !prevState.displayEditPerson\\r\\n                        }))}}>\\r\\n                        \\r\\n                        Back\\r\\n                    </button>\\r\\n                    <AddPerson />\\r\\n                </div>\\r\\n            )\\r\\n        }\\r\\n        \\r\\n        if(displayProfiles){\\r\\n            box = (\\r\\n                <div>\\r\\n                    \\r\\n                    {/* <button className = \\\"btn btn-dark listButton bn-info\\\" onClick ={() => {\\r\\n                        this.setState(prevState => ({\\r\\n                            displayProfiles: !prevState.displayProfiles\\r\\n                        }))}}>\\r\\n                        \\r\\n                        Back\\r\\n                    </button> */}\\r\\n                    <Link to=\\\"/\\\" className = \\\"btn btn-dark listButton bn-info\\\">Back</Link>\\r\\n                        \\r\\n                        <Route exact path = \\\"/\\\" component = {Profiles} />\\r\\n                        <Route exact path = '/search-person' component = {SearchPeople} />\\r\\n                        <Route exact path = \\\"/add-person\\\" component = {AddPerson} />\\r\\n                        \\r\\n                    \\r\\n                    \\r\\n                </div>\\r\\n            )\\r\\n        }\\r\\n\\r\\n        if(displaySearch){\\r\\n            box = (\\r\\n                <div>\\r\\n                    \\r\\n                    <button className = \\\"btn btn-dark listButton bn-info\\\" onClick ={() => {\\r\\n                        this.setState(prevState => ({\\r\\n                            displaySearch: !prevState.displaySearch\\r\\n                        }))}}>\\r\\n                        \\r\\n                        Back\\r\\n                    </button>\\r\\n                    <SearchPeople />\\r\\n                </div>\\r\\n            )\\r\\n        }\\r\\n\\r\\n        if(!displayEditPerson && !displayProfiles && !displaySearch){\\r\\n            box = (\\r\\n                <div >\\r\\n                    <h1 className = \\\" display-4 text-center\\\">Nector</h1>\\r\\n                                        \\r\\n                    \\r\\n                        <div className = \\\"row butts align-items-center\\\">\\r\\n                        \\r\\n                            <div className = \\\"col-4\\\"> </div>                \\r\\n                            <div className = \\\"col-4 align-items-center\\\">\\r\\n                                \\r\\n                                <button className = \\\"btn btn-dark listButton bn-info\\\" onClick ={() => {\\r\\n                                    this.setState(prevState => ({\\r\\n                                        displayEditPerson: !prevState.displayEditPerson\\r\\n                                    }))}}>\\r\\n                                    \\r\\n                                    Add Person\\r\\n                                </button>\\r\\n                                <button className = \\\"btn btn-dark listButton bn-info\\\" onClick ={() => {\\r\\n                                    this.setState(prevState => ({\\r\\n                                        displayProfiles: !prevState.displayProfiles\\r\\n                                    }))}}>\\r\\n                                    \\r\\n                                    List People\\r\\n                                </button>\\r\\n                                <button className = \\\"btn btn-dark listButton bn-info\\\" onClick ={() => {\\r\\n                                    this.setState(prevState => ({\\r\\n                                        displaySearch: !prevState.displaySearch\\r\\n                                    }))}}>\\r\\n                                    \\r\\n                                    Search People\\r\\n                                </button>\\r\\n                                \\r\\n                            </div>\\r\\n                        </div>   \\r\\n                    \\r\\n                </div> \\r\\n            )               \\r\\n        }\\r\\n\\r\\n        return (\\r\\n            <div className = \\\"hold bg-dark\\\">\\r\\n                <div className = \\\"row\\\">\\r\\n                    <div className = \\\"col-4\\\">\\r\\n                        {/* <div className = \\\"addPerson\\\" >\\r\\n                            <Dashboard />\\r\\n                        </div> */}\\r\\n                    \\r\\n                    </div> \\r\\n\\r\\n                    <div className = \\\"col-4 \\\">\\r\\n                        \\r\\n                        <div className = \\\"profileContainer container\\\">\\r\\n                            {box}\\r\\n                            \\r\\n                            \\r\\n                                \\r\\n\\r\\n                            \\r\\n\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    \\r\\n                </div>\\r\\n            </div>\\r\\n        )\\r\\n  }\\r\\n}\\r\\n\\r\\n\\r\\nexport default withRouter(Home); \",\"import React, { Component } from 'react';\\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\\nimport { Provider} from 'react-redux';\\nimport store from './store';\\nimport jwt_decode from 'jwt-decode';\\nimport setAuthToken from './utils/setAuthToken';\\nimport {setCurrentUser} from './actions/authActions';\\nimport Profiles from \\\"./components/profiles/Profiles\\\";\\nimport SearchPeople from './components/search-people/SearchPeople';\\nimport Login from './components/home/Login';\\nimport Welcome from \\\"./components/home/Welcome\\\";\\nimport Home from \\\"./components/home/Home\\\";\\n\\nimport './App.css';\\n\\n//check for token\\nif(localStorage.jwtToken) {\\n  //set auth token header auth\\n  setAuthToken(localStorage.jwtToken);\\n  //decode token and get user info and exp\\n  const decoded = jwt_decode(localStorage.jwtToken);\\n  //set user and isAuthenticated\\n  store.dispatch(setCurrentUser(decoded));\\n\\n}\\n\\nclass App extends Component {\\n  render() {\\n    return (\\n      <Provider store = {store}>\\n        {/* <Router>\\n          <div className=\\\"App bg-dark\\\">\\n            <Navbar />\\n            <Route exact path = '/' component = {Landing}/>\\n            <div className = 'container-fluid bg-dark'>\\n              <Route exact path = '/register' component = {Register} />\\n              <Route exact path = '/login' component = {Login} />\\n              <Route exact path = '/profiles' component = {Profiles} />\\n              <Route exact path = '/profile/:handle' component = {Profile} />\\n              <Route exact path = '/add-person' component = {AddPerson} />\\n              <Switch>\\n                <PrivateRoute exact path = '/dashboard' component = {Dashboard} />\\n              </Switch>\\n              <Switch>\\n                <PrivateRoute exact path = '/create-profile' component = {CreateProfile} />\\n              </Switch>\\n              <Switch>\\n                <PrivateRoute exact path = '/edit-profile' component = {EditProfile} />\\n              </Switch>\\n              <Switch>\\n                <PrivateRoute exact path = '/add-experience' component = {AddExperience} />\\n              </Switch>\\n\\n            </div>\\n            <Footer />\\n          </div>\\n        </Router> */}\\n        <div className = \\\"full bg-dark\\\">\\n          \\n            <div>\\n              <Router>\\n              <div className = \\\"hold bg-dark\\\">\\n                <div className = \\\"row\\\">\\n                    <div className = \\\"col-4\\\">\\n                        {/* <div className = \\\"addPerson\\\" >\\n                            <Dashboard />\\n                        </div> */}\\n                    \\n                    </div> \\n                    \\n                      <div className = \\\"col-4 \\\">\\n                          \\n                      <div className = \\\"profileContainer container\\\">\\n                        <div>\\n                          <Route exact path = '/' component = {Login} />\\n                          <Route exact path = '/profile/:id' component = {Profiles} />\\n                          <Route exact path = '/search-person' component = {SearchPeople} />\\n                          <Route exact path = '/welcome' component = {Welcome} />\\n                        </div>\\n                      </div>    \\n\\n                          \\n\\n                      </div>\\n                    \\n\\n                    \\n                </div>\\n             </div>\\n\\n\\n                \\n              </Router>\\n            </div>\\n            \\n          \\n        </div>\\n        \\n        \\n      </Provider>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{127:function(e,t,a){e.exports=a(233)},132:function(e,t,a){},221:function(e,t,a){},225:function(e,t,a){},227:function(e,t,a){},229:function(e,t,a){},231:function(e,t,a){},233:function(e,t,a){\"use strict\";a.r(t);var n=a(0),r=a.n(n),o=a(121),s=a.n(o),l=(a(132),a(3)),i=a(4),c=a(6),u=a(5),m=a(7),p=a(236),d=a(235),h=a(11),f=a(27),b=a(124),E=a(14),v=function(e){return void 0===e||null===e||\"object\"===typeof e&&0===Object.keys(e).length||\"string\"===typeof e&&0===e.trim().length},g={isAuthenticated:!1,id:\"\",user:{}},y={},N={profile:null,profiles:null,loading:!1,interests:[],groups:\"\",network:[],id:\"\",matches:[],existed:!1},C={node:null},O={tree:\"\"},j=Object(f.c)({auth:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:g,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case\"SET_CURRENT_USER\":return Object(E.a)({},e,{isAuthenticated:!v(t.payload),user:t.payload});case\"GET_USER_ID\":return Object(E.a)({},e,{id:t.payload});default:return e}},errors:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:y,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case\"GET_ERRORS\":return t.payload;default:return e}},profile:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:N,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case\"PROFILE_LOADING\":return Object(E.a)({},e,{loading:!0});case\"GET_PROFILES\":case\"GET_PROFILE\":return Object(E.a)({},e,{profile:t.payload,loading:!1});case\"ADD_INTEREST\":return Object(E.a)({},e,{interests:e.interests.concat(t.payload)});case\"GET_INTERESTS\":return Object(E.a)({},e);case\"GET_GROUPS\":return Object(E.a)({},e,{groups:t.payload});case\"GET_NETWORK\":return Object(E.a)({},e,{network:t.payload});case\"GET_ID\":return Object(E.a)({},e,{id:t.payload.id,existed:t.payload.existed});case\"GET_MATCHES\":return Object(E.a)({},e,{matches:t.payload});default:return e}},node:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:C,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case\"GET_NODE\":return Object(E.a)({},e,{node:t.payload});default:return e}},tree:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:O,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case\"GET_TREE\":case\"GET_TEST\":return Object(E.a)({},e,{tree:t.payload});default:return e}}}),S=[b.a],k=Object(f.e)(j,{},Object(f.d)(f.a.apply(void 0,S))),w=a(47),T=a.n(w),R=a(9),P=a.n(R),x=function(e){e?P.a.defaults.headers.common.Authorization=e:delete P.a.defaults.headers.common.Authorization},G=function(e){return{type:\"SET_CURRENT_USER\",payload:e}},D=(a(158),function(e,t){return function(t){console.log(\"is this working\"),P.a.post(\"/api/profiles/txt\",e).then(function(e){return console.log(\"derr\")}).catch(function(e){return t({type:\"GET_ERRORS\",payload:{}})})}}),_=function(e){return function(t){t({type:\"ADD_INTEREST\",payload:{interests:e}})}},I=function(){return function(e){e({type:\"GET_INTERESTS\"})}},F=function(){return function(e){P.a.get(\"/api/profiles/all\").then(function(t){return e({type:\"GET_PROFILES\",payload:t.data})}).catch(function(t){return e({type:\"GET_ERRORS\",payload:t.response.data})})}},U=a(234),B=(a(45),n.Component,a(13)),A=a(2),M=a(237),q=a(33),L=a.n(q),W=(a(221),function(e){var t=e.name,a=e.placeholder,n=e.value,o=(e.label,e.error,e.info,e.type),s=e.onChange,l=e.disabled;return r.a.createElement(\"div\",{className:\"form-group\"},r.a.createElement(\"input\",{autoComplete:\"new-password\",type:o,className:L()(\"form-control form-control-lg\"),placeholder:a,name:t,value:n,onChange:s,disabled:l}))});W.defaultProps={type:\"text\"};var Q=W,z=function(e){var t=e.name,a=e.value,n=(e.error,e.info,e.onChange),o=e.options.map(function(e){return r.a.createElement(\"option\",{key:e.label,value:e.value},e.label)});return r.a.createElement(\"div\",{className:\"form-group\"},r.a.createElement(\"select\",{className:L()(\"form-control form-control-lg p-1 \"),name:t,value:a,onChange:n},o))},H=(a(46),function(e,t){return function(a){P.a.post(\"/api/nodes/\",{name:e,parent:t}).then(function(e){return a({type:\"IS_UPDATED\",payload:e.data})}).catch(function(e){return a({type:\"GET_ERRORS\",payload:e.response.data})})}}),J=function(){return function(e){P.a.get(\"/api/nodes/\").then(function(t){return e({type:\"GET_NODE\",payload:t.data})}).catch(function(t){return e({type:\"GET_NODE\",payload:null})})}},K=function(){return function(e){P.a.get(\"/api/tree/\").then(function(t){return e({type:\"GET_TREE\",payload:t.data})}).catch(function(t){return e({type:\"GET_TREE\",payload:null})})}},$=function(){return function(e){P.a.get(\"/api/tree/test\").then(function(t){return e({type:\"GET_TREE\",payload:t.data})}).catch(function(t){return e({type:\"GET_TREE\",payload:null})})}},V=function(e){function t(e){var a;return Object(l.a)(this,t),(a=Object(c.a)(this,Object(u.a)(t).call(this,e))).getDataFromChild=function(e){var t=[a.props.tree2.name,e];a.props.sendDataToParent(t),a.refs.foob.style=\"background-color: red\"},a.getUpdateFromChild=function(){a.props.updateParent()},a.state={name:\"\",parentName:\"\",interests:[]},a.onChange=a.onChange.bind(Object(A.a)(Object(A.a)(a))),a.onSubmit=a.onSubmit.bind(Object(A.a)(Object(A.a)(a))),a}return Object(m.a)(t,e),Object(i.a)(t,[{key:\"componentDidMount\",value:function(){}},{key:\"onSubmit\",value:function(e){e.preventDefault();var t={name:this.state.name};this.props.addNode(t.name,this.state.parentName),this.props.updateParent()}},{key:\"onChange\",value:function(e){this.setState(Object(B.a)({},e.target.name,e.target.value))}},{key:\"render\",value:function(){var e,t,a=this,n=this.state.displayChildren;\"\"!==this.props.tree2&&(t=this.props.tree2.children.map(function(e){return r.a.createElement(\"div\",{key:e.name},r.a.createElement(X,{updateParent:a.getUpdateFromChild,sendDataToParent:a.getDataFromChild,key:e.name,tree2:e}))})),e=n?r.a.createElement(\"div\",{className:\"nodeContainer\"},t,r.a.createElement(\"form\",{className:\"newChild\",onSubmit:this.onSubmit},r.a.createElement(\"div\",{className:\"row derp\"},r.a.createElement(\"input\",{className:\"form-control squish form-control-lg\",placeholder:\"name\",name:\"name\",value:this.state.name,onChange:this.onChange,autoComplete:\"off\"}),r.a.createElement(\"input\",{type:\"submit\",value:\"+\",className:\"btn btn-info butt\"})))):r.a.createElement(\"div\",null);var o=\"test\";return\"\"!==this.props.tree2&&(o=this.props.tree2.name,this.state.parentName=o),r.a.createElement(\"div\",null,r.a.createElement(\"div\",{className:\"d-flex nodeContainer flex-row ml-2 bd-highlight mb-2\"},r.a.createElement(\"button\",{type:\"button\",id:\"foo\",ref:\"foob\",className:\"btn btn-info ml-2\",onClick:function(){a.setState(function(e){return{displayChildren:!e.displayChildren}})}},o),r.a.createElement(\"button\",{className:\"btn .text-secondary btn-info butt2\",onClick:function(){a.refs.foob.style=\"background-color: red\",a.props.addInterest(o),a.props.sendDataToParent([o])}},\">\")),r.a.createElement(\"div\",{className:\"col nodeStack\"},e))}}]),t}(n.Component),X=Object(h.b)(function(e){return{interests:e.interests}},{addNode:H,getNodes:J,getTree:K,test:$,addInterest:_,getInterests:I})(Object(M.a)(V)),Y=X,Z=function(e){function t(e){var a;return Object(l.a)(this,t),(a=Object(c.a)(this,Object(u.a)(t).call(this,e))).getDataFromChild=function(e){console.log(\"child being sent: \",e),void 0===a.state.interests[0]?a.state.interests.push(e):(!function e(t,a){var n=!1,r=!1,o=1,s=!1;for(console.log(a,t),void 0!==a[1]&&void 0!==t[o]||(s=!0,console.log(\"true\"));!n&&!r&&!s;)console.log(\"childtree\",a[1][0],\"parenttree\",t[o][0]),console.log(\"makes it here?\"),a[1][0]===t[o][0]&&(n=!0),1==t.length||o==t.length-1||n?r=!0:o+=1;console.log(\"makes it here2?\"),n?(console.log(\"i\",o),e(t[o],a[1])):t.push(a[1])}(a.state.interests[0],e),console.log(a.state.interests,\"after mergeTree\"))},a.getUpdateFromChild=function(){a.props.test()},a.state={name:\"\",sex:\"male\",age:\"\",city:\"\",state:\"\",interests:[],bio:\"\",errors:{},derr:\"\"},a.onChange=a.onChange.bind(Object(A.a)(Object(A.a)(a))),a.onSubmit=a.onSubmit.bind(Object(A.a)(Object(A.a)(a))),a.onSelectChange=a.onSelectChange.bind(Object(A.a)(Object(A.a)(a))),a}return Object(m.a)(t,e),Object(i.a)(t,[{key:\"componentDidMount\",value:function(){this.props.test()}},{key:\"componentWillReceiveProps\",value:function(e){this.setState({derr:this.derr}),e.errors&&this.setState({errors:e.errors})}},{key:\"onSubmit\",value:function(e){e.preventDefault();var t={name:this.state.name,sex:this.state.sex,age:this.state.age,city:this.state.city,state:this.state.state,interests:this.state.interests,bio:this.state.bio};console.log(t.interests),this.props.createProfile(t,this.props.history)}},{key:\"onChange\",value:function(e){this.setState(Object(B.a)({},e.target.name,e.target.value))}},{key:\"onSelectChange\",value:function(e){this.setState({status:e.target.value})}},{key:\"render\",value:function(){var e=this.state.errors,t=this.props.tree;return r.a.createElement(\"div\",{className:\"add-person\"},r.a.createElement(\"div\",{className:\"container\"},r.a.createElement(\"div\",{className:\"row\"},r.a.createElement(\"div\",{className:\"col-md-8 m-auto\"},r.a.createElement(\"h1\",{className:\"display-4 text-center\"},\"Add Person\"),r.a.createElement(\"p\",{className:\"lead text-center\"},\"enter info\"),r.a.createElement(\"small\",{className:\"d-block pb-3\"},\"* = required fields\"),r.a.createElement(\"form\",{onSubmit:this.onSubmit},r.a.createElement(Q,{placeholder:\"name\",name:\"name\",value:this.state.name,onChange:this.onChange,error:e.name,info:\"name\",autoComplete:\"off\"}),r.a.createElement(z,{placeholder:\"sex\",name:\"sex\",value:this.state.sex,onChange:this.onChange,options:[{label:\"male\",value:\"male\"},{label:\"female\",value:\"female\"}],error:e.sex,info:\"sex\",className:\"selector\"}),r.a.createElement(Q,{placeholder:\"age\",name:\"age\",value:this.state.age,onChange:this.onChange,error:e.age,info:\"age\"}),r.a.createElement(Q,{placeholder:\"city\",name:\"city\",value:this.state.city,onChange:this.onChange,error:e.city,info:\"city\"}),r.a.createElement(Q,{placeholder:\"state\",name:\"state\",value:this.state.state,onChange:this.onChange,error:e.state,info:\"state\"}),r.a.createElement(\"input\",{type:\"submit\",value:\"Submit\",className:\"btn btn-info btn-block mt-4\"}))))),r.a.createElement(\"br\",null),r.a.createElement(\"div\",{className:\"interests\"},r.a.createElement(\"div\",{className:\"row\"},r.a.createElement(\"div\",{className:\"col\"},r.a.createElement(\"br\",null),r.a.createElement(\"h1\",{className:\"display-4 text-center\"},\"Interests\"),r.a.createElement(Y,{updateParent:this.getUpdateFromChild,sendDataToParent:this.getDataFromChild,tree2:t.tree}),r.a.createElement(\"div\",{className:\"container\"})))))}}]),t}(n.Component),ee=Object(h.b)(function(e){return{profile:e.profile,errors:e.errors,tree:e.tree,interests:e.interests}},{createProfile:D,addNode:H,test:$,getInterests:I})(Object(M.a)(Z)),te=function(e){function t(e){var a;return Object(l.a)(this,t),(a=Object(c.a)(this,Object(u.a)(t).call(this,e))).state={currentProfile:\"\"},a}return Object(m.a)(t,e),Object(i.a)(t,[{key:\"render\",value:function(){var e,t=this;if(this.state.displayChildren){var a=this.props.current1.results.map(function(e){return r.a.createElement(\"div\",{className:\"btn  btn-info mt-2 \"},e)});e=r.a.createElement(\"div\",null,a)}return r.a.createElement(\"div\",null,r.a.createElement(\"div\",{className:\"btn btn-info\",onClick:function(){t.setState(function(e){return{displayChildren:!e.displayChildren}})}},\" \",this.props.current1.name),r.a.createElement(\"div\",{className:\"  mb-2 ml-3\"},e))}}]),t}(n.Component),ae=Object(h.b)(function(e){return{profile:e.profile,auth:e.auth}})(te),ne=function(e){function t(e){var a;return Object(l.a)(this,t),(a=Object(c.a)(this,Object(u.a)(t).call(this,e))).getDataFromChild=function(e){console.log(e);var t=[a.props.tree2.name,e];a.props.sendDataToParent(t),a.refs.foob.style=\"background-color: red\"},a.state={name:\"\",parentName:\"\"},a.onChange=a.onChange.bind(Object(A.a)(Object(A.a)(a))),a.onSubmit=a.onSubmit.bind(Object(A.a)(Object(A.a)(a))),a}return Object(m.a)(t,e),Object(i.a)(t,[{key:\"componentDidMount\",value:function(){this.props.getProfiles()}},{key:\"onSubmit\",value:function(e){e.preventDefault();var t={name:this.state.name};this.props.addNode(t.name,this.state.parentName)}},{key:\"onChange\",value:function(e){this.setState(Object(B.a)({},e.target.name,e.target.value))}},{key:\"render\",value:function(){var e,t,a,n=this,o=this.state.displayChildren;if(\"\"!==this.props.tree2){console.log(this.props.tree2,\"tree2\");var s,l=this.props.tree2.length;console.log(\"len\",l),l>1&&(s=this.props.tree2.slice(1,l),console.log(\"newslice\",s),a=s.map(function(e){return r.a.createElement(\"div\",{key:e.name},r.a.createElement(re,{sendDataToParent:n.getDataFromChild,key:e[0],tree2:e}))}))}e=o?r.a.createElement(\"div\",null,a):r.a.createElement(\"div\",null);var i,c=\"test\";switch(\"\"!==this.props.tree2&&(c=this.props.tree2[0],this.state.parentName=c),c){case\"Add\":i=r.a.createElement(U.a,{to:\"/add-person\",className:\"btn  btn-info  ml-2\"},\"Add\");break;case\"All\":i=r.a.createElement(\"div\",{className:\"btn  btn-info  ml-2\",onClick:function(){n.setState(function(e){return{displayChildren:!e.displayChildren}})}},\"All\"),o&&(e=this.props.profile.profile.people.map(function(e){return r.a.createElement(\"div\",{className:\"btn  btn-info mt-2 ml-2\",key:e.name},e.name)}));break;case\"Queries\":i=r.a.createElement(\"button\",{type:\"button\",id:\"foo\",ref:\"foob\",className:\"btn btn-info  ml-2 \",onClick:function(){n.setState(function(e){return{displayChildren:!e.displayChildren}})}},\"Queries\"),o&&(t=this.props.profile.profile.people[this.props.auth.id].queries.map(function(e){return r.a.createElement(ae,{current1:e})}),e=r.a.createElement(\"div\",{className:\"ml-3\"},r.a.createElement(U.a,{to:\"/search-person\",className:\"btn btn-info mb-2\"},\"New Query\"),t));break;case\"New Query\":i=r.a.createElement(U.a,{to:\"/search-person\",className:\"btn btn-info\"},\"New Query\");break;default:i=r.a.createElement(\"button\",{type:\"button\",id:\"foo\",ref:\"foob\",className:\"btn btn-info  ml-2 \",onClick:function(){n.setState(function(e){return{displayChildren:!e.displayChildren}}),\"Add\"===c&&console.log(\"equals\")}},c)}return r.a.createElement(\"div\",null,r.a.createElement(\"div\",{className:\"d-flex  flex-row ml-2 bd-highlight mb-2\"},i),r.a.createElement(\"div\",{className:\"col nodeStack\"},e))}}]),t}(n.Component),re=Object(h.b)(function(e){return{interests:e.interests,profile:e.profile,auth:e.auth}},{addNode:H,getNodes:J,getTree:K,test:$,addInterest:_,getInterests:I,getProfiles:F})(Object(M.a)(ne)),oe=re,se=(a(225),function(e){function t(e){var a;return Object(l.a)(this,t),(a=Object(c.a)(this,Object(u.a)(t).call(this,e))).getDataFromChild=function(e){console.log(\"child being sent: \",e),void 0===a.state.interests[0]?a.state.interests.push(e):(!function e(t,a){var n=!1,r=!1,o=1,s=!1;for(console.log(a,t),void 0!==a[1]&&void 0!==t[o]||(s=!0,console.log(\"true\"));!n&&!r&&!s;)console.log(\"childtree\",a[1][0],\"parenttree\",t[o][0]),console.log(\"makes it here?\"),a[1][0]===t[o][0]&&(n=!0),1==t.length||o==t.length-1||n?r=!0:o+=1;console.log(\"makes it here2?\"),n?(console.log(\"i\",o),e(t[o],a[1])):t.push(a[1])}(a.state.interests[0],e),console.log(a.state.interests,\"after mergeTree\"))},a.getUpdateFromChild=function(){a.props.test()},a.state={name:\"\",sex:\"\",age:\"\",city:\"\",state:\"\",interests:[],bio:\"\",errors:{},derr:\"\"},a.onChange=a.onChange.bind(Object(A.a)(Object(A.a)(a))),a.onSubmit=a.onSubmit.bind(Object(A.a)(Object(A.a)(a))),a.onSelectChange=a.onSelectChange.bind(Object(A.a)(Object(A.a)(a))),a}return Object(m.a)(t,e),Object(i.a)(t,[{key:\"componentDidMount\",value:function(){this.props.test()}},{key:\"componentWillReceiveProps\",value:function(e){this.setState({derr:this.derr}),e.errors&&this.setState({errors:e.errors})}},{key:\"onSubmit\",value:function(e){e.preventDefault();var t={name:this.props.currName,sex:this.state.sex,age:this.state.age,city:this.state.city,state:this.state.state,interests:this.state.interests,bio:this.state.bio};this.props.updateProfile(t),this.props.history.push(\"/profile/\"+this.props.profile.id)}},{key:\"onChange\",value:function(e){this.setState(Object(B.a)({},e.target.name,e.target.value))}},{key:\"onSelectChange\",value:function(e){this.setState({status:e.target.value})}},{key:\"render\",value:function(){var e=this.state.errors,t=this.props.tree;return r.a.createElement(\"div\",{className:\"add-person\"},r.a.createElement(\"div\",{className:\"container\"},r.a.createElement(\"div\",{className:\"row\"},r.a.createElement(\"div\",{className:\"col-md-8 m-auto\"},r.a.createElement(\"h1\",{className:\"display-4 text-center\"},\"Edit Person\"),r.a.createElement(\"p\",{className:\"lead text-center\"},\"enter info\"),r.a.createElement(\"small\",{className:\"d-block pb-3\"},\"* = required fields\"),r.a.createElement(\"form\",{onSubmit:this.onSubmit},r.a.createElement(Q,{placeholder:\"name\",name:\"name\",value:this.state.name,onChange:this.onChange,error:e.name,info:\"name\",autoComplete:\"off\"}),r.a.createElement(z,{placeholder:\"sex\",name:\"sex\",value:this.state.sex,onChange:this.onChange,options:[{label:\"male\",value:\"male\"},{label:\"female\",value:\"female\"}],error:e.sex,info:\"sex\"}),r.a.createElement(Q,{placeholder:\"age\",name:\"age\",value:this.state.age,onChange:this.onChange,error:e.age,info:\"age\"}),r.a.createElement(Q,{placeholder:\"city\",name:\"city\",value:this.state.city,onChange:this.onChange,error:e.city,info:\"city\"}),r.a.createElement(Q,{placeholder:\"state\",name:\"state\",value:this.state.state,onChange:this.onChange,error:e.state,info:\"state\"}),r.a.createElement(\"input\",{type:\"submit\",value:\"Submit\",className:\"btn btn-info btn-block mt-4\"}))))),r.a.createElement(\"br\",null),r.a.createElement(\"div\",{className:\"interests\"},r.a.createElement(\"div\",{className:\"row\"},r.a.createElement(\"div\",{className:\"col\"},r.a.createElement(\"br\",null),r.a.createElement(\"h1\",{className:\"display-4 text-center\"},\"Interests\"),r.a.createElement(Y,{updateParent:this.getUpdateFromChild,sendDataToParent:this.getDataFromChild,tree2:t.tree}),r.a.createElement(\"div\",{className:\"container\"})))))}}]),t}(n.Component)),le=Object(h.b)(function(e){return{profile:e.profile,errors:e.errors,tree:e.tree,interests:e.interests}},{updateProfile:function(e){return function(t){P.a.post(\"/api/profiles/update\",e).then(function(e){return console.log(\"derr\")}).catch(function(e){return t({type:\"GET_ERRORS\",payload:{}})})}},createProfile:D,addNode:H,test:$,getInterests:I})(Object(M.a)(se)),ie=function(e){function t(e){var a;return Object(l.a)(this,t),(a=Object(c.a)(this,Object(u.a)(t).call(this,e))).state={},a}return Object(m.a)(t,e),Object(i.a)(t,[{key:\"render\",value:function(){var e,t,a=this,n=this.state.displayFriends,o=r.a.createElement(\"div\",{className:\"btn personButton btn-info\",onClick:function(){a.setState(function(e){return{displayFriends:!e.displayFriends}})}},this.props.item.name);return e=this.props.item.friends.map(function(e){return r.a.createElement(\"div\",null,r.a.createElement(\"div\",{className:\"btn  ml-4 personButton btn-info\",onClick:function(){}},e.name))}),console.log(n),t=n?e:r.a.createElement(\"div\",null),r.a.createElement(\"div\",null,o,t)}}]),t}(n.Component),ce=function(e){function t(e){var a;Object(l.a)(this,t),(a=Object(c.a)(this,Object(u.a)(t).call(this,e))).state={friendGroupName:\"\",userName:a.props.current},a.onChange=a.onChange.bind(Object(A.a)(Object(A.a)(a))),a.onSubmit=a.onSubmit.bind(Object(A.a)(Object(A.a)(a)));var n={userName:a.state.userName};return a.props.getFriendGroups(n),a}return Object(m.a)(t,e),Object(i.a)(t,[{key:\"componentDidMount\",value:function(){}},{key:\"onSubmit\",value:function(e){e.preventDefault();var t={friendGroupName:this.state.friendGroupName,userName:this.props.current};this.props.addFriendGroup(t)}},{key:\"onChange\",value:function(e){this.setState(Object(B.a)({},e.target.name,e.target.value))}},{key:\"render\",value:function(){var e,t=this,a=this.props.profile.groups,n=this.state,o=n.displayGroups;n.displayFriends;if(console.log(a),o&&\"\"!==a){var s=a.map(function(e){return r.a.createElement(\"div\",null,r.a.createElement(ie,{item:e}))});e=r.a.createElement(\"div\",null,r.a.createElement(\"div\",{className:\"ml-4\"},s),r.a.createElement(\"form\",{className:\"newChild mt-1 ml-4\",onSubmit:this.onSubmit},r.a.createElement(\"div\",{className:\"row derp\"},r.a.createElement(\"input\",{className:\"form-control squish2 form-control-lg\",placeholder:\"new group\",name:\"friendGroupName\",value:this.state.friendGroupName,onChange:this.onChange,autoComplete:\"off\"}),r.a.createElement(\"input\",{type:\"submit\",value:\"+\",className:\"btn btn-info butt\"}))))}return r.a.createElement(\"div\",null,r.a.createElement(\"div\",{className:\"btn btn-info ml-2\",onClick:function(){t.setState(function(e){return{displayGroups:!e.displayGroups}})}},\"Friends\"),e)}}]),t}(n.Component),ue=(Object(h.b)(function(e){return{interests:e.interests,groups:e.groups,profile:e.profile}},{addFriendGroup:function(e){return function(t){P.a.post(\"/api/profiles/addFriendGroup\",e).then(function(e){return console.log(\"derr\")}).catch(function(e){return t({type:\"GET_ERRORS\",payload:{}})})}},getFriendGroups:function(e){return function(t){P.a.post(\"/api/profiles/getFriendGroups\",e).then(function(e){return t({type:\"GET_GROUPS\",payload:e.data})}).catch(function(e){return t({type:\"GET_ERRORS\",payload:{}})})}}})(Object(M.a)(ce)),a(227),function(e){function t(e){var a;return Object(l.a)(this,t),(a=Object(c.a)(this,Object(u.a)(t).call(this,e))).getDataFromChild=function(e){console.log(\"child being sent: \",e),void 0===a.state.interests[0]?a.state.interests.push(e):function e(t,a){var n=!1,r=!1,o=1,s=!1;for(console.log(a,t),void 0!==a[1]&&void 0!==t[o]||(s=!0,console.log(\"true\"));!n&&!r&&!s;)console.log(\"childtree\",a[1][0],\"parenttree\",t[o][0]),console.log(\"makes it here?\"),a[1][0]===t[o][0]&&(n=!0),1==t.length||o==t.length-1||n?r=!0:o+=1;console.log(\"makes it here2?\"),n?(console.log(\"i\",o),e(t[o],a[1])):t.push(a[1])}(a.state.interests[0],e)},a.state={queryName:\"\",name:\"\",sex:\"\",age:\"\",city:\"\",state:\"\",interests:[],bio:\"\",errors:{}},a.props.test(),a.onChange=a.onChange.bind(Object(A.a)(Object(A.a)(a))),a.onSubmit=a.onSubmit.bind(Object(A.a)(Object(A.a)(a))),a.onSelectChange=a.onSelectChange.bind(Object(A.a)(Object(A.a)(a))),a}return Object(m.a)(t,e),Object(i.a)(t,[{key:\"componentDidMount\",value:function(){}},{key:\"componentWillReceiveProps\",value:function(e){e.errors&&this.setState({errors:e.errors})}},{key:\"onSubmit\",value:function(e){e.preventDefault(),this.setState(function(e){return{displayResults:!e.displayResults}});var t={queryName:this.state.queryName,name:this.state.name,sex:this.state.sex,age:this.state.age,city:this.state.city,state:this.state.state,currentUserId:this.props.auth.id,interests:this.state.interests,bio:this.state.bio};this.props.searchPeople(t)}},{key:\"onChange\",value:function(e){this.setState(Object(B.a)({},e.target.name,e.target.value))}},{key:\"onSelectChange\",value:function(e){this.setState({status:e.target.value})}},{key:\"render\",value:function(){var e,t=this.state,a=t.errors,n=t.displayResults,o=this.props.tree;if(n){var s=this.props.profile.matches.map(function(e){return r.a.createElement(\"div\",{className:\"btn personButton btn-info\"},e)});e=r.a.createElement(\"div\",{className:\"add-person\"},r.a.createElement(U.a,{to:\"profile/\"+this.props.auth.id,className:\"btn btn-info\"},\"Back\"),r.a.createElement(\"div\",{className:\"container\"},r.a.createElement(\"div\",{className:\"row\"},r.a.createElement(\"div\",{className:\"col-6\"},s))))}else e=r.a.createElement(\"div\",{className:\"add-person\"},r.a.createElement(\"div\",{className:\"container\"},r.a.createElement(\"div\",{className:\"row\"},r.a.createElement(\"div\",{className:\"col-md-8 m-auto\"},r.a.createElement(\"h1\",{className:\"display-5 text-center\"},\"Search People\"),r.a.createElement(\"p\",{className:\"lead text-center\"},\"enter info\"),r.a.createElement(\"small\",{className:\"d-block pb-3\"},\"leave blank if irrelevant\"),r.a.createElement(\"form\",{onSubmit:this.onSubmit},r.a.createElement(Q,{placeholder:\"query name\",name:\"queryName\",value:this.state.queryName,onChange:this.onChange,error:a.name,info:\"queryName\",autoComplete:\"off\"}),r.a.createElement(\"div\",{className:\"mt-5\"}),r.a.createElement(Q,{placeholder:\"name\",name:\"name\",value:this.state.name,onChange:this.onChange,error:a.name,info:\"name\",autoComplete:\"off\"}),r.a.createElement(z,{placeholder:\"sex\",name:\"sex\",value:this.state.sex,onChange:this.onChange,options:[{label:\"male\",value:\"male\"},{label:\"female\",value:\"female\"}],error:a.sex,info:\"sex\"}),r.a.createElement(Q,{placeholder:\"age\",name:\"age\",value:this.state.age,onChange:this.onChange,error:a.age,info:\"age\"}),r.a.createElement(Q,{placeholder:\"city\",name:\"city\",value:this.state.city,onChange:this.onChange,error:a.city,info:\"city\"}),r.a.createElement(Q,{placeholder:\"state\",name:\"state\",value:this.state.state,onChange:this.onChange,error:a.state,info:\"state\"}),r.a.createElement(\"input\",{type:\"submit\",value:\"Submit\",className:\"btn btn-info btn-block mt-4\"}))))),r.a.createElement(\"br\",null),r.a.createElement(\"div\",{className:\"interests\"},r.a.createElement(\"div\",{className:\"row\"},r.a.createElement(\"div\",{className:\"col\"},r.a.createElement(\"br\",null),r.a.createElement(\"h1\",{className:\"display-5 text-center\"},\"Interests\"),r.a.createElement(Y,{sendDataToParent:this.getDataFromChild,tree2:o.tree}),r.a.createElement(\"div\",{className:\"container\"})))));return r.a.createElement(\"div\",null,e)}}]),t}(n.Component)),me=Object(h.b)(function(e){return{profile:e.profile,errors:e.errors,tree:e.tree,interests:e.interests,auth:e.auth}},{createProfile:D,addNode:H,test:$,getInterests:I,searchPeople:function(e){return function(t){P.a.post(\"/api/profiles/search\",e).then(function(e){return t({type:\"GET_MATCHES\",payload:e.data})}).catch(function(e){return t({type:\"GET_RESULTS\",payload:null})})}}})(Object(M.a)(ue)),pe=(n.Component,function(e){function t(e){var a;return Object(l.a)(this,t),(a=Object(c.a)(this,Object(u.a)(t).call(this,e))).state={currentProfile:\"\"},a}return Object(m.a)(t,e),Object(i.a)(t,[{key:\"componentDidMount\",value:function(){this.props.getProfiles(),this.props.getNetwork()}},{key:\"render\",value:function(){var e=this,t=this.props.profile,a=t.profile,n=t.network,o=t.loading;console.log(a,\"profile\");var s,l,i,c=this.state,u=c.displayInfo,m=c.displayEdit,p=c.displayNetwork,d=c.displayMore;c.displayInterests;console.log(a,\"new profiles\"),null!=a&&(this.state.currentProfile=a.people[this.props.match.params.id]);(d&&(i=r.a.createElement(\"div\",{className:\" mt-2\"},r.a.createElement(oe,{tree2:this.state.currentProfile.interests[0]}))),p&&(console.log(n,\"network\"),r.a.createElement(oe,{tree2:n})),m)?s=r.a.createElement(\"div\",null,r.a.createElement(\"div\",{className:\"btn btn-info w-25\",onClick:function(){e.setState(function(e){return{displayEdit:!e.displayEdit}})}},\"Back\"),r.a.createElement(le,{current:this.state.currentProfile})):(u&&(l=r.a.createElement(\"div\",{className:\"row\"},r.a.createElement(\"div\",{className:\"col\"},r.a.createElement(\"h4\",null,\" \",this.state.currentProfile.sex),r.a.createElement(\"h4\",null,\" \",this.state.currentProfile.age),r.a.createElement(\"h4\",null,\" \",this.state.currentProfile.city,\", \",this.state.currentProfile.state)))),null===a||o||(s=r.a.createElement(\"div\",null,r.a.createElement(\"h1\",{className:\" display-5 text-center\"},this.state.currentProfile.name),r.a.createElement(\"div\",{className:\"btn btn-info w-25\",onClick:function(){e.setState(function(e){return{displayInfo:!e.displayInfo}})}},\"Basic Info\"),r.a.createElement(\"div\",{className:\"btn btn-info ml-2\",onClick:function(){e.setState(function(e){return{displayEdit:!e.displayEdit}})}},\"Edit Profile\"),l,r.a.createElement(\"div\",null,r.a.createElement(\"div\",{className:\"btn btn-info mt-2 w-25\",onClick:function(){e.setState(function(e){return{displayMore:!e.displayMore}})}},\"More\"),i),void 0,r.a.createElement(\"div\",{className:\"mt-2 w-25\"},r.a.createElement(oe,{tree2:n})))));return r.a.createElement(\"div\",null,r.a.createElement(\"div\",{className:\"listScroll\"},s))}}]),t}(n.Component)),de=Object(h.b)(function(e){return{profile:e.profile,network:e.network}},{getProfiles:F,getNetwork:function(){return function(e){P.a.get(\"/api/profiles/network\").then(function(t){return e({type:\"GET_NETWORK\",payload:t.data})}).catch(function(t){return e({type:\"GET_ERRORS\",payload:{}})})}}})(pe),he=function(e){function t(e){var a;return Object(l.a)(this,t),(a=Object(c.a)(this,Object(u.a)(t).call(this,e))).state={email:\"\",password:\"\",password2:\"\"},a.onChange=a.onChange.bind(Object(A.a)(Object(A.a)(a))),a.onSubmit=a.onSubmit.bind(Object(A.a)(Object(A.a)(a))),a}return Object(m.a)(t,e),Object(i.a)(t,[{key:\"componentDidMount\",value:function(){}},{key:\"componentWillReceiveProps\",value:function(){}},{key:\"onSubmit\",value:function(e){e.preventDefault();var t={email:this.state.email,password:this.state.password,password2:this.state.password2};console.log(this.state.password2.length),this.state.password2.length>0?(this.props.registerUser(t),this.props.history.push(\"/welcome\")):this.props.newLoginUser(t)}},{key:\"onChange\",value:function(e){this.setState(Object(B.a)({},e.target.name,e.target.value))}},{key:\"render\",value:function(){var e,t,a,n=this,o=this.state,s=o.displaySignUp;return o.displayEmailErrors?(t=r.a.createElement(\"p\",{className:\"mb-0 ml-4\"},\" email not found\"),a=r.a.createElement(\"input\",{autoComplete:\"new-password\",type:\"email\",className:\"form-control form-control-lg mb-0 \",placeholder:\"email\",name:\"email\",value:this.state.email,onChange:this.onChange})):a=r.a.createElement(\"input\",{autoComplete:\"new-password\",type:\"email\",className:\"form-control form-control-lg mb-3 \",placeholder:\"email\",name:\"email\",value:this.state.email,onChange:this.onChange}),console.log(this.props.auth.id),\"\"!=this.props.auth.id&&this.props.history.push(\"/profile/\"+this.props.auth.id),e=s?r.a.createElement(\"div\",{className:\" row align-self-center mt-5 \"},r.a.createElement(\"div\",{className:\"col-md-8  m-auto\"},r.a.createElement(\"form\",{onSubmit:this.onSubmit},r.a.createElement(Q,{placeholder:\"email\",name:\"email\",value:this.state.email,onChange:this.onChange,info:\"email\",autoComplete:\"off\"}),r.a.createElement(\"input\",{autoComplete:\"new-password\",type:\"password\",className:\"form-control form-control-lg\",placeholder:\"password\",name:\"password\",value:this.state.password,onChange:this.onChange}),r.a.createElement(\"input\",{autoComplete:\"new-password\",type:\"password\",className:\"form-control form-control-lg mt-2\",placeholder:\"confirm password\",name:\"password2\",value:this.state.password2,onChange:this.onChange}),r.a.createElement(\"input\",{type:\"submit\",value:\"Create account\",className:\"btn btn-info btn-block mt-4\"})))):r.a.createElement(\"div\",{className:\" row align-self-center mt-5 \"},r.a.createElement(\"div\",{className:\"col-md-8  m-auto\"},r.a.createElement(\"form\",{onSubmit:this.onSubmit},a,t,r.a.createElement(\"input\",{autoComplete:\"new-password\",type:\"password\",className:\"form-control form-control-lg \",placeholder:\"password\",name:\"password\",value:this.state.password,onChange:this.onChange}),r.a.createElement(\"input\",{type:\"submit\",value:\"Login\",className:\"btn btn-info btn-block mt-4\"})),r.a.createElement(\"div\",{className:\"btn btn-info btn-block mt-4\",onClick:function(){n.setState(function(e){return{displaySignUp:!e.displaySignUp}})}},\"Sign Up2\"))),r.a.createElement(\"div\",null,r.a.createElement(\"div\",{className:\"row \"},r.a.createElement(\"div\",{className:\"col-sm\"}),r.a.createElement(\"div\",{className:\"col-sm\"},r.a.createElement(\"h1\",null,\"Nectorr\")),r.a.createElement(\"div\",{className:\"col-sm\"})),e)}}]),t}(n.Component),fe=Object(h.b)(function(e){return{auth:e.auth}},{registerUser:function(e){return function(t){P.a.post(\"/api/auth/register\",e).then(function(e){return t({type:\"SET_CURRENT_USER\",payload:e.data})}).catch(function(e){return console.log(\"error\")})}},newLoginUser:function(e){return function(t){P.a.post(\"/api/auth/login\",e).then(function(e){t({type:\"GET_USER_ID\",payload:e.data})}).catch(function(e){return t({type:\"GET_ERRORS\",payload:e.response.data})})}}})(Object(M.a)(he)),be=function(e){function t(e){var a;return Object(l.a)(this,t),(a=Object(c.a)(this,Object(u.a)(t).call(this,e))).state={name:\"\",nameSubmitted:!1},a.onChange=a.onChange.bind(Object(A.a)(Object(A.a)(a))),a.onSubmit=a.onSubmit.bind(Object(A.a)(Object(A.a)(a))),a}return Object(m.a)(t,e),Object(i.a)(t,[{key:\"onSubmit\",value:function(e){e.preventDefault();var t={name:this.state.name,email:this.props.auth.user};this.props.searchByName(t),this.state.nameSubmitted=!0}},{key:\"onChange\",value:function(e){this.setState(Object(B.a)({},e.target.name,e.target.value))}},{key:\"render\",value:function(){var e,t=this,a=this.state,n=(a.display2,a.finalDisplay);console.log(this.props.profile.existed);var o=!1,s=!1;return n?(e=r.a.createElement(le,{currName:this.state.name}),s=!0):this.props.profile.existed?o=!0:(console.log(this.state.nameSubmitted),this.state.nameSubmitted&&!s&&(e=r.a.createElement(\"div\",null,r.a.createElement(\"p\",{className:\"ml-2 mr-2\"},\"Nice to Meet you! Next, Id like to know a little more about you! This basic info will help your friends find you, and will help you find new friends as well!\"),r.a.createElement(\"div\",{className:\"btn btn-info\",onClick:function(){t.setState(function(e){return{finalDisplay:!e.finalDisplay}})}},\"Next\")))),o&&!s?e=r.a.createElement(\"div\",{className:\" row mt-5 ml-2 mr-2\"},r.a.createElement(\"p\",{className:\"ml-2 mr-2\"},\"It looks like someone has already created a placeholder account for you! Placeholder accounts help users keep up with their IRL friends, even before their friends have created accounts!\"),r.a.createElement(\"p\",{className:\"ml-2 mr-2\"},\"Placeholder accounts may contain some info about you, including who you know, and based on what your friends know about you, but you can expand or edit this information.\"),r.a.createElement(\"p\",{className:\"ml-2 mr-2\"},\"Click below to go to your profile\"),r.a.createElement(\"div\",{className:\"col\"},r.a.createElement(\"div\",{className:\"btn btn-info\",onClick:function(){t.props.history.push(\"/profile/\"+t.props.profile.id)}},\"Go to profile\"))):this.state.nameSubmitted||s||(e=r.a.createElement(\"div\",{className:\"container \"},r.a.createElement(\"div\",{className:\"row\"},r.a.createElement(\"h1\",{className:\"welcome m-auto\"},\"Welcome\"),r.a.createElement(\"p\",{className:\"ml-2 mr-2 mt-2 \"},\"My name is Nector, and I am here to help you connect!\"),r.a.createElement(\"p\",{className:\"ml-4 mr-2 \"},\"What is your name?\"),r.a.createElement(\"form\",{className:\"m-auto\",onSubmit:this.onSubmit},r.a.createElement(\"input\",{autoComplete:\"new-password\",type:\"text\",className:\"form-control form-control-lg m-auto\",placeholder:\"name\",name:\"name\",value:this.state.name,onChange:this.onChange}),r.a.createElement(\"input\",{type:\"submit\",value:\"Submit\",className:\"btn btn-info btn-block mt-4\"}))))),r.a.createElement(\"div\",null,e)}}]),t}(n.Component),Ee=Object(h.b)(function(e){return{profile:e.profile,auth:e.auth}},{searchByName:function(e){return function(t){P.a.post(\"/api/profiles/searchByName\",e).then(function(e){return t({type:\"GET_ID\",payload:e.data})}).catch(function(e){return t({type:\"GET_RESULTS\",payload:null})})}}})(Object(M.a)(be)),ve=(a(229),function(e){function t(e){var a;return Object(l.a)(this,t),(a=Object(c.a)(this,Object(u.a)(t).call(this,e))).state={},a}return Object(m.a)(t,e),Object(i.a)(t,[{key:\"render\",value:function(){var e,t=this,a=this.state,n=a.displayEditPerson,o=a.displayProfiles,s=a.displaySearch;return n&&(e=r.a.createElement(\"div\",null,r.a.createElement(\"button\",{className:\"btn btn-dark listButton bn-info\",onClick:function(){t.setState(function(e){return{displayEditPerson:!e.displayEditPerson}})}},\"Back\"),r.a.createElement(ee,null))),o&&(e=r.a.createElement(\"div\",null,r.a.createElement(U.a,{to:\"/\",className:\"btn btn-dark listButton bn-info\"},\"Back\"),r.a.createElement(d.a,{exact:!0,path:\"/\",component:de}),r.a.createElement(d.a,{exact:!0,path:\"/search-person\",component:me}),r.a.createElement(d.a,{exact:!0,path:\"/add-person\",component:ee}))),s&&(e=r.a.createElement(\"div\",null,r.a.createElement(\"button\",{className:\"btn btn-dark listButton bn-info\",onClick:function(){t.setState(function(e){return{displaySearch:!e.displaySearch}})}},\"Back\"),r.a.createElement(me,null))),n||o||s||(e=r.a.createElement(\"div\",null,r.a.createElement(\"h1\",{className:\" display-4 text-center\"},\"Nector\"),r.a.createElement(\"div\",{className:\"row butts align-items-center\"},r.a.createElement(\"div\",{className:\"col-4\"},\" \"),r.a.createElement(\"div\",{className:\"col-4 align-items-center\"},r.a.createElement(\"button\",{className:\"btn btn-dark listButton bn-info\",onClick:function(){t.setState(function(e){return{displayEditPerson:!e.displayEditPerson}})}},\"Add Person\"),r.a.createElement(\"button\",{className:\"btn btn-dark listButton bn-info\",onClick:function(){t.setState(function(e){return{displayProfiles:!e.displayProfiles}})}},\"List People\"),r.a.createElement(\"button\",{className:\"btn btn-dark listButton bn-info\",onClick:function(){t.setState(function(e){return{displaySearch:!e.displaySearch}})}},\"Search People\"))))),r.a.createElement(\"div\",{className:\"hold bg-dark\"},r.a.createElement(\"div\",{className:\"row\"},r.a.createElement(\"div\",{className:\"col-4\"}),r.a.createElement(\"div\",{className:\"col-4 \"},r.a.createElement(\"div\",{className:\"profileContainer container\"},e))))}}]),t}(n.Component));Object(M.a)(ve),a(231);if(localStorage.jwtToken){x(localStorage.jwtToken);var ge=T()(localStorage.jwtToken);k.dispatch(G(ge))}var ye=function(e){function t(){return Object(l.a)(this,t),Object(c.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(m.a)(t,e),Object(i.a)(t,[{key:\"render\",value:function(){return r.a.createElement(h.a,{store:k},r.a.createElement(\"div\",{className:\"full bg-dark\"},r.a.createElement(\"div\",null,r.a.createElement(p.a,null,r.a.createElement(\"div\",{className:\"hold bg-dark\"},r.a.createElement(\"div\",{className:\"row\"},r.a.createElement(\"div\",{className:\"col-4\"}),r.a.createElement(\"div\",{className:\"col-4 \"},r.a.createElement(\"div\",{className:\"profileContainer container\"},r.a.createElement(\"div\",null,r.a.createElement(d.a,{exact:!0,path:\"/\",component:fe}),r.a.createElement(d.a,{exact:!0,path:\"/profile/:id\",component:de}),r.a.createElement(d.a,{exact:!0,path:\"/search-person\",component:me}),r.a.createElement(d.a,{exact:!0,path:\"/welcome\",component:Ee}))))))))))}}]),t}(n.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));s.a.render(r.a.createElement(ye,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},45:function(e,t,a){},46:function(e,t,a){}},[[127,2,1]]]);","extractedComments":[]}